{
    "patent_link": "https://patents.google.com/patent/US5668988A/en",
    "patent_id": "US5668988A",
    "title": "Method for mining path traversal patterns in a web environment by converting an original log sequence into a set of traversal sub-sequences",
    "abstract": "An efficient computer implemented method of mining path traversal patterns in a communications network. The method of the present invention comprises two steps. A method, called MF (standing for maximal forward references), is first used to convert an original sequence of log data into a set of traversal subsequences. Each traversal subsequence represents a maximal forward reference from the starting point of a user access. This step of converting the original log sequence into a set of maximal forward references will filter out the effect of backward references which are mainly made for ease of traveling, and enable us to concentrate on mining meaningful user access sequences. Accordingly, when backward references occur, a forward reference path terminates. This resulting forward reference path is termed a maximal forward reference. After a maximal forward reference is obtained, we back track to the starting point of the forward reference and begin a new forward reference path. In addition, the occurrence of a null source node also indicates the termination of an ongoing forward reference path and the beginning of a new one. Second, methods are developed to determine the frequent traversal patterns, termed large reference sequences, from the maximal forward references obtained above, where a large reference sequence is a reference sequence that appeared a sufficient number of times in the database to exceed a predetermined threshold.",
    "inventors": [
        "Ming-Syan Chen",
        "Philip Shi-lung Yu"
    ],
    "assignee": "International Business Machines Corp",
    "classifications": [
        "G06F16/94",
        "G06F2216/03",
        "Y10S707/99931",
        "Y10S707/99932",
        "Y10S707/99933",
        "Y10S707/99936",
        "Y10S707/99942"
    ],
    "claims": "\n1. A computer-implemented method of determining frequent node traversal patterns for optimizing system design in a communications network coupled to a computer which includes a memory and a trace collector for collecting node traversal sequences, comprising the steps of:\ncollecting and storing the node traversal sequences, each node traversal sequence including an end user identifier, a source node and a destination node;\nsorting the node traversal sequences by said end user identifier into a series of time-ordered pairs, responsive to said steps of collecting and storing;\ndetermining a set of maximal forward references from said series of time-ordered pairs; and\ndetermining a set of large reference sequences from said set of maximal forward references, a large reference sequence being a consecutive subsequence of said maximal forward references which occurs in excess of a predetermined threshold.\n2. The method of claim 1, comprising the step of:\nconstructing a set of maximal reference sequences from said large reference sequences, wherein a maximal reference sequence is not a subset of another maximal reference sequence.\n3. The method of claim 1 wherein said computer comprises a gateway to a wide area network.\n4. The method of claim 1 wherein said step of determining said set of maximal forward references comprises the steps of:\ninitializing a current forward reference path to a null value and setting a forward traversal flag;\nfor each of said time-ordered pairs, performing the following steps:\nif the source node is null, storing the current forward reference path in the memory and re-setting the current forward reference path to a null value;\nif the source node is not null, determining whether the destination node is contained in the current forward reference path;\nif the destination node is a subset of the current forward reference path and the forward traversal flag is set, storing the current forward reference in the memory, truncating the current forward reference path after the destination node, and resetting the forward traversal flag;\nif the destination node is a subset of the current forward reference path and the forward traversal flag is not set, truncating the current forward reference path after the destination node, and resetting the forward traversal flag; and\nif the destination node is not a subset of the current forward reference path, appending the destination node to the current forward reference path and setting the forward traversal flag.\n5. A computer program product comprising:\na computer usable medium having computer readable program code means embodied therein for determining frequent node traversal patterns in a communications network coupled to a computer which includes a memory and a trace collector for collecting node traversal sequences, said computer readable program code means comprising:\ncomputer readable program code means for causing the computer to effect collecting and storing the node traversal sequences, each node traversal sequence including an end user identifier, a source node and a destination node;\ncomputer readable program code means for causing the computer to effect sorting the node traversal sequences by end user identifier into a series of time-ordered pairs, responsive to said computer readable program code means for causing the computer to effect said collecting and storing;\ncomputer readable program code means for causing the computer to effect determining a set of maximal forward references from said series of time-ordered pairs; and\ncomputer readable program code means for causing the computer to effect determining a set of large reference sequences from said set of maximal forward references, a large reference sequences being a consecutive subsequence of said maximal forward references which occurs in excess of a predetermined threshold.\n6. The computer program product of claim 5, comprising:\ncomputer readable program code means for causing the computer to effect constructing a set of maximal reference sequences from said large reference sequences, wherein a maximal reference sequence is not a subset of another maximal reference sequence.\n7. The computer program product of claim 5 wherein wherein said computer readable program code means for causing the computer to effect determining a set of maximal forward references comprises:\ncomputer readable program code means for causing the computer to effect initializing a current forward reference path to a null value and setting a forward traversal flag;\ncomputer readable program code means for causing the computer to perform the following steps for each of said time-ordered pairs:\ncomputer readable program code means for causing the computer, in the event the source node is null, to effect storing the current forward reference path in the memory and re-setting the current forward reference path to a null value;\ncomputer readable program code means for causing the computer, in the event the source node is not null, to effect determining whether the destination node is contained in the current forward reference path;\ncomputer readable program code means for causing the computer, in the event the destination node is a subset of the current forward reference path and the forward traversal flag is set, to effect storing the current forward reference in the memory, truncating the current forward reference path after the destination nodes and resetting the forward traversal flag;\ncomputer readable program code means for causing the computer, in the event the destination node is a subset of the current forward reference path and the forward traversal flag is not set, to effect truncating the current forward reference path after the destination node, and resetting the forward traversal flag; and\ncomputer readable program code means for causing the computer, in the event the destination node is not a subset of the current forward reference path, to effect appending the destination node to the current forward reference path and setting the forward traversal flag.\n8. The computer program product of claim 5 wherein said computer comprises a gateway to a wide area network.\n9. A program storage device readable by a computer tangibly embodying a program of instructions executable by said computer to perform method steps for determining frequent node traversal patterns in a communications network coupled to a computer which includes a memory and a trace collector for collecting node traversal sequences, said method steps comprising:\ncollecting and storing the node traversal sequences, each node traversal sequence including an end user identifier, a source node and a destination node;\nsorting the node traversal sequences by said end user identifier into a series of time-ordered pairs, responsive to said steps of collecting and storing;\ndetermining a set of maximal forward references from said series of time-ordered pairs; and\ndetermining a set of large reference sequences from said set of maximal forward references, a large reference sequence being a consecutive subsequence of said maximal forward references which occurs in excess of a predetermined threshold.\n10. The program storage device of claim 9, further comprising the method step of:\nconstructing a set of maximal reference sequences from said large reference sequences, wherein a maximal reference sequence is not a subset of another maximal reference sequence.\n11. The program storage device of claim 9 wherein said step of determining said set of maximal forward references comprises the steps of:\ninitializing a current forward reference path to a null value and setting a forward traversal flag;\nfor each of said time-ordered pairs, performing the following steps:\nif the source node is null, storing the current forward reference path in the memory and re-setting the current forward reference path to a null value;\nif the source node is not null, determining whether the destination node is contained in the current forward reference path;\nif the destination node is a subset of the current forward reference path and the forward traversal flag is set, storing the current forward reference in the memory, truncating the current forward reference path after the destination node, and resetting the forward traversal flag;\nif the destination node is a subset of the current forward reference path and the forward traversal flag is not set, truncating the current forward reference path after the destination node, and resetting the forward traversal flag; and\nif the destination node is not a subset of the current forward reference path, appending the destination node to the current forward reference path and setting the forward traversal flag.\n12. The program storage device of claim 9 wherein said computer comprises a gateway to a wide area network.\n13. The program storage device of claim 10, said method steps further comprising:\ncaching said maximal reference sequences for reducing an access time to the frequent node traversal pattern associated with said maximal reference sequence.\n14. A program storage device readable by a computer tangibly embodying a program of instructions executable by said computer to perform method steps for determining frequent node traversal patterns in a communications network coupled to a computer which includes a memory and a trace collector for collecting node traversal sequences, said method steps comprising:\ncollecting and storing the node traversal sequences, each node traversal sequence including an end user identifier, a source node and a destination node;\nsorting the node traversal sequences by said end user identifier into a series of time-ordered pairs, responsive to said steps of collecting and storing;\ndetermining a set of maximal forward references from said series of time-ordered pairs;\ndetermining a set of large reference sequences from said set of maximal forward references, a large reference sequence being a consecutive subsequence of said maximal forward references which occurs in excess of a predetermined threshold;\nconstructing a set of maximal reference sequences from said large reference sequences, wherein a maximal reference sequence is not a subset of another maximal reference sequence; and\ncaching said maximal reference sequences for reducing an access time to the frequent node traversal pattern associated with said maximal reference sequence.",
    "status": "Expired - Lifetime",
    "citations_own": [
        "US4221003A",
        "US5136523A",
        "US5241674A",
        "US5345544A",
        "US5412769A",
        "US5486646A",
        "US5577249A"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US5745890A",
        "US5761663A",
        "US5764975A",
        "US5864863A",
        "US5956717A",
        "US5986652A",
        "US6018344A",
        "US6094645A",
        "US6115718A",
        "US6148437A",
        "US6151601A",
        "US6189005B1",
        "US6230151B1",
        "US6230153B1",
        "US6236982B1",
        "US6252849B1",
        "GB2357603A",
        "US6266053B1",
        "US6272507B1",
        "US6278966B1",
        "US6286018B1",
        "US20020040357A1",
        "US20020082926A1",
        "US20020128925A1",
        "US20030009453A1",
        "US20030018584A1",
        "US20030128233A1",
        "US20030131106A1",
        "US20030131097A1",
        "US20030128231A1",
        "US20030202009A1",
        "DE10225525A1",
        "US6745194B2",
        "US20050086031A1",
        "US20050097117A1",
        "US20050240445A1",
        "US20060015504A1",
        "US20060036400A1",
        "US20060167845A1",
        "US20060235845A1",
        "US20060253518A1",
        "US7539677B1",
        "US20110040811A1",
        "US20110320873A1",
        "US8600809B1",
        "CN105721427A",
        "US20160335300A1",
        "US9754285B1",
        "CN112819513A"
    ],
    "citedby_ftf": []
}