{
    "patent_id": "US-11669750-B2",
    "title": "System and/or method for generating clean records from imperfect data using model stack(s) including classification model(s) and confidence model(s) ",
    "assignee": "Xeeva, Inc.",
    "publication_date": "2023-06-06",
    "patent_link": "https://patents.google.com/patent/US11669750B2/en",
    "inventors": [
        "Dilip Dubey",
        "Dineshchandra Harikisan Rathi",
        "Koushik Kumaraswamy"
    ],
    "classifications": [
        "G06N20/20",
        "G06N5/022",
        "G06F16/185",
        "G06F16/21",
        "G06F16/215",
        "G06F16/22",
        "G06F16/2228",
        "G06F16/23",
        "G06F16/2379",
        "G06F16/24575",
        "G06F16/254",
        "G06F16/283",
        "G06F16/285",
        "G06F16/35",
        "G06F16/353",
        "G06F16/355",
        "G06N20/00",
        "G06N7/005",
        "G06N7/01",
        "G06N99/00",
        "G06F40/30",
        "Y04S10/50"
    ],
    "abstract": "Techniques relating to managing \u201cbad\u201d or \u201cimperfect\u201d data being imported into a database system are described herein. A lifecycle technology solution helps receive data from a variety of different data sources of a variety of known and/or unknown formats, standardize it, fit it to a known taxonomy through model-assisted classification, store it to a database in a manner that is consistent with the taxonomy, and allow it to be queried for a variety of different usages. Auto-classification, enrichment, clustering model and model stacks, and/or other disclosed techniques, may be used in these and/or other regards.",
    "claims": "\n1. A data classification system, comprising:\nan input interface configured to receive documents comprising data entries, at least some of the data entries having associated features perceivable from the documents; and\nprocessing resources including at least one processor and a memory, the memory comprising instructions executable by the processing resources to at least:\ninspect documents received via the input interface to identify data entries and associated features located in the inspected documents;\naccess a model registry storing at least one model stack, each model stack including at least one classification model and at least one confidence model that is separate from the at least one classification model in the respective model stack, each classification model being configured to generate proposed classifications in accordance with a multi-element catalog, each confidence model being configured to make a trust or do not trust decision relative to a proposed classification generated by the at least one classification model in the associated model stack;\nidentify one or more model stacks from the model registry for execution on the identified data entries;\nexecute the at least one classification model in the identified one or more model stacks to generate proposed classifications for the identified data entries;\nexecute the at least one confidence model in the identified one or more model stacks to generate trust or do not trust decisions for each of the generated proposed classifications based on a likelihood of collision occurring through execution of the at least one classification model, wherein collision is associated with classification uncertainty between two or more elements in the multi-element catalog for a given data entry, and wherein trust decisions are associated with absences of collisions;\nstore, to a data warehouse that stores on a non-transitory computer readable storage medium curated and classified data elements, data entries and their associated proposed classifications, for those proposed classifications where trust decisions have been reached via execution of the at least one confidence model; and\nreference records in the data warehouse in response to queries from a computer.\n2. The system of claim 1, wherein:\nthe model registry stores a plurality of model stacks, at least one of the model stacks including a plurality of classification models and one or more confidence models, and\nwherein a form of voting is implemented to combine output from the execution of plural classification models in order to generate a single proposed classification therefrom.\n3. The system of claim 2, wherein the form of voting includes a combination of simple majority-rules voting and a form of proportional voting.\n4. The system of claim 2, wherein the form of voting that is used to generate the single proposed classification varies in dependence on confidence levels output from the confidence models associated with the plural classification models.\n5. The system of claim 1, further comprising:\nwherein an attribute database stores attributes associated with elements in the multi-element catalog;\nwherein the memory comprises further instructions executable to at least:\nretrieve, for data entries having proposed classifications where trust decisions have been reached, relevant attributes from the attribute database based on granular classifications of the respective data entries to the multi-element catalog; and\nassociate the retrieved relevant attributes with the respective data entries for storage to the data warehouse.\n6. The system of claim 5, wherein the memory comprises further instructions executable to at least: derive and assign values to at least some of the retrieved relevant attributes by performing unstructured text processing based on (a) a domain of values for the respective retrieved relevant attributes, and (b) text available from the inspected documents.\n7. The system of claim 6, wherein the memory comprises further instructions executable to at least: apply a rule-based weighted search on an item universe to retrieve candidate matching records for retrieved relevant attributes lacking derived and assigned values following the unstructured text processing.\n8. The system of claim 7, wherein the memory comprises further instructions executable to at least: augment retrieved relevant attributes lacking derived and assigned values following the unstructured text processing with appropriate values determined via match resolution performed in connection with the retrieved candidate matching records.\n9. The system of claim 5, wherein the memory comprises further instructions executable to at least: assign values to the retrieved relevant attributes based on information known and/or inferable from (a) the associated elements in the multi-element catalog, (b) content of the inspected document, and/or (c) a master collection of items.\n10. A data classification method, the method comprising:\nreceiving documents comprising data entries via an input interface, at least some of the data entries having associated features perceivable from the documents;\ninspecting documents received via the input interface to identify data entries and associated features located in the inspected documents;\naccessing a model registry storing at least one model stack, each model stack including at least one classification model and at least one confidence model that is separate from the at least one classification model in the respective model stack, each classification model being configured to generate proposed classifications in accordance with a multi-element catalog, each confidence model being configured to make a trust or do not trust decision relative to a proposed classification generated by the at least one classification model in the associated model stack;\nidentifying one or more model stacks from the model registry for execution on the identified data entries;\nexecuting, using processing resources including at least one processor and a memory, the at least one classification model in the identified one or more model stacks to generate proposed classifications for the identified data entries;\nexecuting, using the processing resources, the at least one confidence model in the identified one or more model stacks to generate trust or do not trust decisions for each of the generated proposed classifications based on a likelihood of collision occurring through execution of the at least one classification model, wherein collision is associated with classification uncertainty between two or more elements in the multi-element catalog for a given data entry, and wherein trust decisions are associated with absences of collisions;\nstoring, to a data warehouse including curated and classified data elements, data entries and their associated proposed classifications, for those proposed classifications where trust decisions have been reached via execution of the at least one confidence model; and\nresponding to queries from a computer by referencing records in the data warehouse.\n11. The method of claim 10, wherein the model registry stores a plurality of model stacks, at least one of the model stacks including a plurality of classification models and one or more confidence models, and further comprising:\nimplementing a form of voting to combine output from the execution of plural classification models in order to generate a single proposed classification therefrom, the form of voting being simple majority-rules voting, a form of proportional voting, or a combination thereof.\n12. The method of claim 11, wherein the form of voting that is implemented to generate the single proposed classification varies in dependence on confidence levels output from the confidence models associated with the plural classification models.\n13. The method of claim 10, further comprising:\naccessing an attribute database that stores attributes associated with elements in the multi-element catalog;\nretrieving, for data entries having proposed classifications where trust decisions have been reached, relevant attributes from the attribute database based on granular classifications of the respective data entries to the multi-element catalog; and\nassociating the retrieved relevant attributes with the respective data entries for storage to the data warehouse.\n14. The method of claim 13, further comprising deriving and assigning values to at least some of the retrieved relevant attributes by performing unstructured text processing based on (a) a domain of values for the respective retrieved relevant attributes, and (b) text available from the inspected documents.\n15. The method of claim 14, further comprising applying a rule-based weighted search on an item universe to retrieve candidate matching records for retrieved relevant attributes lacking derived and assigned values following the unstructured text processing.\n16. The method of claim 15, further comprising augmenting retrieved relevant attributes lacking derived and assigned values following the unstructured text processing with appropriate values determined via match resolution performed in connection with the retrieved candidate matching records.\n17. The method of claim 13, further comprising assigning values to the retrieved relevant attributes based on information known and/or inferable from (a) the associated elements in the multi-element catalog, (b) content of the inspected document, and/or (c) a master collection of items.\n18. A non-transitory computer-readable storage medium including instructions that, when executed by processing resources including at least one processor and a memory, are configured to at least:\nreceive documents comprising data entries via an input interface, at least some of the data entries having associated features perceivable from the documents;\ninspect documents received via the input interface to identify data entries and associated features located in the inspected documents;\naccess a model registry storing at least one model stack, each model stack including at least one classification model and at least one confidence model that is separate from the at least classification model in the respective model stack, each classification model being configured to generate proposed classifications in accordance with a multi-element catalog, each confidence model being configured to make a trust or do not trust decision relative to a proposed classification generated by the at least one classification model in the associated model stack;\nidentify one or more model stacks from the model registry for execution on the identified data entries;\nexecute the at least one classification model in the identified one or more model stacks to generate proposed classifications for the identified data entries;\nexecute the at least one confidence model in the identified one or more model stacks to generate trust or do not trust decisions for each of the generate proposed classifications based on a likelihood of a collision occurring through execution of the at least one classification model, wherein a given collision is associated with classification uncertainty between two or more elements in the multi-element catalog for a given data entry, and wherein trust decisions are associated with absences of collisions;\nstore, to a data warehouse including curated and classified data elements, data entries and their associated proposed classifications, for those proposed classifications where trust decisions have been reached via execution of the at least one confidence model; and\nrespond to queries from a computer by referencing records in the data warehouse.\n19. The non-transitory computer-readable storage medium of claim 18, wherein:\nthe model registry stores a plurality of model stacks, at least one of the model stacks including a plurality of classification models and one or more confidence models;\na form of voting is implemented to combine output from the execution of plural classification models in order to generate a single proposed classification therefrom, the form of voting being simple majority-rules voting, a form of proportional voting, or a combination thereof; and\nwherein the form of voting that is used to generate the single proposed classification varies in dependence on confidence levels output from the confidence models associated with the plural classification models.\n20. The non-transitory computer-readable storage medium of claim 18, wherein:\nan attribute database is configured to store attributes associated with elements in the multi-element catalog; and\nfurther instructions are executable to at least:\nretrieve, for data entries having proposed classifications where trust decisions have been reached, relevant attributes from the attribute database based on granular classifications of the respective data entries to the multi-element catalog;\nassociate the retrieved relevant attributes with the respective data entries for storage to the data warehouse; and\nassign values to the retrieved relevant attributes based on information known and/or inferable from (a) the associated elements in the multi-element catalog, (b) content of the inspected document, and/or (c) a master collection of items.",
    "status": "Active",
    "citations_own": [
        "US20030018629A1",
        "US6584451B1",
        "US6606603B1",
        "US6920459B2",
        "US7117165B1",
        "US7146331B1",
        "US7165068B2",
        "US7225145B2",
        "US20080250060A1",
        "US7568148B1",
        "CN101887523A",
        "US20100293451A1",
        "WO2010147010A1",
        "US7908242B1",
        "US8126701B2",
        "US20120066217A1",
        "US20120109651A1",
        "US20130096892A1",
        "US20130198193A1",
        "US8515958B2",
        "US8612300B2",
        "US20130338496A1",
        "US8635172B1",
        "US8732036B2",
        "US20140172914A1",
        "US20140314311A1",
        "US8904471B1",
        "US20150012271A1",
        "US9053457B2",
        "US20150234888A1",
        "US20150324459A1",
        "US20160148074A1",
        "US9378196B1",
        "US20170083602A1",
        "US9665628B1"
    ],
    "citations_ftf": [
        "US8140584B2",
        "US20170357909A1"
    ],
    "citedby_own": [],
    "citedby_ftf": [
        "US9665628B1",
        "US10599701B2",
        "US10558627B2",
        "WO2017197402A2",
        "US10713272B1",
        "US10416958B2",
        "US10635727B2",
        "US10438133B2",
        "US10614377B2",
        "US20180114156A1",
        "US20180322411A1",
        "CN107368990A",
        "RU2665261C1",
        "US10649982B2",
        "US10425295B1",
        "US20210342920A1",
        "US11250042B2",
        "EP3598377A1",
        "US11151165B2",
        "US11698921B2",
        "US11164081B2",
        "SG10201809997SA",
        "US10885370B2",
        "EP3935581A4",
        "CN109995505B",
        "FR3094508A1",
        "WO2020243532A1",
        "US11611590B1",
        "US11714831B2",
        "FR3105845B1",
        "US11403347B2",
        "US11741511B2",
        "US20210287261A1",
        "US11714789B2",
        "US20230215566A1",
        "US11776291B1",
        "US11481212B2",
        "US20220198053A1",
        "WO2022133267A1",
        "US20220215325A1",
        "US20230053273A1",
        "CN113796830B",
        "US20230196453A1",
        "US20230316048A1"
    ]
}