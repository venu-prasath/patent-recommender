{
    "patent_id": "US-11521086-B2",
    "title": "Software navigation crash prediction system ",
    "assignee": "Bank Of America Corporation",
    "publication_date": "2022-12-06",
    "patent_link": "https://patents.google.com/patent/US11521086B2/en",
    "inventors": [
        "Venkata R. Bhimireddy",
        "Sandeep Verma",
        "Srinivas Dundigalla",
        "Pavan Chayanam"
    ],
    "classifications": [
        "G06N5/04",
        "G06F11/004",
        "G06F11/0709",
        "G06F11/0793",
        "G06F11/3006",
        "G06F11/3495",
        "G06N20/00"
    ],
    "abstract": "A crash prediction computing system includes a machine learning module capable of analyzing data logs associated with each of a plurality of services or applications to identify and categorize every error, exception, and/or crash, such as those resulting from client system interactions based on crash type, customer profile type, customer screen navigation flow, time or crash. The machine learning algorithms continuously train the crash prediction models for each crash category with associated client computing system navigation flow. The crash prediction computing system applies each model before each screen/activity navigation to predict whether the next move will result in an error, exception or crash, and for each predicted error, exception, or crash, automatically implement alternate route functionality to arrive at a desired target.",
    "claims": "\n1. An apparatus comprising:\na processor; and\nnon-transitory computer-readable media storing instructions that, when executed by the processor, cause the apparatus to:\nidentify, based on monitored actions performed by an application server in response to a request received from a client computing system, a requested action to be performed by the application server;\ntrain a machine learning model based on customer profile data, navigation flow of a service provided by the application server as requested by the client computing system, and a current time;\npredict, by an action monitor based on the machine learning model, whether a result of the requested action would result in an invalid condition of the application server; and\ninitiate, based on an indication of a predicted invalid condition of the application server, a secondary action performed by the application server, wherein a result returned to the client computing system based on performance of the secondary action conforms to an expected result of the requested action.\n2. The apparatus of claim 1, wherein the requested action comprises an action performed by each of a plurality of application servers, and wherein a predicted invalid condition comprises an error with operation of a service performed by one of the plurality of application servers.\n3. The apparatus of claim 1, wherein the invalid condition comprises an application error, an exception, or a crash condition experienced by a service executing on the application server.\n4. The apparatus of claim 1, wherein the instructions, when executed, cause the apparatus to:\ntrain, based on continuous monitoring of client system interaction with a plurality of application servers, the machine learning model.\n5. The apparatus of claim 1, wherein the machine learning model comprises a finite automata model trained through a machine learning algorithm based on client system operation and application server operation to predict whether a next action initiated by the client computing system would result in an expected result or an invalid operating condition of the application server.\n6. The apparatus of claim 1, wherein training of the machine learning model is further based on application version information.\n7. A method comprising:\nidentifying, by a crash prediction computing system and based on monitored actions performed by an application server in response to a request received from a client computing system, a requested action to be performed by the application server;\ntraining a machine learning model based on customer profile data, navigation flow of a service provided by the application server as requested by the client computing system, and a current time;\npredicting, by an action monitor and based on the machine learning model, whether a result of the requested action would result in an invalid condition of the application server; and\ninitiating, by the crash prediction computing system based on an indication of a predicted invalid condition of the application server, a secondary action performed by the application server, wherein a result returned to the client computing system based on performance of the secondary action conforms to an expected result of the requested action.\n8. The method of claim 7, wherein the requested action comprises an action performed by each of a plurality of application servers, and wherein a predicted invalid condition comprises an error with operation of a service performed by one of the plurality of application servers.\n9. The method of claim 7, wherein the invalid condition comprises an application error, an exception, or a crash condition experienced by a service executing on the application server.\n10. The method of claim 7, further comprising training, based on continuous monitoring of client system interaction with a plurality of application servers, the machine learning model.\n11. The method of claim 7, wherein the machine learning model comprises a finite automata model trained through a machine learning algorithm based on client system operation and application server operation to predict whether a next action initiated by the client computing system would result in an expected result or an invalid operating condition of the application server.\n12. The method of claim 7, wherein training of the machine learning model is further based on application version information.\n13. Non-transitory computer readable media storing instructions that, when executed by a processor, cause:\nidentifying, by a crash prediction computing system and based on monitored actions performed by an application server in response to a request received from a client computing system, a requested action to be performed by the application server;\ntraining a machine learning model based on customer profile data, navigation flow of a service provided by the application server as requested by the client computing system, and a current time;\npredicting, by an action monitor and based on the machine learning model, whether a result of the requested action would result in an invalid condition of the application server; and\ninitiating, by the crash prediction computing system based on an indication of a predicted invalid condition of the application server, a secondary action performed by the application server, wherein a result returned to the client computing system based on performance of the secondary action conforms to an expected result of the requested action.\n14. The non-transitory computer readable media of claim 13, wherein the requested action comprises an action performed by each of a plurality of application servers, and wherein a predicted invalid condition comprises an error with operation of a service performed by one of the plurality of application servers.\n15. The non-transitory computer readable media of claim 13, wherein the invalid condition comprises an application error, an exception, or a crash condition experienced by a service executing on the application server.\n16. The non-transitory computer readable media of claim 13, wherein the instructions, when executed further cause training, based on continuous monitoring of client system interaction with a plurality of application servers, the machine learning model.\n17. The non-transitory computer readable media of claim 13, wherein the machine learning model comprises a finite automata model trained through a machine learning algorithm based on client system operation and application server operation to predict whether a next action initiated by the client computing system would result in an expected result or an invalid operating condition of the application server.",
    "status": "Active",
    "citations_own": [
        "US20100088546A1",
        "US20120166869A1",
        "US8516308B1",
        "US9069737B1",
        "US9519869B2",
        "US20180113773A1",
        "US10013334B1",
        "US20190095313A1",
        "US20190138325A1",
        "US10289509B2",
        "US20190347148A1",
        "US20190377622A1",
        "US10599506B2",
        "US20200097389A1",
        "US11010232B2"
    ],
    "citations_ftf": [],
    "citedby_own": [],
    "citedby_ftf": [
        "US11570038B2",
        "US11556409B2",
        "US20220283890A1",
        "US11743151B2",
        "US11770290B2",
        "CN116578442A"
    ]
}