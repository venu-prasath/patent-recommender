{
    "patent_id": "US-11768440-B2",
    "title": "Training methods for machine learning assisted optical proximity error correction ",
    "assignee": "Asml Netherlands B.V.",
    "publication_date": "2023-09-26",
    "patent_link": "https://patents.google.com/patent/US11768440B2/en",
    "inventors": [
        "Jing Su",
        "Yen-Wen Lu",
        "Ya Luo"
    ],
    "classifications": [
        "G03F7/70441",
        "G03F1/36",
        "G03F7/705",
        "G06F30/392",
        "G06F30/398",
        "G06N20/00",
        "G06N20/10",
        "G06N3/045",
        "G06N3/08",
        "G06N5/047",
        "G06V10/44",
        "G06V10/46",
        "G06V10/774",
        "G06V10/82",
        "G06N20/20",
        "G06N5/01"
    ],
    "abstract": "A method including: obtaining data based an optical proximity correction for a spatially shifted version of a training design pattern; and training a machine learning model configured to predict optical proximity corrections for design patterns using data regarding the training design pattern and the data based on the optical proximity correction for the spatially shifted version of the training design pattern.",
    "claims": "\n1. A method comprising:\nobtaining a weighting function or data to assign a different weight to a region of an optical proximity correction of a design pattern than another region thereof; and\ntraining, by a hardware computer system, a machine learning model configured to predict optical proximity corrections for design patterns by evaluating a predicted optical proximity correction of the design pattern by the machine learning model against a benchmark optical proximity correction of the design pattern based on the weighting data.\n2. The method of claim 1, wherein the weighting function or data is applied to the predicted optical proximity correction, the benchmark optical proximity correction, and/or a difference between predicted and benchmark optical proximity corrections.\n3. The method of claim 1, wherein the weighting function or data assigns a higher weight to a region adjacent to a main feature of the design pattern than a region outside of that region.\n4. The method of claim 3, wherein the region encompasses an optical proximity correction for the main feature but excludes another optical proximity correction for the main feature.\n5. The method of claim 1, wherein the weighting function or data assigns a higher weight to an edge of an optical proximity correction than an interior of the optical proximity correction and/or of another part of the design pattern.\n6. The method of claim 1, wherein the weighting function or data comprise a weighting function configured to decay the weight as a function of distance from a main feature of the design pattern.\n7. A method comprising:\nobtaining a benchmark optical proximity correction for a design pattern;\ngenerating, by a hardware computer system, a predicted optical proximity correction for the design pattern using a machine learning model;\nassigning, by the hardware computer system, a relatively high weight at a portion of the predicted and/or benchmark optical proximity correction; and\ntraining, by the hardware computer system, the machine learning model using an objective function evaluating the weighted predicted and/or benchmark optical proximity corrections.\n8. The method of claim 7, wherein the relatively high weight is assigned at an edge of the optical proximity correction.\n9. The method of claim 7, wherein a different weight is assigned to a first optical proximity correction for a main feature of the design pattern than a second optical proximity correction for the main feature.\n10. A method comprising:\napplying, by a hardware computer system, a binarization function to image data of a predicted optical proximity correction of a design pattern by a machine learning model and/or a benchmark optical proximity correction of the design pattern to produce a respective binarized version thereof; and\ntraining, by a hardware computer system, a machine learning model configured to predict optical proximity corrections for design patterns by evaluating the predicted optical proximity correction against the benchmark optical proximity correction based on the binarized version of the predicted and/or benchmark optical proximity correction.\n11. The method of claim 10, wherein the binarization function is a sigmoid function.",
    "status": "Active",
    "citations_own": [
        "US5879844A",
        "JP2006058452A",
        "US20070031745A1",
        "US20070050749A1",
        "US20080229273A1",
        "US20080301620A1",
        "US20080309897A1",
        "US20100162197A1",
        "US20100180251A1",
        "CN101794323A",
        "US20140064600A1",
        "KR20140030007A",
        "KR20140075695A",
        "TW201428817A",
        "CN104217224A",
        "US20150213374A1",
        "US9111062B2",
        "WO2016096308A1",
        "CN106777829A",
        "TW201727521A"
    ],
    "citations_ftf": [
        "NL2013249A",
        "US10627723B2"
    ],
    "citedby_own": [],
    "citedby_ftf": [
        "US10522322B2",
        "US10176966B1",
        "WO2019118639A1",
        "CN111727406B",
        "TWI723396B",
        "CN113227907A",
        "DE102020102863A1",
        "KR20210116613A",
        "CN113614638A",
        "CN114008535A",
        "US11042981B2",
        "CN114207517A",
        "JP2022544585A",
        "US20210064977A1",
        "WO2021037484A1",
        "US11593673B2",
        "US11762283B2",
        "US20210201205A1",
        "US20230107556A1",
        "TWI765250B",
        "CN113537446A",
        "TW202215161A",
        "KR20220001262A",
        "NL2028478A",
        "KR20220014760A",
        "US20220121957A1",
        "KR20220080768A",
        "CN112578646B",
        "CN116940896A",
        "WO2022193284A1",
        "CN113151989B",
        "CN116384257B"
    ]
}