{
    "patent_link": "https://patents.google.com/patent/US20070005568A1/en",
    "patent_id": "US20070005568A1",
    "title": "Determination of a desired repository",
    "abstract": "A system receives a search query from a user and searches a group of repositories, based on the search query, to identify, for each of the repositories, a set of search results. The system also identifies one of the repositories based on a likelihood that the user desires information from the identified repository and presents the set of search results associated with the identified repository.",
    "inventors": [
        "Michael Angelo",
        "David Braginsky",
        "Jeremy Ginsberg",
        "Simon Tong"
    ],
    "assignee": "Google LLC",
    "classifications": [
        "G06F16/24578",
        "G06F16/951",
        "G06F16/9535",
        "G06F16/9538",
        "Y10S707/99933",
        "Y10S707/99942"
    ],
    "claims": "\n1. A method, comprising:\nreceiving a search query from a user;\nsearching a plurality of repositories, based on the search query, to identify, for each of the repositories, a set of search results;\nidentifying one of the repositories based on a likelihood that the user desires information from the identified repository; and\npresenting the set of search results associated with the identified repository.\n2. The method of claim 1, further comprising:\ngenerating a model that determines a score associated with a likelihood that a particular user desires information from a repository when the user provides a particular search query.\n3. The method of claim 2, wherein identifying one of the repositories includes:\ndetermining a score for each of the repositories based on the model, and selecting one of the repositories based on the scores.\n4. The method of claim 2, wherein generating a model includes:\nstoring log data associated with a plurality of prior searches, and using the log data to train the model.\n5. The method of claim 4, wherein generating a model further includes:\nrepresenting the log data as triples of data (u, q, r), where u refers to information regarding a user that provided a search query, q refers to information regarding the search query, and r refers to information regarding a repository from which search results were provided in response to the search query.\n6. The method of claim 5, wherein the log data includes millions of the triples of data (u, q, r).\n7. The method of claim 5, wherein generating a model further includes:\ndetermining a label for each of the triples of data (u, q, r), where the label includes information regarding whether the user u desired information from the repository r when the user provided the search query q.\n8. The method of claim 7, wherein using the log data to train the model includes:\ntraining the model based on the triples of data (u, q, r) and the associated labels.\n9. The method of claim 1, further comprising:\ndetermining a score for each of the repositories, the score for one of the repositories being associated with a likelihood that the user desires information from the one repository.\n10. The method of claim 9, wherein identifying one of the repositories includes:\nselecting one of the repositories with a highest score.\n11. The method of claim 9, wherein presenting the set of search results associated with the identified repository includes:\nproviding the sets of search results associated with two or more of the repositories based on their scores.\n12. The method of claim 11, wherein providing the sets of search results associated with two or more of the repositories based on their scores includes:\narranging the sets of search results within a search result document based on the scores associated with the two or more repositories, and\npresenting the search result document to the user.\n13. The method of claim 12, wherein arranging the sets of search results within a search result document based on the scores associated with the two or more repositories includes:\nplacing the set of search results associated with a first one of the two or more repositories in a more prominent location within the search result document than the set of search results associated with a second one of the two or more repositories when the score associated with the first repository is higher than the score associated with the second repository.\n14. The method of claim 12, wherein arranging the sets of search results within a search result document based on the scores associated with the two or more repositories includes:\nproviding a link to the set of search results associated with at least one of the two or more repositories within the search result document.\n15. The method of claim 9, further comprising:\nselecting a group of repositories to search based on the scores; and\nwherein searching a plurality of repositories includes:\nperforming a search on the group of repositories.\n16. A system, comprising:\nmeans for receiving a search query from a user;\nmeans for performing a search on a plurality of repositories, based on the search query, to identify, for each of the repositories, a set of search results;\nmeans for determining a score for each of the repositories, the score for one of the repositories being based on a likelihood that the user desires information from the one repository; and\nmeans for providing one or more of the sets of search results based on the scores.\n17. The system of claim 16, further comprising:\nmeans for selecting a group of the repositories to search based on the scores.\n18. A system, comprising:\na search engine system to:\nreceive a search query from a user,\ndetermine a score for each of a plurality of repositories, the score for one of the repositories being based on a likelihood that the user desires information from the one repository,\nperform a search on one or more of the repositories, based on the search query, to identify, for each of the one or more repositories, a set of search results, and\nprovide one or more of the sets of search results based on the scores.\n19. The system of claim 18, wherein when performing a search on one or more of the repositories, the search engine system is configured to:\nidentify a group of the repositories to search based on the scores, and\nsearch the group of repositories to identify, for each repository in the group of repositories, a set of search results.\n20. The system of claim 18, wherein when performing a search on one or more of the repositories, the search engine system is configured to:\nsearch each of the repositories based on the search query.\n21. The system of claim 18, further comprising:\na model generation system to generate a model that determines a score associated with a likelihood that a particular user desires information from a repository when the user provides a particular search query.\n22. The system of claim 21, wherein the model is a lookup table and the score corresponds to a click-through rate associated with a repository when the user provides the particular search query.\n23. The system of claim 21, wherein when determining a score for each of a plurality of repositories, the search engine system is configured to:\ndetermine a score for each of the repositories based on the model.\n24. The system of claim 21, wherein when generating a model, the model generation system is configured to:\nstore log data associated with a plurality of prior searches, and\nuse the log data to train the model.\n25. The system of claim 24, wherein when generating a model, the model generation system is further configured to:\nrepresent the log data as triples of data (u, q, r), where u refers to information regarding a user that provided a search query, q refers to information regarding the search query, and r refers to information regarding a repository from which search results were provided in response to the search query.\n26. The system of claim 25, wherein the log data includes millions of the triples of data (u, q, r).\n27. The system of claim 25, wherein when generating a model, the model generation system is configured to:\ndetermine a label for each of the triples of data (u, q, r), where the label includes information regarding whether the user u desired information from the repository r when the user provided the search query q.\n28. The system of claim 27, wherein when generating a model, the model generation system is configured to:\ntrain the model based on the triples of data (u, q, r) and the associated labels.\n29. The system of claim 18, wherein when providing one or more of the sets of search results, the search engine system is configured to:\nselect one of the repositories with a highest score, and\npresent the set of search results associated with the selected repository.\n30. The system of claim 18, wherein when providing one or more of the sets of search results, the search engine system is configured to:\narrange the one or more sets of search results within a search result document based on the scores associated with the one or more repositories, and\npresent the search result document to the user.\n31. The system of claim 30, wherein when arranging the one or more sets of search results within a search result document, the search engine system is configured to:\nplace the set of search results associated with a first one of the one or more repositories in a more prominent location within the search result document than the set of search results associated with a second one of the one or more repositories when the score associated with the first repository is higher than the score associated with the second repository.\n32. The system of claim 30, wherein when arranging the one or more sets of search results within a search result document, the search engine system is configured to:\nprovide a link to the set of search results associated with at least one of the one or more repositories within the search result document.\n33. A computer-readable medium to store data and computer-executable instructions, comprising:\nlog data associated with a plurality of searches of repositories based on search queries provided by users;\ninstructions for representing the log data as triples of data (u, q, r), where u refers to information regarding a user that provided a search query, q refers to information regarding the search query, and r refers to information regarding a repository from which search results were provided in response to the search query;\ninstructions for determining a label for each of the triples of data (u, q, r), where the label includes information regarding whether the user u desired information from the repository r when the user provided the search query q; and\ninstructions for training a model based on the triples of data (u, q, r) and the associated labels, where the model predicts whether a particular user desires information from a repository when the user provides a particular search query.\n34. The computer-readable medium of claim 33, wherein the log data includes millions of the triples of data (u, q, r).\n35. A system, comprising:\na first repository to store a first type of data;\na second repository to store a second type of data; and\na search engine system to:\nreceive a search query from a user, and\ndetermine a likelihood that the user desires information from the first or second repository based on information regarding the user, the search query, and the first or second repository.\n36. A system, comprising:\na model generation system to generate a model that determines a score associated with a likelihood that a particular user desires information from a repository when the user provides a particular search query; and\na search engine system to:\nreceive a search query from a user,\ndetermine a score for each of a plurality of repositories based on the model, and\npresent search results from one or more of the repositories based on the scores.\n37. The system of claim 36, wherein the model is a lookup table and the score corresponds to a click-through rate associated with a repository when the user provides the particular search query.\n38. A method, comprising:\nreceiving a search query from a user;\ndetermining a score for each of a plurality of repositories, the score for one of the repositories being based on a likelihood that the user desires information from the one repository;\nperforming a search on at least one of the repositories, based on the search query and the determined scores, to identify, for each of the at least one of the repositories, a set of search results; and\nproviding one or more of the sets of search results.\n39. A system, comprising:\na model generation system to generate first and second models, where at least one factor used to generate the second model is different or absent when generating the first model; and\na search engine system to:\nreceive a search query from a user,\ndetermine a first score for each of a plurality of repositories based on the first model,\nperform a search on one or more of the repositories based on the search query and the first scores,\ndetermine a second score for each of the one or more of the repositories based on the second model, and\npresent search results from at least one of the one or more of the repositories based on the second scores.\n40. The system of claim 39, wherein an output of the first model is used as an input to the second model.",
    "status": "Expired - Fee Related",
    "citations_own": [
        "US5227122A",
        "US5778227A",
        "US5839112A",
        "US5896133A",
        "US20020019763A1",
        "US6421571B1",
        "US6438539B1",
        "US20020152190A1",
        "US6477539B1",
        "US20030034998A1",
        "US6546388B1",
        "US20030220913A1",
        "US20050060311A1",
        "US20050076003A1",
        "US20060106846A1",
        "US20060107265A1",
        "US7181444B2"
    ],
    "citations_ftf": [
        "JP3159242B2",
        "US5960422A",
        "JP3225912B2",
        "US6594651B2",
        "KR20000063422A",
        "JP2002169823A",
        "JP2002202991A",
        "US7149734B2",
        "JP2003167907A",
        "JP2005530250A",
        "US7454417B2",
        "KR100508416B1",
        "JP2005269819A",
        "US7529731B2",
        "JP4367355B2",
        "US7630976B2",
        "US7584177B2"
    ],
    "citedby_own": [
        "US20060259480A1",
        "WO2008085637A2",
        "EP1956503A2",
        "US20090012841A1",
        "US20090089246A1",
        "US20090265328A1",
        "US20100082421A1",
        "US20100299350A1",
        "US20110265080A1",
        "US8176055B1",
        "US8195654B1",
        "US20140143243A1",
        "US20150074078A1",
        "US9305088B1",
        "EP2663940A4",
        "US11327979B2"
    ],
    "citedby_ftf": [
        "US7584177B2",
        "US7792813B2",
        "EP2215567A1",
        "US8972895B2",
        "US8606652B2",
        "US8346815B2",
        "US8965788B2",
        "US8825644B1",
        "US9483279B2",
        "US9024954B2",
        "USD715818S1",
        "EP3055795A4",
        "CN105677931B",
        "WO2018200979A1",
        "JP2022077381A"
    ]
}