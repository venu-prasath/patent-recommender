{
    "patent_id": "US-11494490-B2",
    "title": "Endpoint detection and response utilizing machine learning ",
    "assignee": "Cylance Inc.",
    "publication_date": "2022-11-08",
    "patent_link": "https://patents.google.com/patent/US11494490B2/en",
    "inventors": [
        "Rahul Chander Kashyap",
        "Vadim Dmitriyevich Kotov",
        "Samuel John Oswald",
        "Homer Valentine Strong"
    ],
    "classifications": [
        "G06F21/561",
        "G06F21/53",
        "G06F21/56",
        "G06N20/00",
        "H04L63/1408",
        "G06N3/006"
    ],
    "abstract": "A plurality of events associated with each of a plurality of computing nodes that form part of a network topology are monitored. The network topology includes antivirus tools to detect malicious software prior to it accessing one of the computing nodes. Thereafter, it is determined that, using at least one machine learning model, at least one of the events is indicative of malicious activity that has circumvented or bypassed the antivirus tools. Data is then provided that characterizes the determination. Related apparatus, systems, techniques and articles are also described.",
    "claims": "\n1. A method for implementation by one or more data processors forming part of at least one computing device, the method comprising:\nmonitoring, by at least one data processor, a plurality of events associated with each of a plurality of computing nodes forming part of a network topology, the network topology comprising antivirus tools to detect malicious software prior to it accessing one of the computing nodes;\ndetermining, by a least one data processor using a plurality of machine learning models, that at least one of the events is indicative of malicious activity that has circumvented or bypassed the antivirus tools, the plurality of machine learning models being embodied in a plurality of machine learning packs, each pack being separate and distinct and identifying different types of malicious activity; and\nproviding, by at least one data processor, data characterizing the determination;\nwherein at least a portion of the machine learning packs are selected from a library of available machine learning packs in response to a software tool providing recommended machine learning pack selections after automatically exploring the network topology.\n2. The method of claim 1, wherein providing data characterizing the determination includes at least one of: display the data in an electronic visual display, loading the data into memory, storing the data in physical persistence, or transmitting the data to a remote computing device.\n3. The method of claim 1 further comprising:\nidentifying, by at least one data processor, a source of the malicious activity;\nwherein the provided data further characterizes the identified source of the malicious activity.\n4. The method of claim 3 further comprising:\nisolating a node corresponding to the identified source of the malicious activity from communication with other nodes.\n5. The method of claim 3 further comprising:\ninitiating remediation at the node corresponding to the identified source of the malicious activity to prevent further damage to the node and/or the network topology.\n6. The method of claim 5, wherein the remediation utilizes at least one reinforcement learning method selected from a group consisting of: multi-armed bandits, Q-learning, or Bayesian optimization.\n7. The method of claim 1, wherein the antivirus tools comprise at least one of: antivirus software or a computer network gateway appliance.\n8. The method of claim 1, wherein the plurality of machine learning models are selected from a group consisting of: generalized linear models, ordinary least squares, ridge regression, lasso, multi-task lasso, elastic net, multi-task elastic net, least angle regression, LARS lasso, orthogonal matching pursuit (OMP), Bayesian regression, naive Bayesian, logistic regression, stochastic gradient descent (SGD), neural networks, Perceptron, passive aggressive algorithms, robustness regression, Huber regression, polynomial regression, linear and quadratic discriminant analysis, kernel ridge regression, support vector machines, stochastic gradient descent, nearest neighbor, Gaussian processes, cross decomposition, decision trees, or ensemble methods.\n9. The method of claim 1, wherein at least one of the plurality of machine learning models uses supervised learning and has labels origination from a source selected from a group consisting of: existing label corpuses associated with executable files, indicators of compromise, or deterministic finite automata tailored to recognize particular tactics, techniques and procedures (TTPs).\n10. The method of claim 1, wherein at least one of the plurality of machine learning models uses unsupervised learning methods that characterize qualitative changes on a node based on corresponding monitored events.\n11. The method of claim 10, wherein the unsupervised learning methods are selected from a group consisting of: clustering, anomaly detection or latent variable models.\n12. The method of claim 1, wherein different types of malicious activity identified by the machine learning packs are selected from a group consisting of: memory-based attacks, POWERSHELL/macro-based exploits, privilege escalation, lateral movement, data exfiltration, anti-analysis efforts, password stealer, backdoor/tunnel, or insider threat.\n13. The method of claim 11, wherein at least one machine learning pack is self-configured dynamically on a corresponding node based on communications with at least one of: another node or a remote computing system.\n14. The method of claim 11, wherein at least one machine learning pack on a corresponding node is updated based on communications with at least one of: another node or a remote computing system.\n15. The method of claim 1, wherein at least one of the plurality of machine learning models is dynamically updated based on the monitored events.\n16. The method of claim 1 further comprising:\nimputing, using at least one generative model, missing data providing context of at least one event indicative of the malicious activity.\n17. The method of claim 1 further comprising:\npreventing the malicious software from continuing to execute.\n18. A non-transitory computer program product storing instructions which, when executed by at least one data processor forming part of at least one computing device, implement operations comprising:\nmonitoring a plurality of events associated with each of a plurality of computing nodes forming part of a network topology, the network topology comprising antivirus tools to detect malicious software prior to it accessing one of the computing nodes;\ndetermining, using a plurality of machine learning models, that at least one of the events is indicative of malicious activity that has circumvented or bypassed the antivirus tools, the plurality of machine learning models being embodied in a plurality of machine learning packs, each pack being separate and distinct and identifying different types of malicious activity; and\npreventing, based on the determining, the malicious software from continuing to execute\nwherein at least a portion of the machine learning packs are selected from a library of available machine learning packs in response to a software tool providing recommended machine learning pack selections after automatically exploring the network topology.\n19. A system comprising:\nat least one data processor; and\nmemory storing instructions which, when executed by the at least one data processor, implement operations comprising:\nmonitoring a plurality of events associated with each of the plurality of computing nodes forming part of a network topology, the network topology comprising antivirus tools to detect malicious software prior to it accessing one of the computing nodes;\ndetermining, using at least one machine learning model, that at least one of the events is indicative of malicious activity that has circumvented or bypassed the antivirus tools; and\npreventing, based on the determining, the malicious software from continuing to execute;\nwherein at least a portion of the machine learning packs are selected from a library of available machine learning packs in response to a software tool providing recommended machine learning pack selections after automatically exploring the network topology.\n20. The non-transitory computer program product of claim 18, wherein the operations further comprise:\ndeploying the machine learning packs in the network topology."
}