{
    "patent_id": "US-11042800-B2",
    "title": "System and method for implementing an artificially intelligent virtual assistant using machine learning ",
    "assignee": "Cline, Inc.",
    "publication_date": "2021-06-22",
    "patent_link": "https://patents.google.com/patent/US11042800B2/en",
    "inventors": [
        "Jason Mars",
        "Lingjia Tang",
        "Michael Laurenzano",
        "Johann Hauswald",
        "Parker Hill"
    ],
    "classifications": [
        "G06N3/08",
        "G06F16/3329",
        "G06F16/35",
        "G06N20/00",
        "G06N20/20",
        "G06N3/044",
        "G06N3/045",
        "G06N3/084",
        "G06N3/088",
        "G06Q30/0201",
        "G06Q40/02",
        "G06N20/10",
        "G06N3/047",
        "G06N5/01",
        "G06N5/025",
        "G06N7/01"
    ],
    "abstract": "Systems and methods for implementing an artificially intelligent virtual assistant includes collecting a user query; using a competency classification machine learning model to generate a competency label for the user query; using a slot identification machine learning model to segment the text of the query and label each of the slots of the query; generating a slot value for each of the slots of the query; generating a handler for each of the slot values; and using the slot values to: identify an external data source relevant to the user query, fetch user data from the external data source, and apply one or more operations to the query to generate response data; and using the response data, to generate a response to the user query.",
    "claims": "\n1. A machine learning-based system that implements an artificially intelligent conversational agent, the system comprising:\na user interface that receives an input of a query;\none or more networked computing devices that implement the machine learning-based system including:\nimplementing a first machine learning model that:\n(i) receives the input of the query;\n(ii) predicts a first classification label based on the input of the query, the first classification label identifies one competency of a plurality of distinct competencies having a highest probability of matching an intent of the query;\nimplementing a second machine learning model that:\n(i) receives the input of the query;\n(ii) receives data associated with the first classification label;\n(iii) predicts a second classification label based on (a) the input of the query and (b) the data associated with the first classification label, the second classification label identifies the query as having a deficiency in input;\ngenerating a response to the query based on the second classification label, wherein\ngenerating the response to the query based on the second classification label includes:\nusing a slot identification machine learning model to:\n(i) identify one or more slots from a text of the query, wherein each of the one or more slots comprise a segment or grouping of one or more data elements of the text;\n(ii) generate a slot label for each of the one or more slots of the query, wherein the slot label relates to one of a plurality of predetermined slot labels that describes a given slot of the query;\ngenerating one or more slot values for each of the one or more slots by converting or mapping the data elements of each of the one or more slots to a program-comprehensible instance based on the slot label for each of the one or more slots, wherein a slot value from the one or more slot values comprises the program-comprehensible instance;\nidentifying a predetermined response template for the query based on a competency classification label or the slot label for each of the one or more slots of the query;\nidentifying one or more unfillable sections of the predetermined response template based on the one or more slot values of the query;\ngenerating one or more query construction handlers for each of the one or more unfillable sections of the predetermined response template by generating one or more computer-executable subroutines for constructing one or more conversational agent queries for obtaining additional input from a user;\ncollecting the additional input based on the constructed one or more conversational agent queries;\ngenerating additional slot values based on the collected additional input;\ngenerating response data using (1) the one or more slot values of the query and (2) the additional slot values of the collected additional input; and\ngenerating the response to the query based on the response data.\n2. The machine learning-based system according to claim 1, wherein\nthe second machine learning model is trained using crowdsourced training data comprising a plurality of training samples that lack or omit items of data required for successfully processing an intent of the real time user query.\n3. The machine learning-based system according to claim 1, wherein\nthe second classification label indicates a likelihood or a probability that the input of the query omits data required by the machine learning-based system to successfully process an intended request of the query.\n4. The machine learning-based system according to claim 1, wherein\nin response to identifying the second classification label, the machine learning-based system identifies one or more slot value data that are omitted from the query.\n5. The machine learning-based system according to claim 4, wherein\nthe second classification label is mapped to a deficient query resolution process that automatically constructs one or more queries based on the one or more slot value data that are omitted, wherein the machine learning-based system presents the constructed one or more queries to the user for a response for obtaining input data addressing omissions in the query from the user.\n6. A machine learning-based method for implementing an artificially intelligent conversational agent, the method comprising:\nimplementing a user interface that receives an input of a query;\nimplementing by one or more networked computing devices:\na first machine learning model that:\n(iii) receives the input of the query;\n(iv) predicts a first classification label based on the input of the query, the first classification label identifies one competency of a plurality of distinct competencies having a highest probability of matching an intent of the query;\na second machine learning model that:\n(iv) receives the input of the query;\n(v) receives data associated with the first classification label;\n(vi) predicts a second classification label based on (a) the input of the query and (b) the data associated with the first classification label, the second classification label identifies the query as having a deficiency in input;\ngenerating a response to the query based on the second classification label, wherein\ngenerating the response to the query based on the second classification label includes:\nusing a slot identification machine learning model to:\n(i) identify one or more slots from a text of the query, wherein each of the one or more slots comprise a segment or grouping of one or more data elements of the text;\n(ii) generate a slot label for each of the one or more slots of the query, wherein the slot label relates to one of a plurality of predetermined slot labels that describes a given slot of the query;\ngenerating one or more slot values for each of the one or more slots by converting or mapping the data elements of each of the one or more slots to a program-comprehensible instance based on the slot label for each of the one or more slots, wherein a slot value from the one or more slot values comprises the program-comprehensible instance;\nidentifying a predetermined response template for the query based on a competency classification label or the slot label for each of the one or more slots of the query;\nidentifying one or more unfillable sections of the predetermined response template based on the one or more slot values of the query;\ngenerating one or more query construction handlers for each of the one or more unfillable sections of the predetermined response template by generating one or more computer-executable subroutines for constructing one or more conversational agent queries for obtaining additional input from a user;\ncollecting the additional input based on the constructed one or more conversational agent queries;\ngenerating additional slot values based on the collected additional user input;\ngenerating response data using (i) the one or more slot values of the query and (2) the additional slot values of the collected additional input; and\ngenerating the response to the query based on the response data.\n7. The machine learning-based method according to claim 6, wherein\nthe second machine learning model is trained using crowdsourced training data comprising a plurality of training samples that lack or omit items of data required for successfully processing an intent of the query.\n8. The machine learning-based method according to claim 6, wherein\nthe second classification label indicates a likelihood or a probability that the input of the query omits data required to successfully process an intended request of the query.\n9. The machine learning-based method according to claim 6, wherein\nthe second classification label is mapped to a deficient query resolution process that automatically constructs one or more queries based on one or more slot value data that are omitted;\nthe method further comprising:\npresenting the constructed one or more queries to the user for the response for obtaining input data addressing omissions in the input from the user.",
    "status": "Active",
    "citations_own": [
        "US4516201A",
        "US5371807A",
        "US5727950A",
        "US6374226B1",
        "US20020083068A1",
        "US6455991B2",
        "US6456991B1",
        "US20040128624A1",
        "US20060166174A1",
        "US20070038609A1",
        "US20070185896A1",
        "US20090030800A1",
        "US20090204386A1",
        "US20100121808A1",
        "US7769705B1",
        "US7792353B2",
        "US20110125734A1",
        "US20110231182A1",
        "US8069131B1",
        "US8090085B2",
        "US8140450B2",
        "US20130031476A1",
        "US20130185074A1",
        "US20130288222A1",
        "US20140108308A1",
        "US8738365B2",
        "US8825533B2",
        "US20140337266A1",
        "US8898098B1",
        "US9112976B2",
        "US20150286955A1",
        "US20150310858A1",
        "US9189742B2",
        "US20150339590A1",
        "WO2015192239A1",
        "US20150382047A1",
        "US20160019469A1",
        "US20160026634A1",
        "US20160048772A1",
        "US20160063389A1",
        "US20160070992A1",
        "US20160260436A1",
        "US9552549B1",
        "US20170124487A1",
        "US20170160813A1",
        "US20170206152A1",
        "US20170300831A1",
        "US9862245B2",
        "US20180047388A1",
        "US20180225373A1",
        "US20180365212A1",
        "US20190034795A1",
        "US20190235831A1",
        "US10528866B1"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US11532179B1"
    ],
    "citedby_ftf": [
        "US11200506B2",
        "WO2019183219A1",
        "US20190325069A1",
        "US10832010B2",
        "JP6964558B2",
        "US10832003B2",
        "CA3114250A1",
        "US11017307B2",
        "US11183176B2",
        "US11195524B2",
        "US11238850B2",
        "US11404058B2",
        "US10896034B2",
        "US11449872B2",
        "US20200226615A1",
        "US11189269B2",
        "US11093707B2",
        "US11586980B2",
        "US10789266B2",
        "US10706045B1",
        "US11238077B2",
        "CN111475641B",
        "US11605137B2",
        "JP7187411B2",
        "US11256870B2",
        "US10789461B1",
        "US11354500B2",
        "US20210203575A1",
        "EP3910493A1",
        "US11037549B1",
        "US11132421B1",
        "CN113295635A",
        "WO2023086229A1"
    ]
}