{
    "patent_link": "https://patents.google.com/patent/US6012096A/en",
    "patent_id": "US6012096A",
    "title": "Method and system for peer-to-peer network latency measurement",
    "abstract": "A method and system for determining network latency between clients in a computer network, such as in a gaming zone environment. Each client determines the network latency between each other client via a ping, response, and response-response protocol. To this end, a first client places first time information such as a timestamp into a (ping) data packet and sends the packet to the second client, who places second time information into the packet, and sends the packet as a response packet back to the first client. The first client determines a first network latency based on its current time and the first time information returned in the response packet. The first client then sends the packet back to the second client as a response to the response packet. The second client determines a second latency based on the current time information at the second client and the second time information received in the response-response packet. For multiple clients such as in a gaming zone environment, each local client sorts the IP addresses of the other remote clients into sets of clients, and pings the remote client or clients in each set once per predetermined period, thereby distributing the pinging operation to balance incoming and outgoing network traffic.",
    "inventors": [
        "Craig A. Link",
        "Hoon Im"
    ],
    "assignee": "Microsoft Technology Licensing LLC",
    "classifications": [
        "H04L41/00",
        "H04L9/40",
        "H04L67/131"
    ],
    "claims": "\n1. In a computer network having at least two clients connected thereto, a method of determining network latency between a first and a second client, comprising the steps of, placing first time information into a data packet at the first client, and initially sending the packet to the second client, receiving the packet at the second client, placing second time information into the packet, and sending the packet to the first client, receiving the packet at the first client, determining a first network latency based on current time information at the first client and the first time information in the packet, and secondarily sending the packet to the second client, receiving the packet at the second client, and determining a second network latency based on current time information at the second client and the second time information in the packet.\n2. The method of claim 1 further comprising the step of placing the first network latency in the packet secondarily sent to the second client.\n3. The method of claim 2 wherein the step of determining a second network latency includes the step of calculating a latency based on a mathematical combination of the first latency, the current time information at the second client and the second time information in the packet.\n4. The method of claim 1 wherein the first time information comprises a timestamp.\n5. The method of claim 4 wherein the timestamp comprises less bits than the full number of bits used to maintain time at the first client.\n6. The method of claim 1 further comprising the step of placing a type identification code in the packet prior to each sending of the packet.\n7. The method of claim 1 further comprising the step of displaying a representation of the first network latency on a display of the first client.\n8. The method of claim 1 wherein the first client and the second client are connected to a gaming zone of the Internet.\n9. In a computer network having a local client and a set of remote clients connected thereto, a method of determining network latency at the local client to each of the remote clients, comprising the steps of, sorting the set of remote clients into subsets thereof, selecting a subset of remote clients, and for each remote client in the subset, placing first time information into a data packet and sending the packet to the remote client, receiving the packet as a response from the remote client, and determining a network latency based on current time information at the first client and the first time information in the packet.\n10. The method of claim 9 wherein the step of selecting the subset of remote clients includes the step of periodically selecting each of the subsets.\n11. The method of claim 10 further comprising the step of delaying for a predetermined interval between selecting each of the subsets.\n12. The method of claim 11 wherein the step of sorting the set of remote clients into subsets thereof comprises the step of hashing via a hash function at least part of the Internet protocol address of each remote client, wherein the hash function is based on the predetermined interval between selecting each of the subsets and a predetermined rate of periodically sending a packet to each of the remote clients in the set thereof.\n13. The method of claim 12 further comprising the step of placing the network latency in the response packet sent to the remote client.\n14. The method of claim 9 further comprising the step of, for each remote client in the subset, sending a response packet to the remote client in response to receiving the packet as a response from the remote client.\n15. The method of claim 9 further comprising the step of, for each remote client in the subset, storing the network latency in association with an identifier of the remote client.\n16. The method of claim 9 wherein the step of sorting the set of remote clients into subsets thereof comprises the step of hashing at least part of the Internet protocol address of each remote client.\n17. In a computer network having a local client and a set of remote clients connected thereto, a system for determining network latency at the local client to each of the remote clients, comprising, a distribution mechanism for sorting the set of remote clients into subsets of the set, a pinger thread for selecting a subset of remote clients, and for each remote client in the subset, the pinger thread placing first time information into a data packet and sending the packet to the remote client, and a pingee thread for receiving the packet as a response from the remote client, and determining a network latency based on current time information at the first client and the first time information in the packet.\n18. The system of claim 17 further comprising a table, wherein the distribution mechanism comprises a hashing mechanism for sorting each of the remote clients into subsets based on a unique identifier thereof, and wherein the distribution mechanism stores the identifier of each remote client in the table in a subset location determined by the hashing mechanism.\n19. The system of claim 18 wherein for each remote client, the pingee thread stores the latency determined for that client in the table in association with the unique identifier of that client.\n20. The system of claim 19 further comprising a display, and a mechanism for obtaining the latencies stored in the table for at least some of the remote clients and for displaying on the display a representation of the latencies for at least some of the remote clients.\n21. The system of claim 18 wherein the unique identifier is an Internet protocol address.",
    "status": "Expired - Lifetime",
    "citations_own": [
        "US5695400A",
        "US5899810A"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US6182125B1",
        "WO2001061509A1",
        "US20010022778A1",
        "US20010050903A1",
        "US6343341B1",
        "US6363085B1",
        "US6366907B1",
        "US6430610B1",
        "WO2002063488A1",
        "US6442603B1",
        "US20020120727A1",
        "US6463471B1",
        "US20020177910A1",
        "US6493754B1",
        "KR20030019900A",
        "US6560648B1",
        "US20030115321A1",
        "US20030115314A1",
        "US6587878B1",
        "US6601098B1",
        "WO2003084137A2",
        "US20030225549A1",
        "US6662223B1",
        "US20030229779A1",
        "US20030233445A1",
        "US20040024820A1",
        "US20040098478A1",
        "US6742023B1",
        "US20040122903A1",
        "US20040128617A1",
        "US20040148333A1",
        "US20040153563A1",
        "US20040152519A1",
        "US20040181762A1",
        "US20040199370A1",
        "US20040210659A1",
        "US20040210651A1",
        "WO2004093386A1",
        "US20040213290A1",
        "US20040215756A1",
        "EP1475925A1",
        "US20050089016A1",
        "US20050102413A1",
        "US20050108373A1",
        "US20050108371A1",
        "US6918014B1",
        "EP1553747A1",
        "US6928280B1",
        "US20050216559A1",
        "US20060019681A1",
        "US6993591B1",
        "US20060041673A1",
        "US20060080575A1",
        "US20060135258A1",
        "US20060136584A1",
        "US20060135259A1",
        "US7089301B1",
        "US20060195575A1",
        "US20060215574A1",
        "US20060239295A1",
        "US20070078005A1",
        "US20070076729A1",
        "US20070130304A1",
        "US7254605B1",
        "US7292585B1",
        "US7296088B1",
        "US20070265043A1",
        "US20070281789A1",
        "US7310629B1",
        "US20080005354A1",
        "US7319847B2",
        "US7327741B1",
        "US20080126420A1",
        "US20080126665A1",
        "EP1931084A1",
        "US7404006B1",
        "US20080298376A1",
        "US7467194B1",
        "US20080310302A1",
        "US7493363B2",
        "US20090122805A1",
        "US20090129777A1",
        "US20090144424A1",
        "US20090147806A1",
        "US7555527B1",
        "US20090172152A1",
        "US20090190482A1",
        "US7570600B1",
        "US20090248868A1",
        "US7613812B2",
        "US20090316728A1",
        "US7653059B1",
        "US20100022309A1",
        "US7680950B1",
        "US20100077087A1",
        "US20100138555A1",
        "US20100292006A1",
        "US20110035501A1",
        "US7949996B2",
        "US8060619B1",
        "CN101640641B",
        "US8214498B2",
        "US20120209915A1",
        "US8275864B1",
        "US8370523B1",
        "US8416763B1",
        "US8503991B2",
        "US20140089384A1",
        "US8699339B2",
        "US8706802B1",
        "GB2507816A",
        "US8886705B1",
        "US20150038234A1",
        "US9386127B2",
        "US9411769B2",
        "US9621473B2",
        "US20170257285A1",
        "US9776091B1",
        "US9789406B2",
        "US9935851B2",
        "US9967158B2",
        "US9993735B2",
        "US10033766B2",
        "US10091281B1",
        "US10089099B2",
        "US10116559B2",
        "US10118099B2",
        "US10142353B2",
        "US10171357B2",
        "US10177977B1",
        "US10207191B2",
        "US10250446B2",
        "US10286327B2",
        "US10289438B2",
        "US10315113B2",
        "US10374904B2",
        "US10376793B2",
        "US10500498B2",
        "US10523512B2",
        "US10523541B2",
        "US10554501B2",
        "US10561945B2",
        "US10574575B2",
        "US10594542B2",
        "US10594560B2",
        "US10680887B2",
        "US10708152B2",
        "US10708183B2",
        "US10729975B1",
        "US10764141B2",
        "US10765948B2",
        "US10798015B2",
        "US10826803B2",
        "US10873593B2",
        "US10873794B2",
        "US10917438B2",
        "US10931629B2",
        "US10972388B2",
        "US10974150B2",
        "US10999149B2",
        "US11040286B2",
        "US11097193B2",
        "US11128700B2",
        "US11233821B2",
        "US20220152497A1",
        "US11351459B2",
        "US11524234B2",
        "US11679330B2",
        "US11712627B2",
        "US11765046B1"
    ],
    "citedby_ftf": []
}