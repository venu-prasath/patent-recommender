{
    "patent_id": "US-2019147474-A1",
    "title": "Promotion code validation apparatus and method ",
    "assignee": "Retailmenot, Inc.",
    "publication_date": "2019-05-16",
    "patent_link": "https://patents.google.com/patent/US20190147474A1/en",
    "inventors": [
        "David Lemphers",
        "Christopher Couhault",
        "Alexandros Suvacioglu"
    ],
    "classifications": [
        "G06Q30/0225",
        "G06F17/5009",
        "G06F30/20",
        "G06N20/00",
        "G06Q30/02",
        "G06Q30/0207",
        "G06Q30/0222",
        "H04L67/02"
    ],
    "abstract": "A method including interacting with a promotion code provider programmatically, providing a promotion code to a validation function of the promotion code provider, and evaluating a response from the promotion code provider. The act of interacting with a promotion code provider can include controlling an interface that simulates user actions, such as but not limited to controlling an in-memory web browser through an API, where the API provides a set of functions for simulating user actions. Accordingly, the method can be used to quickly and easily determine whether one or more promotion codes, such as online coupons, are valid.",
    "claims": "\n1-19. (canceled)\n20. One or more tangible, non-transitory, machine-readable media storing instructions that, when executed by a computer, effectuate operations comprising:\nobtaining, with a computer, a first plurality of strings assigned to a test driver;\nidentifying, with the computer, by the test driver, a first string-submission interface of a first website;\ncausing, with the computer, by the test driver, testing of at least some of the first plurality of strings by causing submission of strings among the first plurality of strings via the first string-submission interface; and\nstoring, with the computer, at least some test results of the testing in memory.\n21. The one or more media of claim 20, wherein the operations further comprise:\ndetermining whether a first response to submission of a first string among the first plurality of strings indicates that the first string is effective to cause a numerical value in a webpage of the first website to decrease.\n22. The one or more media of claim 21, wherein the operations further comprise:\ncontrolling a web browser to simulate a user submission of a second string among the first plurality of strings.\n23. The one or more media of claim 22, wherein the operations further comprise:\ndetermining whether a second response to submission of the second string indicates that the second string is effective to cause the numerical value to decrease.\n24. The one or more media of claim 20, wherein:\nat least some of the first plurality of strings are assigned to the test driver by a test monitor configured to assign batches of strings to a plurality of test drivers.\n25. The one or more media of claim 24, wherein:\nthe operations further comprise sending test results to the test monitor; and\nat least some of the first plurality of strings are selected by the test monitor based on previous test results sent to the test monitor.\n26. The one or more media of claim 20, wherein:\nat least some of the strings are caused to be submitted via a first website-specific application programming interface request.\n27. The one or more media of claim 20, wherein the operations comprise:\nobtaining a second plurality of strings;\nidentifying, by another test driver, a second string-submission interface of a second website; and\ncausing, by the other test driver, testing of at least some of the second plurality of strings by causing submission of strings among the second plurality of strings via a second website-specific application programming interface request.\n28. The one or more media of claim 20, wherein the operations comprise:\nsteps for controlling a web browser to simulate user actions interacting with web site.\n29. The one or more media of claim 20, wherein identifying the string-submission interface comprises:\ndetecting an input text box in a given webpage of the website based at least in part on proximity of a first element in a document object model of the given webpage to a second element of the document object model, wherein:\nproximity is independent of layout; and\nthe second element includes or is a button interaction element.\n30. One or more tangible, non-transitory, machine-readable media storing instructions that, when executed by one or more processors, effectuate operations comprising:\nobtaining, with one or more processors, a first plurality of promotion codes assigned to a validation driver by a monitor;\ndetermining, with one or more processors, at least in part by the validation driver, how to submit the promotion codes by detecting a first promotion-code-entry webpage of a first merchant website and identifying a first promotion-code interface of the first promotion-code-entry webpage;\ntesting, with one or more processors, by the validation driver, the first plurality of promotion codes by simulating user actions of submitting the first plurality of promotion codes via the first promotion-code interface and determining whether responses to the submissions indicate respective promotion codes are valid; and\nstoring, with one or more processors, at least some test results of the testing in memory.\n31. The one or more media of claim 30, wherein:\nthe first plurality of promotion codes are assigned based on at least some test results from another test of promotion codes.\n32. The one or more media of claim 30, wherein the operations further comprise:\ndetermining that a given promotion code requires that a given product be in a shopping cart at checkout and, after testing validity of another promotion code causes the shopping cart to cease to include the given product, re-adding the product to the shopping cart.\n33. The one or more media of claim 30, wherein:\nsome promotion codes in the first plurality of promotion codes are asynchronously tested for validity.\n34. The one or more media of claim 30, wherein the operations further comprise:\ncausing a JSON object containing validation data indicative of test results to be passed to the monitor.\n35. The one or more media of claim 30, wherein:\nthe validation driver is configured to detect changes in webpages relative to previous versions of webpages.\n36. The one or more media of claim 30, wherein:\nthe operations further comprise controlling a web browser through an automation application programming interface.\n37. The one or more media of claim 30, wherein the operations further comprise:\ndetecting a first promotion-code input text box based at least in part on proximity of a first element of a document object model of the first promotion-code-entry webpage to a second element of the document object model, wherein the first promotion-code input text box is identified as the first promotion-code interface.\n38. The one or more media of claim 37, wherein proximity is determined based on proximity in the document object model and is independent of layout.\n39. The one or more media of claim 37, wherein proximity is determined based on proximity to a button interaction element and the second element includes or is the button interaction element.\n40. The one or more media of claim 30, wherein:\nthe operations further comprise detecting a first promotion-code input text box based at least in part on proximity of nodes in a graph data structure; and\nproximity is determined based at least in part on a union of two nodes in the graph data structure, the graph data structure specifying relationships between webpage elements of the detected promotion-code-entry webpage.\n41. The one or more media of claim 30, wherein simulating user actions of submitting the first plurality of promotion codes comprises:\nsteps for controlling an interface that simulates user actions.\n42. The one or more media of claim 30, wherein the operations comprise:\nlimiting promotion-code validation testing based on a merchant-specific throttling pattern and historical validation rate data.\n43. The one or more media of claim 30, wherein the operations comprise:\nsteps for evaluating a response from a promotion-code provider.\n44. The one or more media of claim 30, wherein the operations comprise:\ncausing, by the validation driver, testing of a second plurality of promotion codes on a second merchant website, wherein the first merchant website and the second merchant website use different terminology in responses to promotion-code submissions to indicate whether promotion codes are valid.\n45. The one or more media of claim 30, wherein the validation driver is configured to automatically test validity of promotion codes and, in response to test results, cause an online shopper to receive a promotion code that test results indicate are valid.\n46. A method, comprising:\nobtaining, with a computer, a first plurality of promotion codes assigned to a validation driver by a monitor;\ndetermining, with the computer, at least in part by the validation driver, how to submit the promotion codes by detecting a first promotion-code-entry webpage of a first merchant website and identifying a first promotion-code interface of the first promotion-code-entry webpage;\ntesting, with the computer, by the validation driver, the first plurality of promotion codes by simulating user actions of submitting the first plurality of promotion codes via the first promotion-code interface and determining whether responses to the submissions indicate respective promotion codes are valid; and\nstoring, with the computer, at least some test results of the testing in memory.\n47. The method of claim 46, wherein:\nthe first plurality of promotion codes are assigned based on at least some test results from another test of promotion codes.\n48. The method of claim 46, comprising:\ncausing, by the validation driver, testing of a second plurality of promotion codes on a second merchant website, wherein the first merchant website and the second merchant website use different terminology in responses to promotion-code submissions to indicate whether promotion codes are valid.\n49. The method of claim 46, comprising:\ncausing a JSON object containing validation data indicative of test results to be passed to the monitor.",
    "status": "Abandoned",
    "citations_own": [
        "WO2002029605A2",
        "US20030069957A1",
        "US6564342B2",
        "US20060276997A1",
        "US20070124319A1",
        "US20070233579A1",
        "US20080140707A1",
        "US7516401B2",
        "US20090271368A1",
        "AU2010100229A4",
        "US20100241518A1",
        "US20110283148A1",
        "US20140074584A1"
    ],
    "citations_ftf": [
        "US5924078A",
        "US6157940A",
        "US20010037205A1",
        "US20020010627A1",
        "US20020046109A1",
        "US20040254836A1",
        "US8707312B1",
        "US20050192948A1",
        "US20060282494A1",
        "US7584194B2",
        "US7822620B2",
        "US20080256065A1",
        "KR100806284B1",
        "US20080021771A1",
        "US7490272B2",
        "AU2007260686B2",
        "US20070300141A1",
        "CA2684094C",
        "US20080300973A1",
        "US7912214B2",
        "US20090113349A1",
        "US20090119620A1",
        "US8296722B2",
        "US20100094860A1",
        "US10380634B2",
        "US9754274B1",
        "US9465872B2",
        "US8849725B2",
        "US8838485B2",
        "US8271585B2",
        "US9037585B2",
        "US8315849B1",
        "US20120136712A1",
        "US10235688B2",
        "US20170148046A1",
        "WO2013051005A2",
        "WO2013052662A1",
        "US20130117098A1",
        "US9679296B2",
        "US20130254181A1",
        "US9674258B2",
        "WO2013130229A1",
        "US20130262204A1",
        "US8990183B2",
        "US9727891B2",
        "US20160217484A9",
        "US9697551B1"
    ],
    "citedby_own": [],
    "citedby_ftf": [
        "US9679296B2",
        "US9639853B2",
        "US20170186027A1",
        "US20140372222A1",
        "US10592915B2",
        "US9189377B1",
        "US10534512B2",
        "US9697110B1",
        "US11074305B1",
        "WO2018124836A1",
        "US11205188B1",
        "US11216865B2",
        "US10937046B1",
        "US20220020034A1",
        "US20230018387A1"
    ]
}