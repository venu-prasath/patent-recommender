{
    "patent_id": "US-2020250465-A1",
    "title": "Accurate tag relevance prediction for image search ",
    "assignee": "Adobe Inc.",
    "publication_date": "2020-08-06",
    "patent_link": "https://patents.google.com/patent/US20200250465A1/en",
    "inventors": [
        "Zhe Lin",
        "Xiaohui SHEN",
        "Jonathan Brandt",
        "Jianming Zhang",
        "Chen Fang"
    ],
    "classifications": [
        "G06V20/35",
        "G06K9/623",
        "G06F16/24578",
        "G06F16/285",
        "G06F16/51",
        "G06F16/583",
        "G06F18/2113",
        "G06F18/217",
        "G06F18/23213",
        "G06F18/24147",
        "G06K9/4628",
        "G06K9/6223",
        "G06K9/6262",
        "G06K9/6276",
        "G06N3/045",
        "G06N3/0454",
        "G06N3/08",
        "G06V10/763",
        "G06V10/764",
        "G06N20/10"
    ],
    "abstract": "Embodiments of the present invention provide an automated image tagging system that can predict a set of tags, along with relevance scores, that can be used for keyword-based image retrieval, image tag proposal, and image tag auto-completion based on user input. Initially, during training, a clustering technique is utilized to reduce cluster imbalance in the data that is input into a convolutional neural network (CNN) for training feature data. In embodiments, the clustering technique can also be utilized to compute data point similarity that can be utilized for tag propagation (to tag untagged images). During testing, a diversity based voting framework is utilized to overcome user tagging biases. In some embodiments, bigram re-weighting can down-weight a keyword that is likely to be part of a bigram based on a predicted tag set.",
    "claims": "\n1. A computer-implemented method comprising:\ninputting an image into a trained image classifier, wherein the trained image classifier is based on a recursive clustering process that generates data clusters, wherein a step in the recursive clustering process comprises partitioning data into clusters and recombining all clusters from the clusters with a size exceeding a predefined threshold prior to a subsequent partitioning;\ndetermining, for the image, a related data cluster from the data clusters of the trained image classifier, the related data cluster comprising a set of training images and corresponding tags; and\npropagating a tag to the image, the tag selected from the corresponding tags of the set of training images.\n2. The method of claim 1, wherein the related data cluster is identified using a similarity analysis of features in the image in relation to the data clusters.\n3. The method of claim 1, wherein the tag is selected from the corresponding tags of the set based on a relevance score.\n4. The method of claim 3, wherein the relevance score is determined using a confidence value of the tag based on a measure of similarity between two of the corresponding tags in the related data cluster, wherein the tag is one of the two corresponding tags.\n5. The method of claim 4, wherein determining the measure of similarity between the two corresponding tags in the cluster further comprises finding a cluster-sensitive hashing distance representing a number of times the two corresponding tags are assigned to a same cluster in relation to iterations of the recursive clustering process.\n6. The method of claim 3, wherein the relevance score comprises a confidence value of the tag and down-weighting the tag when the tag is determined to be part of a bigram based on a predicted tag set.\n7. The method of claim 3, wherein the relevance score is determined by assigning an effective number of votes to the tag based on a first similarity between tag sequences for a first image and a second image in relation to a second similarity between a first image tag provider of the tag and a second tag provider of a second tag.\n8. The method of claim 1, wherein the tag selected from the corresponding tags has a highest relevance score.\n9. The method of claim 1, further comprising:\nusing a support vector machine (SVM) classifier for a dictionary of tags to determine a confidence value for the tag, wherein the SVM classifier is trained in a lower dimensional space using k nearest neighbors as training samples.\n10. A non-transitory computer storage medium comprising computer-useable instructions that, when used by one or more computing devices, cause the one or more computing devices to perform operations comprising:\ninputting an image into a trained image classifier, wherein the trained image classifier is based on a recursive clustering process that generates data clusters, wherein a step in the recursive clustering process comprises partitioning data into clusters and recombining all clusters from the clusters with a size exceeding a predefined threshold prior to a subsequent partitioning;\ndetermining, for the image, a related data cluster from the data clusters of the trained image classifier, the related data cluster comprising a set of training images and corresponding tags, the related data cluster identified from a similarity analysis of features in the image in relation to the data clusters; and\npropagating a tag to the image, the tag selected from the corresponding tags of the set of training images.\n11. The non-transitory computer storage medium of claim 10, wherein the tag is selected from the corresponding tags of the set based on a relevance score.\n12. The non-transitory computer storage medium of claim 11, wherein the relevance score is determined using a confidence value of the tag based on a measure of similarity between two of the corresponding tags in the related data cluster, wherein the tag is one of the two corresponding tags.\n13. The non-transitory computer storage medium of claim 12, wherein determining the measure of similarity between the two corresponding tags in the cluster further comprises finding a cluster-sensitive hashing distance representing a number of times the two corresponding tags are assigned to a same cluster in relation to iterations of the recursive clustering process.\n14. The non-transitory computer storage medium of claim 11, wherein the relevance score comprises a confidence value of the tag and the tag is down-weighted when determined to be part of a bigram based on a predicted tag set.\n15. The non-transitory computer storage medium of claim 11, wherein the relevance score is determined by assigning an effective number of votes to the tag based on a first similarity between tag sequences for a first image and a second image in relation to a second similarity between a first image tag provider of the tag and a second tag provider of a second tag.\n16. The non-transitory computer storage medium of claim 10, wherein the tag selected from the corresponding tags has a highest relevance score\n17. The non-transitory computer storage medium of claim 10, further comprising:\nusing a support vector machine (SVM) classifier for a dictionary of tags to determine a confidence value for the tag, wherein the SVM classifier is trained in a lower dimensional space using k nearest neighbors as training samples.\n18. A computing system comprising:\nmeans for determining, for an image, a related data cluster from data clusters of a trained image classifier, the related data cluster comprising a set of training images and corresponding tags; and\nmeans for propagating a tag to the image, the tag selected from the corresponding tags of the set of training images.\n19. The system of claim 18 further comprising:\nmeans for inputting the image into the trained image classifier, wherein the trained image classifier is based on a recursive clustering process that generates the data clusters, wherein a step in the recursive clustering process comprises partitioning data into clusters and recombining all clusters from the clusters with a size exceeding a predefined threshold prior to a subsequent partitioning.\n20. The system of claim 18 further comprising:\nmeans for determining a relevance score for the tag; and\nselecting the tag from the corresponding tags of the set of training images based on the relevance score.",
    "status": "Active",
    "citations_own": [],
    "citations_ftf": [],
    "citedby_own": [],
    "citedby_ftf": []
}