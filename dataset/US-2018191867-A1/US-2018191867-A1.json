{
    "patent_id": "US-2018191867-A1",
    "title": "Systems, methods, and devices for an enterprise ai and internet-of-things platform ",
    "assignee": "C3 loT, Inc.",
    "publication_date": "2018-07-05",
    "patent_link": "https://patents.google.com/patent/US20180191867A1/en",
    "inventors": [
        "Thomas M. Siebel",
        "Edward Y. Abbo",
        "Houman Behzadi",
        "John Coker",
        "Scott Kurinskas",
        "Thomas Rothwein",
        "David Tchankotadze"
    ],
    "classifications": [
        "G06F8/10",
        "G06F16/254",
        "H04L67/34",
        "G06F16/25",
        "G06F16/283",
        "G06F16/288",
        "G06F8/24",
        "G06F8/35",
        "G06F8/77",
        "G06F9/54",
        "G06N20/00",
        "G06N20/20",
        "G06N5/01",
        "G06Q10/06",
        "H04L67/02",
        "H04L67/10",
        "H04L67/12",
        "H04L67/322",
        "H04L67/42",
        "H04L67/53",
        "H04L67/566",
        "H04L67/60",
        "H04L67/61",
        "H04L69/16",
        "H04L69/40",
        "H04L67/565",
        "H04L67/5651",
        "Y02P90/80",
        "Y02P90/84",
        "Y04S40/18"
    ],
    "abstract": "Systems, methods, and devices for a cyberphysical (IoT) software application development platform based upon a model driven architecture and derivative IoT SaaS applications are disclosed herein. The system may include concentrators to receive and forward time-series data from sensors or smart devices. The system may include message decoders to receive messages comprising the time-series data and storing the messages on message queues. The system may include a persistence component to store the time-series data in a key-value store and store the relational data in a relational database. The system may include a data services component to implement a type layer over data stores. The system may also include a processing component to access and process data in the data stores via the type layer, the processing component comprising a batch processing component and an iterative processing component.",
    "claims": "\n1. A method comprising:\nobtaining and aggregating data from a plurality of different sources comprising smart devices, sensors, enterprise systems, extraprise and/or Internet sources, wherein the data is persisted in a plurality of data stores and comprises structured data, time-series data, unstructured data, and relational data; and\nimplementing abstraction and continuous processing of the aggregated data using a model driven architecture comprising a type system, thereby simplifying or unifying access or processing of the aggregated data using programmatic interfaces, rules, and/or machine learning algorithms to make inferences or draw conclusions to inform end users and/or machine-to-machine actions.\n2. The method of claim 1, wherein the method is implemented on a platform as a service (PaaS) that is used in conjunction with one or more remote cloud-based virtual computing and storage platforms.\n3. The method of claim 1, wherein the method is implemented on a platform as a service (PaaS) that is used in conjunction with one or more on-premise computing and storage platforms.\n4. The method of claim 1, wherein the method is implemented on a platform as a service (PaaS) that is used in conjunction with one or more hybrid cloud platforms comprising integrated on-premise resources and cloud resources.\n5. The method of claim 2, 3, or 4, wherein the PaaS is configured to enable the end users to design, develop, deploy and/or operate one or more classes of applications comprising of big data applications, wherein said classes of applications comprise (1) distributed computing applications and (2) non-distributed computing applications.\n6. The method of claim 5, wherein the one or more classes of applications further comprises descriptive, predictive and/or prescriptive analytics applications.\n7. The method of claim 6, wherein the one or more classes of applications further comprises Internet-of-Things applications.\n8. The method of claim 1, wherein the unstructured data comprises text, audio data, image data and/or video.\n9. The method of claim 1, wherein the data further comprises geospatial and/or temporal data.\n10. The method of claim 1, wherein the type system comprises conceptual domain models of various attributes and processes related to different entities or domains.\n11. The method of claim 10, wherein the various attributes and processes comprise persistence, data representations, data interrelationships, computing processes, and/or the machine learning algorithms.\n12. The method of claim 10, wherein the data, associated metadata, processes, and their interrelationships are represented as a plurality of types in the type system.\n13. The method of claim 12, wherein a type selected from the plurality of types may comprise aggregations of two or more types, while ensuring automatic and guaranteed referential integrity of the underlying two or more types.\n14. The method of claim 13, wherein the plurality of types and/or collections of types are automatically exposed and accessible through RESTful interfaces.\n15. The method of claim 1, wherein the type system comprises a plurality of defined types comprising of (1) objects/entities, fields and functions; (2) mix ins; (3) value types; (4) primitive types, (5) collection types; (6) reference types; (7) lambdas, and/or (8) machine learning algorithms.\n16. The method of claim 15, wherein the mix ins comprise multiple types that are mixed in.\n17. The method of claim 16, wherein the mix ins are parametric and have unbound variables that are defined by the types that mixed in.\n18. The method of claim 17, wherein different types are configured to bind the variables in different ways.\n19. The method of claim 1, wherein the data is persisted differently to the plurality of data stores depending on the data type and underlying data storage technologies, and the type system provides type-relational and data stores mapping based on a plurality of types for use in a variety of applications.\n20. The method of claim 1, wherein the type system is configured to abstract: (1) underlying storage details comprising of database type, database language, or storage format from applications or other services, and (2) processing technology comprising of data transposition, queues, stream processing, batch processing, data encryption, authorization, and/or authentication.\n21. The method of claim 1, wherein the plurality of data stores comprises (1) a key value store, (2) a distributed file system, (3) graph stores, (4) a relational database, and/or (5) a multi-dimensional data store.\n22. The method of claim 21, comprising: (1) persisting the time-series data in the key value store, (2) persisting the unstructured data in the distributed file system, and (3) persisting the relational data in the relational database.\n23. The method of claim 21, wherein the plurality of types form a type layer that provides a common abstraction layer at or above the plurality of data stores comprising the key value store, distributed file system, graph stores, relational database, and multi-dimensional data store, thereby permitting abstraction of details of the underlying data stores and/or data store access methods.\n24. The method of claim 23, wherein the abstraction permits changes to be dynamically made to the type system in a seamless manner without requiring the end users to be made aware of, or to consider updates that are being made to the applications, the underlying technologies, programming languages, or associated business logic.\n25. The method of claim 24, wherein improvements or upgrades to one or more of the machine learning algorithms are made substantially instantaneously available to one or more types or applications that utilize said machine learning algorithms, without requiring changes to be made to the one or more types or business logic for those applications.\n26. The method of claim 1, wherein the type system includes a collection of types that are grouped based on related types of functionality, and wherein the collection of types comprises definitions for types, platform services, data, data shapes, application logic functions, validation constraints, machine learning algorithms, optimizations, and/or user interface (UI) layouts.\n27. The method of claim 1, wherein the data is transformed to a unified federated data image using the type system, and the machine learning algorithms are configured to analyze the persisted and/or stream data in the unified federated data image.\n28. The method of claim 1, wherein data representing an accuracy of the inferences is further obtained and aggregated to inform the machine learning algorithms.\n29. The method of claim 1, wherein the machine learning algorithms are configured to make the inferences, draw the conclusions, and/or learn directly from massive sets of the data on a large scale as the data is being aggregated, abstracted and processed.\n30. The method of claim 29, wherein subsets of the data need not be extracted for analysis by the machine learning algorithms.\n31. The method of claim 1, wherein the model driven architecture comprising the type system provides: (1) abstract representations of knowledge and activities governing different application domains; (2) an abstraction layer that is available and common to the end users comprising of programmers, data scientists, and/or business analysts; and (3) enables types to be aggregated and published subject to access controls.\n32. The method of claim 1, wherein the method further comprises:\nautomatically adding storage nodes and processing nodes to a storage cluster to accommodate and process incoming data; and\nautomatically rebalancing and partitioning the incoming data into the time-series data, unstructured and relational data across the storage cluster as the nodes are being added.\n33. The method of claim 1, wherein the plurality of different sources utilize different underlying technologies or programming languages, and the type system is configured to provide an interface across the different underlying technologies and programming languages.\n34. The method of claim 1, wherein a complexity of a machine learning and/or Internet-of-Things application is reduced by orders of magnitude when the data is abstracted and processed using the model driven architecture, as compared to processing of the data using a structured programming architecture.\n35. The method of claim 1, wherein the model driven architecture is configured to enforce validation of data or type structure using annotations or keywords.\n36. The method of claim 1, wherein the type system is logically separated into four or more distinct layers comprising an entity layer, an application (business logic and optimization) layer, a machine learning inference layer, and a user interface (UI) layer.\n37. The method of claim 36, wherein (1) the entity layer includes definitions for base data types associated with devices, entities, and/or customers, (2) the application layer includes definitions for application logic functions, (3) the machine learning inference layer includes one or more machine learning algorithms, and (4) the UI layer defines default view definitions for how specific types of data, types, or results of application logic functions are displayed.\n38. The method of claim 37, wherein the type system is configured to merge the definitions for the different layers at runtime, and generate composite types that include metadata from all four layers of the type system.\n39. The method of claim 1, wherein a type defined by the type system includes one or more defined methods or functions with a standards-based interface (API) for said type.\n40. The method of claim 39, comprising:\n(1) explicitly calling the one or more defined methods or functions within business logic; and/or\n(2) automatically triggering the one or more defined methods or functions based on requests or functions made by business logic or time or data completeness-based triggers via the type system.\n41. The method of claim 1, wherein the abstraction is implemented via an abstraction layer, and the type system is configured to (1) abstract details above the abstraction layer and (2) abstract details between a plurality of types.\n42. The method of claim 41, wherein the plurality of types comprises type definitions indicating one or more properties, relationships, and functions relative to the plurality of data stores and processing technologies.\n43. The method of claim 41, wherein the plurality of types comprises canonical types that include (1) a canonical type definition that defines an interface used for integration of the data, and (2) one or more transformation types that are used to transform a selected canonical type to a corresponding type selected from said plurality of types.\n44. The method of claim 1, wherein the time-series data comprises data from one or more of a smart meter, a smart appliance, a smart device, a monitoring system, a telemetry device, or a sensor.\n45. The method of claim 1, wherein the relational data comprises data from one or more of a customer system, an enterprise system, an operational system, a website, or web accessible application program interface (API).\n46. The method of claim 1, wherein the method is capable of being used in one or more of the following classes of applications: market segmentation and targeting, customer relationship management (CRM), customer churn, predictive maintenance, sensor network health, fraud detection, connected home/building analytics, enterprise energy management, health care analytics, inventory optimization, supply network risk management, production optimization, vehicle fleet analytics, digital oil field, smart grid analytics and operations, fraud detection, traffic flow optimization, and/or telecommunication services and analytics.\n47. The method of claim 1, wherein the data is obtained, aggregated, and processed from the plurality of different sources substantially in real-time.\n48. The method of claim 1, wherein the continuous processing of the data comprises batch processing, stream processing, iterative processing, and/or continuous analytic processing of the data.\n49. The method of claim 1, wherein the data from the plurality of different sources is integrated based on a canonical data model into a common format and/or into one or more of the data stores.\n50. The method of claim 49, wherein the canonical data model is application agnostic in nature, and enables different applications to communicate with each other in the common format.\n51. The method of claim 50, wherein a change in internal format of a selected application only requires a corresponding change in transformation logic between the selected application and the canonical data model, without affecting all other applications and their associated transformation logic.\n52. The method of claim 1, wherein flexible input and output connectors are provided for batch and stream processing and data storage.\n53. A system comprising:\nan integration component for obtaining and aggregating data from a plurality of different sources comprising smart devices, sensors, enterprise systems, extraprise and/or Internet sources, wherein the data is persisted into a plurality of data stores and comprises structured data, time-series data, unstructured data, and relational data; and\na data services component for implementing abstraction and continuous processing of the aggregated data using a model driven architecture comprising a type system, thereby simplifying or unifying access or processing of the aggregated data using programmatic interfaces, rules, and/or machine learning algorithms to make inferences or draw conclusions to inform end users and/or machine-to-machine actions.\n54. A non-transitory computer readable medium storing instructions that, when executed by one or more servers and/or devices, causes the one or more servers and/or devices to perform a method, the method comprising:\nobtaining and aggregating data from a plurality of different sources comprising smart devices, sensors, enterprise systems, extraprise and/or Internet sources, wherein the data is persisted into a plurality of data stores and comprises structured data, time-series data, unstructured data, and relational data; and\nimplementing abstraction and continuous processing of the aggregated data using a model driven architecture comprising a type system, thereby simplifying or unifying access or processing of the aggregated data using programmatic interfaces, rules, and/or machine learning algorithms to make inferences or draw conclusions to inform end users and/or machine-to-machine actions.",
    "status": "Active",
    "citations_own": [
        "US20070112714A1",
        "US20120266129A1",
        "US8626877B2",
        "US20140156806A1",
        "US20170126741A1"
    ],
    "citations_ftf": [
        "US1011436A",
        "US1023578A",
        "US5132920A",
        "DE69130587T2",
        "GB2343763B",
        "US6178362B1",
        "US7334015B1",
        "GB2374442B",
        "US7877421B2",
        "US7403987B1",
        "US8290762B2",
        "US7367028B2",
        "US7159208B2",
        "US6961148B2",
        "US7137071B2",
        "US20030172368A1",
        "US20050177816A1",
        "US20030177146A1",
        "US9565275B2",
        "CA2489236C",
        "WO2004070507A2",
        "TW568397U",
        "US7366993B2",
        "US7349913B2",
        "US20050240592A1",
        "US20050234969A1",
        "US20050228808A1",
        "US7324856B1",
        "US7797354B2",
        "EP1875335A4",
        "US20060259442A1",
        "US20070214408A1",
        "US8239844B2",
        "US8239845B2",
        "US8255890B2",
        "US8166465B2",
        "US8380842B2",
        "US8442917B1",
        "WO2009052121A2",
        "US8671294B2",
        "US8401990B2",
        "US8433530B2",
        "US8190555B2",
        "US9146548B2",
        "US8321187B2",
        "US9129231B2",
        "SG175874A1",
        "CA2730913A1",
        "US9268815B2",
        "CN102473097B",
        "US20110252426A1",
        "US9886483B1",
        "US8615597B2",
        "US8359223B2",
        "US20120054147A1",
        "US20120271472A1",
        "WO2012047746A2",
        "JP5710928B2",
        "US8972484B2",
        "US9148669B2",
        "US8442935B2",
        "US20120310559A1",
        "US9031902B2",
        "US20130173322A1",
        "US9477936B2",
        "US20130332194A1",
        "US9253054B2",
        "US8745066B2",
        "US9569804B2",
        "US8768795B2",
        "US9563670B2",
        "US20140279899A1",
        "US8868486B2",
        "WO2014143755A1",
        "US9438648B2",
        "US9922101B1",
        "US10776244B2",
        "US9069737B1",
        "US20150058681A1",
        "US9734221B2",
        "US20150095303A1",
        "US20150120224A1",
        "US10157347B1",
        "US10348581B2",
        "WO2015179778A1",
        "US10380135B2",
        "US9824133B1",
        "US20180107660A1",
        "US10510032B2",
        "US9799017B1",
        "EP3278213A4",
        "US20190007517A1",
        "US10235780B2",
        "US10846285B2"
    ],
    "citedby_own": [
        "US20180293158A1",
        "US20180336248A1",
        "US10154409B2",
        "CN109189599A",
        "US20190094899A1",
        "US10268524B2",
        "US20190138964A1",
        "US20190205241A1",
        "US10356651B2",
        "US10356618B2",
        "CN110097953A",
        "US20190266622A1",
        "US20190289466A1",
        "US20190295001A1",
        "US20190340290A1",
        "US10491748B1",
        "US20200012541A1",
        "US20200034926A1",
        "WO2020023998A1",
        "US20200075168A1",
        "US20200081916A1",
        "EP3637260A1",
        "WO2020076385A1",
        "WO2020077350A1",
        "US10628423B2",
        "KR20200052449A",
        "US10659313B2",
        "US10664317B2",
        "WO2020154461A1",
        "US20200279200A1",
        "CN111737234A",
        "CN111784353A",
        "EP3695585B1",
        "EP3695584B1",
        "US20200370773A1",
        "WO2020243354A1",
        "WO2020251598A1",
        "US10887262B1",
        "US10902381B2",
        "US10942728B2",
        "US10963518B2",
        "US10983899B2",
        "US10997187B2",
        "US11005996B2",
        "US11004157B2",
        "US11003179B2",
        "US11017339B2",
        "US11036215B2",
        "US11044620B2",
        "US11068958B1",
        "US11068254B1",
        "US11100423B2",
        "US11120299B2",
        "US11128630B2",
        "US11146647B2",
        "US11144226B2",
        "KR20210129413A",
        "US11165962B2",
        "US11182142B2",
        "US11190410B2",
        "US20210375491A1",
        "US11199837B2",
        "US11199835B2",
        "US11216742B2",
        "US11216190B2",
        "US11240294B2",
        "US11237546B2",
        "US20220067626A1",
        "US20220109728A1",
        "US20220124006A1",
        "US11320469B2",
        "US11334725B2",
        "US11349859B2",
        "US11349709B2",
        "US20220232069A1",
        "US20220250656A1",
        "AU2021200533A1",
        "US11451043B1",
        "WO2022197294A1",
        "US11461488B2",
        "US11463478B2",
        "US20220314434A1",
        "US11487586B2",
        "US11510086B2",
        "US11514089B2",
        "US11544216B2",
        "US11556558B2",
        "US11556507B2",
        "US11605023B2",
        "WO2022271686A3",
        "US11645344B2",
        "US20230161795A1",
        "US11729066B2",
        "US11770307B2",
        "US11775850B2",
        "US11774944B2",
        "US20230315763A1",
        "US11809907B2"
    ],
    "citedby_ftf": [
        "US10057333B2",
        "US8856323B2",
        "US10075520B2",
        "US9411327B2",
        "US9430491B2",
        "US11602611B2",
        "US10990894B2",
        "US10896421B2",
        "US10812327B2",
        "US20150339673A1",
        "US20160055427A1",
        "US20150032589A1",
        "US20150066771A1",
        "US10468126B1",
        "EP3197384A4",
        "US20160071017A1",
        "US20160063502A1",
        "US20160078367A1",
        "US11080709B2",
        "US10546099B2",
        "US11288328B2",
        "US11238090B1",
        "US11341338B1",
        "US10290001B2",
        "KR101593834B1",
        "US9774604B2",
        "US10638295B2",
        "US20160245279A1",
        "US10648735B2",
        "US20160313216A1",
        "US20160245686A1",
        "US11106871B2",
        "EP4148589A1",
        "KR102046700B1",
        "US11231826B2",
        "KR20160109242A",
        "IN2015CH01317A",
        "US11042128B2",
        "KR20160112724A",
        "US20160283506A1",
        "CA2980618C",
        "US10366111B1",
        "US10425350B1",
        "US10404787B1",
        "US10541938B1",
        "US10812341B1",
        "US10348810B1",
        "US10791063B1",
        "US10706970B1",
        "US10270707B1",
        "US10515097B2",
        "US10509684B2",
        "US10496926B2",
        "US10860622B1",
        "US10776404B2",
        "US10541936B1",
        "US10511659B1",
        "US10505863B1",
        "US10528875B1",
        "US9692447B2",
        "US10135777B2",
        "EP3278213A4",
        "US10437814B2",
        "US10306013B2",
        "US10015178B2",
        "US10419452B2",
        "JP5997330B1",
        "US10671915B2",
        "EP3332335A1",
        "US10699595B2",
        "US9774994B2",
        "US10231084B2",
        "US10437575B2",
        "US10648823B2",
        "US10272921B2",
        "US10318404B2",
        "US10313455B2",
        "US10848384B2",
        "US11222034B2",
        "US11151654B2",
        "US11436911B2",
        "US10902524B2",
        "US10708151B2",
        "US20170124464A1",
        "US11570214B2",
        "US11546380B2",
        "US11507858B2",
        "US11232268B1",
        "US11222184B1",
        "US11170038B1",
        "US10673710B2",
        "US9537914B1",
        "US20170161833A1",
        "US10228962B2",
        "US11588776B1",
        "CA2951618A1",
        "US10235780B2",
        "US20170177446A1",
        "US10387266B2",
        "US10656861B1",
        "US10592564B2",
        "US11181875B2",
        "US11268732B2",
        "US10182045B2",
        "US10083055B2",
        "US11146449B2",
        "US10310832B2",
        "US20170242935A1",
        "US10210155B2",
        "US10177930B1",
        "US11308115B2",
        "US10080132B2",
        "US9743272B1",
        "US10039113B2",
        "EP3437053A4",
        "US10135817B2",
        "KR101758558B1",
        "US10362109B2",
        "US10831350B1",
        "US11003334B1",
        "CN109154802A",
        "US10637951B2",
        "WO2018002731A2",
        "US10505756B2",
        "US11774920B2",
        "US10417451B2",
        "US10552914B2",
        "CN114625076A",
        "US10983507B2",
        "US10783535B2",
        "US20170337486A1",
        "US10600063B2",
        "US10868743B2",
        "US10810676B2",
        "US10796253B2",
        "US10103936B2",
        "US10334462B2",
        "WO2018004540A1",
        "US10540265B2",
        "US10439913B2",
        "US11256828B1",
        "US10885463B2",
        "US20180027049A1",
        "US10366060B2",
        "US10216556B2",
        "US10776846B2",
        "US10705926B2",
        "EP3491793A1",
        "US10546313B2",
        "US10387198B2",
        "US20230185608A1",
        "US10216582B2",
        "US10956467B1",
        "EP3475888A1",
        "US11463526B2",
        "US10397303B1",
        "US10437565B2",
        "US10313470B2",
        "US10831641B2",
        "US10643168B2",
        "US10586242B2",
        "US10684939B2",
        "US10893011B2",
        "US10476896B2",
        "US10650621B1",
        "US10643228B2",
        "US10628840B2",
        "US10621072B2",
        "US20180075386A1",
        "US20180075163A1",
        "JP7005600B2",
        "US10338967B2",
        "US11593377B2",
        "US11580107B2",
        "US10977260B2",
        "US10127400B2",
        "US11269939B1",
        "US11550847B1",
        "US11232100B2",
        "US11314753B2",
        "US11023463B2",
        "US11567993B1",
        "US11003714B1",
        "US10956415B2",
        "US11604795B2",
        "US10726009B2",
        "US11294941B1",
        "US11442935B2",
        "US11250056B1",
        "US11599541B2",
        "US11281706B2",
        "US10776355B1",
        "US11663227B2",
        "US20180089324A1",
        "US11321321B2",
        "US11615104B2",
        "US11416528B2",
        "US11620336B1",
        "US11562023B1",
        "US11106734B1",
        "US11243963B2",
        "US10795884B2",
        "US11222066B1",
        "US11126632B2",
        "US10984044B1",
        "US11586627B2",
        "US11163758B2",
        "US10353965B2",
        "US11461334B2",
        "US9766991B1",
        "US10212182B2",
        "US11080588B2",
        "US10616347B1",
        "US10127125B2",
        "JP6591695B2",
        "WO2018085353A1",
        "KR20180047828A",
        "DE102016120972A1",
        "US10936618B2",
        "US10581620B2",
        "WO2018089990A1",
        "US10824681B2",
        "US10380348B2",
        "US10382348B2",
        "US10708389B2",
        "US10713384B2",
        "US11580348B2",
        "CN106648648B",
        "US11039225B2",
        "US10917706B2",
        "US10575250B2",
        "US9946777B1",
        "US10262910B2",
        "US10374968B1",
        "US11057344B2",
        "US10445696B2",
        "US10756950B2",
        "CN108322380B",
        "US10761920B2",
        "US10855783B2",
        "US11163624B2",
        "US10832361B2",
        "US11113244B1",
        "US10762072B2",
        "US11169495B2",
        "US10229577B2",
        "US10445680B2",
        "US11334824B2",
        "US11082250B2",
        "US10854194B2",
        "US20190361412A1",
        "US10515098B2",
        "US10417245B2",
        "US11360447B2",
        "US11764991B2",
        "US11568148B1",
        "US11068661B1",
        "US11153376B2",
        "US10831509B2",
        "US10447623B2",
        "US20180246924A1",
        "JP6419234B2",
        "US10885014B2",
        "US10831773B2",
        "US10721254B2",
        "US11029053B2",
        "US11222268B2",
        "US10762563B2",
        "US10645080B2",
        "WO2018169430A1",
        "WO2018169429A1",
        "US11042144B2",
        "US20180285201A1",
        "US10706375B2",
        "US10607155B2",
        "US11386435B2",
        "SG10201702888XA",
        "US10687212B2",
        "US10992711B2",
        "US10469567B2",
        "TWI684936B",
        "US10798145B1",
        "EP3616007A1",
        "US10476902B2",
        "TWI719302B",
        "US20180315125A1",
        "US10838950B2",
        "US10540282B2",
        "US10437724B2",
        "US20180321981A1",
        "US11663205B2",
        "US11204816B2",
        "US10788229B2",
        "US20180341889A1",
        "US20180343184A1",
        "US20180349445A1",
        "US10212024B2",
        "US11188390B2",
        "US11726822B2",
        "US11022947B2",
        "US11271769B2",
        "US10929421B2",
        "US11250343B2",
        "US10359771B2",
        "US10917803B2",
        "WO2018232147A1",
        "US11062226B2",
        "US10805317B2",
        "US11199956B2",
        "US11627195B2",
        "US11132636B2",
        "CN109118028B",
        "US10735904B2",
        "US10548185B2",
        "US11036767B2",
        "CN107479943B",
        "US11507947B1",
        "US11159671B2",
        "US11487730B2",
        "US11036690B2",
        "US11366941B2",
        "US10730526B2",
        "US11267481B2",
        "WO2019018442A1",
        "US11551195B2",
        "US20190028414A1",
        "US20190028909A1",
        "EP3655824A1",
        "US10505897B2",
        "US10721303B2",
        "US20190033811A1",
        "US11398299B2",
        "US11681667B2",
        "US10735273B2",
        "US11775891B2",
        "US10599460B2",
        "US11316865B2",
        "US10546655B2",
        "US20190050780A1",
        "US10681185B1",
        "US11797877B2",
        "US20190065973A1",
        "US11025693B2",
        "US10313413B2",
        "US10581945B2",
        "US20190068455A1",
        "EP3451248A1",
        "US10855655B2",
        "WO2019051010A1",
        "CA3075754A1",
        "US11301491B2",
        "WO2019055647A1",
        "US20190079990A1",
        "US10949581B2",
        "EP3682373A4",
        "US10831890B2",
        "US10756990B1",
        "US10558541B1",
        "TWI653587B",
        "US11282021B2",
        "US10785102B2",
        "US11151137B2",
        "US10896182B2",
        "US10860618B2",
        "US10796350B2",
        "US10962945B2",
        "US11120012B2",
        "US20190095821A1",
        "US11070568B2",
        "US11314788B2",
        "US11367142B1",
        "US10778776B2",
        "US20200242513A1",
        "US20200279624A1",
        "US20190102841A1",
        "US10650001B2",
        "WO2019069144A1",
        "US10764169B2",
        "US10591301B2",
        "US10685034B2",
        "US11314601B1",
        "US11082296B2",
        "US11095502B2",
        "US10616168B2",
        "WO2019094729A1",
        "US10824608B2",
        "US10469600B2",
        "US10938950B2",
        "US11397726B2",
        "US10809682B2",
        "US11281169B2",
        "CN109814861A",
        "JP6649349B2",
        "US11127235B2",
        "US10963330B2",
        "US11126927B2",
        "US20190164094A1",
        "US10732948B2",
        "US10678936B2",
        "KR102071315B1",
        "US11055371B2",
        "US11010232B2",
        "US10693997B2",
        "US11068991B2",
        "US10862988B2",
        "WO2019125801A1",
        "US10726051B2",
        "US10921792B2",
        "US11676046B2",
        "US10769570B2",
        "KR102035706B1",
        "US10719533B2",
        "WO2019139595A1",
        "US11561986B1",
        "WO2019142052A2",
        "US10805329B2",
        "US10951460B1",
        "US10997180B2",
        "US11038770B2",
        "US10585724B2",
        "CN110149353A",
        "CN108346003B",
        "US10262271B1",
        "US10812349B2",
        "US10755046B1",
        "CN114374581B",
        "US20190260831A1",
        "US10394628B1",
        "US10664294B2",
        "US20190273649A1",
        "EP3762928A4",
        "BR112020014770A2",
        "US10721142B1",
        "CN110276503B",
        "CN108614690B",
        "US10860614B2",
        "CN108510081A",
        "EP3769319B1",
        "US11010694B2",
        "CN108509184B",
        "US10728340B2",
        "US11568170B2",
        "CN110351315A",
        "US10790662B2",
        "US10900796B2",
        "US10897138B2",
        "CN108763289B",
        "CN109144562B",
        "US10990990B2",
        "US11334543B1",
        "US20190342297A1",
        "US10819584B2",
        "US10402397B1",
        "US11062036B2",
        "EP3570513A1",
        "US10944603B2",
        "US10686882B2",
        "US10540669B2",
        "US10620937B1",
        "CA3102116A1",
        "US11308232B2",
        "WO2019234297A1",
        "US10812409B2",
        "CN112640381A",
        "GB2574906B",
        "US10779340B2",
        "US20190389074A1",
        "US10706236B1",
        "US10817275B2",
        "US11354406B2",
        "US11321327B2",
        "US10936614B2",
        "US11104596B2",
        "US11626192B1",
        "US11482322B1",
        "US11177041B1",
        "US11501859B1",
        "US11120366B2",
        "CN109086390B",
        "CN109062578B",
        "US20200042917A1",
        "US11352874B2",
        "US20200050766A1",
        "US11763950B1",
        "US11569981B1",
        "US10846651B2",
        "US10832196B2",
        "US11520803B1",
        "US11366842B1",
        "US11182411B2",
        "WO2020061707A1",
        "US10775976B1",
        "US10761813B1",
        "US11647095B1",
        "US20210383333A1",
        "US10750351B1",
        "US10805154B2",
        "JP6956280B2",
        "US10936585B1",
        "US11019060B2",
        "CN111143232B",
        "US11392652B2",
        "CN109213787B",
        "US10439825B1",
        "CN109522120B",
        "EP3889857A4",
        "WO2020112349A1",
        "US11200250B2",
        "US11356440B2",
        "CN109587142B",
        "US11210578B2",
        "US11451571B2",
        "WO2020122902A1",
        "US11165774B2",
        "JP7059916B2",
        "US10747407B2",
        "US20200210310A1",
        "US11689573B2",
        "US10705955B1",
        "WO2020142164A1",
        "US11665184B2",
        "US11436567B2",
        "US10788798B2",
        "US11250313B2",
        "US11797550B2",
        "CN111526171B",
        "US10819797B2",
        "JP7156082B2",
        "WO2020176535A1",
        "US11263554B2",
        "US10877875B2",
        "US11675787B2",
        "US11368410B2",
        "WO2020191028A1",
        "US10841188B2",
        "US11392843B2",
        "US11625789B1",
        "US11316664B2",
        "US20200319857A1",
        "CN111796923A",
        "US10802815B1",
        "US11621085B1",
        "CN110058846B",
        "WO2020220216A1",
        "CN113227982A",
        "US11715051B1",
        "US11238469B1",
        "US11270077B2",
        "RU2731744C1",
        "CN110135817A",
        "US20200382524A1",
        "US11736508B2",
        "US11711374B2",
        "CN110363382A",
        "US11776060B2",
        "US20200387836A1",
        "US11032381B2",
        "KR20190082692A",
        "CN110287211B",
        "US11635990B2",
        "US11086754B2",
        "US11501881B2",
        "US20210005207A1",
        "WO2021006778A1",
        "US11308428B2",
        "US10958560B2",
        "WO2021009925A1",
        "US10963828B2",
        "US10904100B1",
        "US10810528B1",
        "US11288728B2",
        "US11256608B2",
        "KR102214060B1",
        "CN110519816B",
        "US11328205B2",
        "US11580131B2",
        "EP4026028A4",
        "KR20210030106A",
        "US10992534B2",
        "WO2021050816A1",
        "CN110782122A",
        "US11763233B2",
        "JP6847382B1",
        "US20210105625A1",
        "CA3156838A1",
        "US10956833B1",
        "US20210112128A1",
        "US11489745B2",
        "US20210117882A1",
        "US20210117860A1",
        "US11494380B2",
        "US11803940B2",
        "US11775353B2",
        "CN110795088B",
        "US11068742B2",
        "US11188758B2",
        "US20220277331A1",
        "US20210136220A1",
        "JP2023500378A",
        "EP4055551A1",
        "US20210133650A1",
        "US11726752B2",
        "US11442749B2",
        "CN110874718A",
        "US20210149886A1",
        "US10904038B1",
        "US20210158259A1",
        "US11270785B1",
        "TWI730530B",
        "CN110888867B",
        "US11238129B2",
        "CN111080479B",
        "US20210182307A1",
        "CA3159291A1",
        "EP4078489A1",
        "US20210201236A1",
        "CN115210700A",
        "US11734269B2",
        "CN111131501B",
        "US11663617B2",
        "CN111222790B",
        "US11403347B2",
        "US11509619B2",
        "US11409546B2",
        "US11736615B2",
        "US11070670B1",
        "CN111324635A",
        "US11327962B1",
        "US11443264B2",
        "US11741393B2",
        "US11748350B2",
        "CN111339298A",
        "US11605012B2",
        "US20210279633A1",
        "US10846106B1",
        "US11418595B2",
        "US11741437B2",
        "US20210294317A1",
        "US20210294848A1",
        "US11531687B2",
        "CN111459541B",
        "US11237752B2",
        "US11392960B2",
        "US11481785B2",
        "US10997195B1",
        "US11614923B2",
        "US11514119B2",
        "US11461349B2",
        "TW202143139A",
        "US20210365449A1",
        "US20210382807A1",
        "US11455199B2",
        "KR102188132B1",
        "US11763178B2",
        "US11115799B1",
        "US11327663B2",
        "US11556563B2",
        "US11595288B2",
        "US11526388B2",
        "US11625737B2",
        "US20210406964A1",
        "WO2022003692A1",
        "US11539796B2",
        "US11095506B1",
        "US11231913B1",
        "US11526825B2",
        "WO2022022806A1",
        "CN111782205A",
        "US11803792B2",
        "US11726846B2",
        "US11645247B2",
        "CN112215454B",
        "CN111984436A",
        "US20220067756A1",
        "WO2022043976A1",
        "US11212195B1",
        "US11397773B2",
        "US11367021B2",
        "US20220114333A1",
        "EP4229518A1",
        "US11704313B1",
        "CN112217837B",
        "CN112291239B",
        "US11392573B1",
        "US11640565B1",
        "US11726764B2",
        "US11665221B2",
        "US11615660B2",
        "WO2022108542A1",
        "CN112418439B",
        "US11314584B1",
        "CN112463147B",
        "US11113269B1",
        "US11645624B2",
        "WO2022124877A1",
        "CN112543134B",
        "US11663192B2",
        "AU2021409790A1",
        "US11777799B2",
        "CN112529335B",
        "IT202000032585A1",
        "US11675650B2",
        "US11397629B1",
        "US11074142B1",
        "CN112765143B",
        "US11741119B2",
        "CN112817578B",
        "US11650995B2",
        "US11080294B1",
        "TWI742999B",
        "US11711348B2",
        "US11736585B2",
        "US20220283995A1",
        "US11729071B1",
        "RU2761136C1",
        "US11477285B2",
        "US11687487B1",
        "US11748917B2",
        "US20220309079A1",
        "CN113194041B",
        "US20220318670A1",
        "US20220317635A1",
        "US11663219B1",
        "CN113259265B",
        "US20220358162A1",
        "US11550555B2",
        "WO2022236323A1",
        "US20220358115A1",
        "CN113159731A",
        "US20220366500A1",
        "CN113392104B",
        "US11269752B1",
        "US11368539B1",
        "US20220383341A1",
        "US11294929B1",
        "US20220398288A1",
        "US20220405609A1",
        "US11575536B2",
        "US11769066B2",
        "US11720400B2",
        "CN113596619A",
        "US11354599B1",
        "US20230004573A1",
        "US20230004474A1",
        "CN113591925B",
        "US11677875B2",
        "US20230012177A1",
        "US20230016863A1",
        "CN113645142A",
        "US11687399B2",
        "WO2023002379A1",
        "US20230023922A1",
        "US20230036483A1",
        "WO2023009195A1",
        "US20230033681A1",
        "US11790300B2",
        "US11748075B2",
        "US11403072B1",
        "US20230047463A1",
        "US20210377130A1",
        "US20230056637A1",
        "US20230065744A1",
        "US11558239B1",
        "WO2023039212A1",
        "US11477208B1",
        "US11354430B1",
        "WO2023049232A1",
        "CN113570002A",
        "US20230100315A1",
        "US11789781B1",
        "US11438437B1",
        "US20230123231A1",
        "US11552975B1",
        "US20230129050A1",
        "US11796974B2",
        "US11704311B2",
        "US11714930B2",
        "WO2023114402A1",
        "CN113934735B",
        "US20230206233A1",
        "CN113992646B",
        "US20230217273A1",
        "US20230247089A1",
        "US20230237052A1",
        "CN114443695A",
        "US20230281213A1",
        "US20230252390A1",
        "US20230269272A1",
        "US20230281212A1",
        "CN114629783A",
        "WO2023178260A1",
        "WO2023186274A1",
        "CN114810644B",
        "US11587053B1",
        "US11736616B1",
        "CN115330281B",
        "CN115422305A",
        "CN115808911B",
        "CN116008714B",
        "CN116561540B"
    ]
}