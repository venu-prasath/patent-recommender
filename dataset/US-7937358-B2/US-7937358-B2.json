{
    "patent_id": "US-7937358-B2",
    "title": "System and method for building and merging a rulebase with object oriented software ",
    "assignee": "Computer Associates Think, Inc.",
    "publication_date": "2011-05-03",
    "patent_link": "https://patents.google.com/patent/US7937358B2/en",
    "inventors": [
        "Peter J. Herrera",
        "Ronald Cass",
        "Kirk D. Wilson",
        "It-Beng Tan"
    ],
    "classifications": [
        "G06F17/00",
        "G06N5/022",
        "G06N5/00",
        "G06N5/046"
    ],
    "abstract": "A method for building a rulebase includes receiving a plurality of rulebase components. The method also includes merging the rulebase components to create a consolidated rulebase.",
    "claims": "\n1. A non-transitory computer-readable medium having computer executable instructions thereon, the computer-executable instructions, when executed by one or more processing devices, causing the one or more processing devices to implement a rulebase, the rulebase comprising:\na class element identifying one or more fields and one or more methods;\na constraint element identifying a condition placed on a value of at least one field, the constraint element further identifying a violation action to be performed when the condition is violated; and\na rule element identifying a rule associated with at least one of the fields,\nwherein at least one of the fields is associated with a number datatype, the number datatype representing both integer and floating point values, the number datatype having a corresponding precision indicator identifying a number of decimal places associated with the number datatype.\n2. The computer-readable medium of claim 1, wherein the rule comprises a decision tree rule, the decision tree rule comprising at least one expression dividing the rule into a plurality of subtrees.\n3. The computer-readable medium of claim 1, wherein the rule comprises a pattern matching rule, the pattern matching rule comprising one or more bind variables identifying data objects to be monitored, a premise representing a condition, and an action, wherein the action is executed when one or more of the data objects identified by the bind variables satisfy the condition in the premise.\n4. The computer-readable medium of claim 1, wherein a method that returns a value has no side effects.\n5. The computer-readable medium of claim 1, wherein the rulebase further comprises an association element identifying a relationship between two classes.\n6. The computer-readable medium of claim 5, wherein the rule comprises a pattern matching rule, the pattern matching rule comprising one or more bind variables, and the one or more processing devices are further caused to implement one or more pointers that are used with the association element or with the one or more bind variables.\n7. The computer-readable medium of claim 1, wherein the rule element supports at least one of decision tree rules or pattern matching rules.\n8. The computer-readable medium of claim 1, wherein the class element comprises a first class element and the constraint element comprises a first constraint element, and the rulebase further comprises: a first initialization method element, a first association element, and a domain element,\nwherein the domain element comprises a second initialization method element, a second association element, a second constraint element, a second class element, and a ruleset element, and\nwherein the ruleset element comprises a third initialization method element, a third association element, a third constraint element, a third class element, and the rule element.\n9. The computer-readable medium of claim 1, wherein at least one other of the fields is associated with a boolean representing a value of true or false, a string representing a sequence of characters, or a set representing an unordered collection of unique elements.\n10. A computer-implemented process for implementing a rulebase, the process being executed by one or more processors configured to perform a plurality of operations, the operations comprising:\ninstantiating a class element that identifies one or more fields and one or more methods;\ninstantiating a constraint element that identifies a condition placed on a value of at least one field, and a violation action that is performed when the condition is violated; and\ninstantiating a rule element that identifies a rule associated with at least one of the fields,\nwherein at least one of the fields is associated with a number datatype, the number datatype representing both integer and floating point values, the number datatype having a corresponding precision indicator identifying a number of decimal places associated with the number datatype.\n11. The process of claim 10, wherein the rule comprises a decision tree rule, the decision tree rule comprising at least one expression dividing the rule into a plurality of subtrees.\n12. The process of claim 10, wherein the rule comprises a pattern matching rule, the pattern matching rule comprising one or more bind variables identifying data objects to be monitored, a premise representing a condition, and an action, wherein the action is executed when one or more of the data objects identified by the bind variables satisfy the condition in the premise.\n13. The process of claim 10, wherein a method that returns a value has no side effects.\n14. The process of claim 10, the operations further comprising instantiating an association element that identifies a relationship between two classes.\n15. The process of claim 14, wherein the rule comprises a pattern matching rule, the pattern matching rule comprising one or more bind variables, and the operations further comprise instantiating one or more pointers that are used with the association element or with the one or more bind variables.\n16. The process of claim 10, wherein the rule element supports at least one of decision tree rules or pattern matching rules.\n17. The process of claim 10, wherein the class element comprises a first class element and the constraint element comprises a first constraint element, and the operations further comprise:\ninstantiating a first initialization method element;\ninstantiating a first association element; and\ninstantiating a domain element,\nwherein the domain element comprises a second initialization method element, a second association element, a second constraint element, a second class element, and a ruleset element, and\nwherein the ruleset element comprises a third initialization method element, a third association element, a third constraint element, a third class element, and the rule element.\n18. The process of claim 10, wherein at least one other of the fields is associated with a boolean representing a value of true or false, a string representing a sequence of characters, or a set representing an unordered collection of unique elements.\n19. A computer-implemented system for implementing a rulebase, the system comprising one or more processors configured to:\ninstantiate a class element that identifies one or more fields and one or more methods;\ninstantiate a constraint element that identifies a condition placed on a value of at least one field, and a violation action that is performed when the condition is violated; and\ninstantiate a rule element that identifies a rule associated with at least one of the fields,\nwherein at least one of the fields is associated with a number datatype, the number datatype representing both integer and floating point values, the number datatype having a corresponding precision indicator identifying a number of decimal places associated with the number datatype.\n20. The system of claim 19, wherein the rule comprises a decision tree rule, the decision tree rule comprising at least one expression dividing the rule into a plurality of subtrees.\n21. The system of claim 19, wherein the rule comprises a pattern matching rule, the pattern matching rule comprising one or more bind variables identifying data objects to be monitored, a premise representing a condition, and an action, wherein the action is executed when one or more of the data objects identified by the bind variables satisfy the condition in the premise.\n22. The system of claim 19, wherein a method that returns a value has no side effects.\n23. The system of claim 19, wherein the one or more processors are further configured to instantiate an association element that identifies a relationship between two classes.\n24. The system of claim 23, wherein the rule comprises a pattern matching rule, the pattern matching rule comprising one or more bind variables, and the one or more processors are further configured to instantiate one or more pointers that are used with the association element or with the one or more bind variables.\n25. The system of claim 19, wherein the rule element supports at least one of decision tree rules or pattern matching rules.\n26. The system of claim 19, wherein the class element comprises a first class element and the constraint element comprises a first constraint element, and the one or more processors are further configured to:\nInstantiate a first initialization method element;\ninstantiate a first association element; and\ninstantiate a domain element,\nwherein the domain element comprises a second initialization method element, a second association element, a second constraint element, a second class element, and a ruleset element, and\nwherein the ruleset element comprises a third initialization method element, a third association element, a third constraint element, a third class element, and the rule element.\n27. The system of claim 19, wherein at least one other of the fields is associated with a boolean representing a value of true or false, a string representing a sequence of characters, or a set representing an unordered collection of unique elements."
}