{
    "patent_link": "https://patents.google.com/patent/US6377945B1/en",
    "patent_id": "US6377945B1",
    "title": "Search system and method for retrieval of data, and the use thereof in a search engine",
    "abstract": "A search system for information retrieval includes a data structure in the form of a non-evenly spaced sparse suffix tree for storing suffixes of words and/or symbols, or sequences thereof, in a text T, a metric M including combined edit distance metrics for an approximate degree of matching respectively between words and/or symbols, or between sequences thereof, in the text T and a query Q, the latter distance metric including weighting cost functions for edit operations which transform a sequence S of the text into a sequence P of the query Q, and search algorithms for determining the degree of matching respectively between words and/or symbols, or between sequences thereof, in respectively the text T and the query Q, such that information R is retrieved with a specified degree of matching with the query Q. Optionally the search system also includes algorithms for determining exact matching such that information R may be retrieved with an exact degree of matching with the query Q.",
    "inventors": [
        "Knut Magne Risvik"
    ],
    "assignee": "Altaba Inc",
    "classifications": [
        "G06F16/3346",
        "Y10S707/99933",
        "Y10S707/99935",
        "Y10S707/99936",
        "Y10S707/99937"
    ],
    "claims": "\n1. A search system for information retrieval, particularly information stored in form of text, wherein a text T comprises words and/or symbols s and sequences S thereof, wherein the information retrieval takes place with a given or varying degree of matching between a query Q, wherein the query Q comprises words and/or symbols q and sequences thereof P, and retrieved information R comprising words and/or symbols and sequences thereof from the text T, wherein the search system comprises a data structure for storing at least a part of the text T, and a metric M which measures the degree of matching between the query Q and retrieved information R, and wherein the search system implements search algorithms for executing a search, particularly a full text search on the basis of keywords kw, characterized in that the data structure comprises a tree structure in the form of a non-evenly spaced sparse suffix tree ST(T) for storing suffixes of words and/or symbols s and sequences S thereof in the text T, that the metric M comprises a combination of an edit distance metric D(s,q) for an approximate degree of matching between words and/or symbols s;q in respectively the text T and a query Q and an edit distance metric Dws(S,P) for an approximate degree of matching between sequences S of words and/or symbols s in the text T and a query sequence P of words and/or symbols q in the query Q, the latter edit distance metric including weighting cost functions for edit operations which transform sequences of words and/or symbols s in the text T into the sequence P of words and/or symbols q in the query Q, the weighting taking place with a value proportional to a change in the length of the sequence S upon a transformation or dependent on the size of the words and/or symbols s;q in sequences S;P to be matched, that the implemented search algorithms comprise a first algorithm for determining the degree of matching between words and/or symbols s;q in the suffix tree representation of respectively the text T and a query Q, and a second algorithm for determining the degree of matching between sequences S;P of words and/or symbols s;q in the suffix tree representation of respectively the text T and the query Q, said first and/or second algorithms searching the data structure with queries Q in the form of either words, symbols, sequences of words or sequences of symbols or combinations thereof, such that information R is retrieved on the basis of query Q with a specified degree of matching between the former and the latter, and that the search algorithms optionally also comprise a third algorithm for determining exact matching between words and/or symbols s;q in the suffix tree representation of respectively the text T and the query Q and/or a fourth algorithm for determining exact matching between sequences S;P of words and/or symbols s;q in the suffix tree representation of respectively the text T and the query Q, said third and/or fourth algorithms searching the data structure with queries Q in the form of either words, symbols, sequences of words, or sequences of symbols or combinations thereof, such that information R is retrieved on the basis of the query Q with an exact matching between the former and the latter.\n2. A search system according to claim 1, wherein the non-evenly spaced sparse suffix tree ST(T) is a word-spaced sparse suffix tree SSTws(T) comprising only a subset of the suffixes in the text T.\n3. A search system according to claim 2, wherein the word-spaced sparse suffix tree SSTws(T) is a keyword-spaced sparse suffix tree SSTkws(T).\n4. A search system according to claim 3, wherein the first algorithm for detecting the degree of keyword matching in a keyword-spaced sparse suffix tree SSTkws(T) is implemented in pseudo-code as follows:\n5. A search system according to claim 3, wherein the second algorithm for determining the degree of keyword sequence matching in a keyword-spaced sparse suffix tree SSTkws(T) is implemented in code as follows:\n6. A search system according to claim 5, wherein the ApproxMatchRest subroutine of the second algorithm is implemented in pseudo-code as follows:\n7. A search system according to claim 3, wherein the third algorithm for determining an exact keyword matching in a keyword-spaced sparse suffix tree SSTkws(I) is implemented in pseudo-code as follows:\n8. A search system according to claim 3, wherein the fourth algorithm for determining an exact keyword sequence matching in a keyword-spaced sparse suffix tree SSTkws(T) is implemented in pseudo-code as follows:\n9. The use of a search system according to claim 1 in an approximate search engine.\n10. A method in a search system for information retrieval, particularly information stored in form of text, wherein a text T comprises words and/or symbols s and sequences S thereof, wherein the information retrieval takes place with a given or varying degree of matching between a query Q, wherein the query Q comprises words and/or symbols q and sequences P thereof, and retrieved information R comprising words and/or symbols and sequences thereof from the text T, wherein the search system comprises a data structure for storing at least a part of the text T, and a metric M which measures the degree of matching between the query Q and retrieved information R, and wherein the search system implements search algorithms for executing a search, particularly a full text search on the basis of keywords kw, wherein the information in the text T is divided into words s and word sequences S, the words being substrings of the entire text separated by word boundary terms and forming a sequence of symbols, and wherein each word is structured as a sequence of symbols, characterized by generating the data structure as a word-spaced sparse suffix tree SSTws(T) of a text T for representing all the suffixes starting at a word separator symbol in the text T, storing sequence information of the words s in the text T in the word-spaced sparse suffix tree SSTws(T), generating a combined edit distance metric M comprising an edit distance metric D(s,q) for words s in the text T and a query word q in a query Q and a word-size dependent edit distance metric Dws(S,P) for sequences S of words s in the text T and a sequence P of words q in the query Q, the edit distance metric Dws(S,P) being the minimum sum of costs for edit operations transforming a sequence S into the sequence P, the minimum sum of costs being the minimum sum of cost functions for each edit operation weighted by a value proportional to the change in the total length of the sequence S or by the ratio of the current word length and average word length in the sequences S;P, and determining the degree of matching between words s,q by calculating the edit distance D(s,q) between the words s of the retrieved information R and the word q of a query Q, or in case the words s,q are more than k errors from each other, determining the degree of matching between the word sequences SR; PQ of retrieved information R and a query Q respectively by calculating the edit distance Dws(SR,PQ) for all matches.\n11. The method according to claim 10, further comprising additionally weighting an edit operation which changes a word s into word q with a parameter for the proximity between the characters of the words s;q, thus taking the similarity of the words s;q in regard when determining the cost of the edit operation in question.\n12. The method according to claim 10, further comprising limiting the number of matches by calculating the edit distance Dws(SR,PQ) for restricted number of words in the query word sequence PQ.\n13. A method according to claim 10, further comprising defining the edit distance D(s,q) between words s and a word q recursively and calculating the edit distance D(s,q) by means of a dynamic programming procedure.\n14. A method according to claim 10, further comprising defining the edit distance Dws(S,P) between sequences S and a sequence P recursively and calculating the edit distance Dws(S,P) by means of a dynamic programming procedure.",
    "status": "Expired - Lifetime",
    "citations_own": [
        "WO1992015954A1",
        "US5412807A",
        "WO1996000945A1",
        "US5511159A",
        "US5627748A",
        "US5724571A"
    ],
    "citations_ftf": [
        "AU620994B2",
        "JPH07210569A",
        "JP2829259B2",
        "KR980004154A",
        "KR100284777B1"
    ],
    "citedby_own": [
        "US20020152202A1",
        "US20030009453A1",
        "US6526402B2",
        "US20030065661A1",
        "US6584465B1",
        "US20030126117A1",
        "US20030163452A1",
        "US20030187836A1",
        "US20030195890A1",
        "US20030236789A1",
        "WO2004006126A1",
        "US6681219B2",
        "US6704728B1",
        "US20040054661A1",
        "US6711561B1",
        "US6718325B1",
        "US20040078366A1",
        "US6745181B1",
        "US20040225653A1",
        "US20040254904A1",
        "US20050010566A1",
        "US20050050459A1",
        "US6915294B1",
        "US20050216430A1",
        "US20060101504A1",
        "US20060101503A1",
        "US7080073B1",
        "US7103838B1",
        "US20060212441A1",
        "US7127450B1",
        "US7136846B2",
        "US20070005686A1",
        "US20070013708A1",
        "US20070050337A1",
        "US20070061321A1",
        "US20070150443A1",
        "US20070172124A1",
        "US20070260595A1",
        "US20070266406A1",
        "US20070288451A1",
        "US20080077570A1",
        "US20080114743A1",
        "US20080172380A1",
        "US20080208854A1",
        "US20080313564A1",
        "US20090012957A1",
        "US20090024618A1",
        "US20090055436A1",
        "US20090055242A1",
        "US20090077496A1",
        "US20090098889A1",
        "US20090144247A1",
        "US20090198688A1",
        "US20090217203A1",
        "US20090265340A1",
        "US7640232B2",
        "US7657423B1",
        "US20100030770A1",
        "US20100042602A1",
        "WO2010019873A1",
        "US20100082657A1",
        "US20100088019A1",
        "US20100087167A1",
        "US20100121832A1",
        "US20100153380A1",
        "DE102008062830B3",
        "US20100287177A1",
        "US20100287148A1",
        "US20100293179A1",
        "US20100313258A1",
        "US20110010372A1",
        "US20110066612A1",
        "US20110082839A1",
        "US20110119250A1",
        "US20110191365A1",
        "US20110221367A1",
        "US8027990B1",
        "US8078884B2",
        "US20120185446A1",
        "US20120209592A1",
        "US8290768B1",
        "US8463790B1",
        "US8478732B1",
        "CN103282902A",
        "US8745019B2",
        "US8782042B1",
        "US8798366B1",
        "US8799804B2",
        "US8805840B1",
        "US8965915B2",
        "US8977613B1",
        "US9069767B1",
        "US9166714B2",
        "US9229924B2",
        "US9256593B2",
        "US9275073B2",
        "US9584665B2",
        "US9594831B2",
        "US9600566B2",
        "US9699129B1",
        "US9703779B2",
        "US9846688B1",
        "US9881009B1",
        "US10032131B2",
        "US10055501B2",
        "US10546311B1",
        "US10592480B1",
        "US10643227B1",
        "US10761965B2"
    ],
    "citedby_ftf": [
        "CN1614607B",
        "CN100401300C",
        "JP4274221B2",
        "US7904433B2",
        "CN101246501B",
        "EP2423830A1",
        "US20130262485A1",
        "KR101355254B1",
        "US9589074B2",
        "CN105446957B",
        "CN108595584B",
        "CN110517050A",
        "CN111415708B"
    ]
}