{
    "patent_id": "US-11295194-B2",
    "title": "Natural language platform for database system ",
    "assignee": "Salesforce.Com, Inc.",
    "publication_date": "2022-04-05",
    "patent_link": "https://patents.google.com/patent/US11295194B2/en",
    "inventors": [
        "Eric Romero"
    ],
    "classifications": [
        "G06N3/006",
        "G06F21/31",
        "G06F16/24522",
        "G06F21/32"
    ],
    "abstract": "An artificial intelligence assistant (\u201cchatbot\u201d) operates within a multi-tenant database and allows users to interact with the underlying structured database through a natural language interface without using a standard structured query language or database interface. Users may interact with the chatbot via a chatroom and perform database queries using natural language expressions in the same manner as asking a person to perform the tasks. In addition, the chatbot may check user permissions and security parameters to determine if the user is permitted to access or alter data within the multi-tenant database.",
    "claims": "\n1. A method for operating a chatbot in a multi-tenant database, comprising:\nstoring, in a memory of the multi-tenant database, metadata associating natural language sentence structures with structured data in the multi-tenant database, including different tables, columns, datasets, or database query functions, the multi-tenant database being shared by one or more customers or tenants;\nconfiguring, by a processor, behind a database firewall of the multi-tenant database, the chatbot with access to the structured data and other datasets without requiring use of an application programming interface;\nresponsive to the chatbot receiving a natural language query from a user:\nidentifying, by the chatbot, an organization in the multi-tenant database associated with the user submitting the natural language query;\nidentifying, by the chatbot, the datasets in the multi-tenant database associated with the organization;\nconverting, by the chatbot, the natural language query into a structured database query based on the metadata to access the datasets in the multi-tenant database associated with the organization;\ndetermining, by the chatbot, based on natural language processing if the natural language query contains sufficient information to construct a structured database query by performing a preliminary search to identify the datasets in the multi-tenant database corresponding with the natural language query;\nresponsive to finding no matching datasets:\nsending, by the chatbot, a first natural language response requesting additional information from the user; and\nupdating, by the chatbot, the structured database query with the additional information received from the user; submitting, by the chatbot, the structured database query to the multi-tenant database; and\nconverting query results into a second natural language response and sending the converted query results to the user.\n2. The method of claim 1, further comprising:\nidentifying, by the chatbot, permissions assigned to the user;\nidentifying, by the chatbot, authorization levels for the datasets accessed by the structured database query; and\nsending, by chatbot, results of the structured database query to the user when the permissions satisfy the authorization levels for the datasets.\n3. The method of claim 1, further comprising:\nidentifying, by the chatbot, a network address associated with the user; and\nidentifying, by the chatbot, the organization in the multi-tenant database associated with the user based on the network address.\n4. The method of claim 1, further comprising:\nidentifying, by the chatbot, keywords in the natural language query that do not match fields in the datasets;\nusing, by the chatbot, the metadata to map the keywords to the fields in the datasets; and\ngenerating, by the chatbot, the structured database query to reference the fields mapped to the keywords.\n5. The method of claim 1, further comprising:\nassociating a table with a predicate field in the metadata;\nidentifying, by the chatbot, a first phase in the natural language query associated with the table;\nidentifying, by the chatbot, a second phase in the natural language query including a predicate for the first phrase; and\ngenerating, by the chatbot, the structured database query to map the second phrase to the predicate field identified in the metadata.\n6. The method of claim 1, further comprising:\nidentifying, by the chatbot, a phase in the natural language query associated with a numerical operation; and\ngenerating, by the chatbot, the structured database query to return a numeric result based on the numerical operation.\n7. The method of claim 1, further comprising:\ndetecting, by the chatbot, an error accessing the multi-tenant database; and\ngenerating, by the chatbot, a natural language notification reporting the error accessing the multi-tenant database.\n8. The method of claim 1, further comprising:\nperforming, by the chatbot, an additional search in an additional database system based on the natural language query; and\ncombining, by the chatbot, results from the structured database query of the multi-tenant database with results from the additional search into a natural language response.\n9. The method of claim 1, wherein the structured database query reads data from the multi-tenant database, modifies data in multi-tenant database, or writes data to the multi-tenant database.\n10. A system for operating a chatbot in a multi-tenant database, comprising:\na hardware processor; and\na memory to store metadata associating different natural language sentence structures with structured data in respective databases of one or more organizations in the multi-tenant database, including different tables, columns, datasets, or database query functions, the multi-tenant database being shared by one or more customers or tenants, the memory further storing one or more stored sequences of instructions which, when executed by the processor, cause the processor to:\nconfigure behind a database firewall, the chatbot with access to the structured data and other datasets without requiring use of an application programming interface;\nresponsive to the chatbot receiving a natural language query from a user:\nidentify, by the chatbot, an organization in the multi-tenant database associated with the user submitting the natural language query;\nidentify, by the chatbot, datasets in the multi-tenant database associated with the organization;\nconvert, by the chatbot, the natural language query into a structured database query based on the metadata to access the datasets in the multi-tenant database associated with the organization;\ndetermine, by the chatbot, based on natural language processing if the natural language query contains sufficient information to construct a structured database query by performing a preliminary search to identify the datasets in the multi-tenant database corresponding with the natural language query;\nresponsive to finding no matching datasets:\nsend by the chatbot, a first natural language response requesting additional information from the user; and\nupdate, by the chatbot, the structured database query with the additional information received from the user;\nsubmit, by the chatbot, the structured database query to the multi-tenant database; and\nconvert query results into a second natural language response and sending the converted query results to the user.\n11. The system of claim 10, wherein the instructions further cause the processor to:\nidentify, by the chatbot, permissions assigned to the user;\nidentify, by the chatbot, authorization levels for the datasets accessed by the structured database query; and\nsend, by the chatbot, results of the structured database query to the user when the permissions satisfy the authorization levels for the datasets.\n12. The system of claim 10, wherein the instructions further cause the processor to:\nidentify, by the chatbot, a network address associated with the user; and\nidentify, by the chatbot, the organization in the multi-tenant database associated with the user based on the network address.\n13. The system of claim 10, wherein the instructions further cause the processor to:\nidentify, by the chatbot, keywords in the natural language query that do not match fields in the datasets;\nuse, by the chatbot, the metadata to map the keywords to the fields in the datasets; and\ngenerate, by the chatbot, the structured database query to reference the fields mapped to the keywords.\n14. The system of claim 10, wherein the instructions further cause the processor to:\nassociate a table with a predicate field in the metadata;\nidentify, by the chatbot, a first phase in the natural language query associated with the table;\nidentify, by the chatbot, a second phase in the natural language query including a predicate for the first phrase; and\ngenerate, by the chatbot, the structured database query to map the second phrase to the predicate field identified in the metadata.\n15. The system of claim 10, wherein the instructions further cause the processor to:\nidentify, by the chatbot, a phase in the natural language query associated with a numerical operation; and\ngenerate, by the chatbot, the structured database query to return a numeric result based on the numerical operation.\n16. The system of claim 10, wherein the instructions further cause the processor to:\ndetect, by the chatbot, an error accessing the multi-tenant database; and\ngenerate, by the chatbot, a natural language notification reporting the error accessing the multi-tenant database.\n17. The system of claim 10, wherein the instructions further cause the processor to:\nperform, by the chatbot, an additional search in an additional database system based on the natural language query; and\ncombine, by the chatbot, results from the structured database query of the multi-tenant database with results from the additional search into a natural language response.\n18. The system of claim 10, wherein the instructions further cause the structured database query to read data from the multi-tenant database, modify data in multi-tenant database, or write data to the multi-tenant database.\n19. A non-transitory computer-readable medium containing program instructions operating a chatbot in a multi-tenant database that, when executed by one or more processors, cause the one or more processors to carry out the steps of:\nstoring, in a memory of the multi-tenant database, metadata associating natural language sentence structures with structured data in the multi-tenant database, including different tables, columns, datasets, or database query functions, the multi-tenant database being shared by one or more customers or tenants;\nconfiguring, by a processor, behind a database firewall of the multitenant database, the chatbot with access to the structured data and other datasets without requiring use of an application programming interface;\nresponsive to the chatbot receiving a natural language query from a user:\nidentifying, by the chatbot, an organization in the multi-tenant database associated with the user submitting the natural language query;\nidentifying, by the chatbot, datasets in the multi-tenant database associated with the organization;\nconverting, by the chatbot, the natural language query into a structured database query based on the metadata to access the datasets in the multi-tenant database associated with the organization;\ndetermining, by the chatbot, based on natural language processing if the natural language query contains sufficient information to construct a structured database query by performing a preliminary search to identify the datasets in the multi-tenant database corresponding with the natural language query;\nresponsive to finding no matching datasets:\nsending, by the chatbot, a first natural language response requesting additional information from the user; and\nupdating, by the chatbot, the structured database query with the additional information received from the user;\nsubmitting, by the chatbot, the structured database query to the multi-tenant database; and\nconverting query results into a second natural language response and sending the converted query results to the user.\n20. The computer-readable medium of claim 19, further including program instructions for:\nidentifying, by the chatbot, permissions assigned to the user;\nidentifying, by the chatbot, authorization levels for the datasets accessed by the structured database query; and\nsending, by natural language processor, results of the structured database query to the user when the permissions satisfy the authorization levels for the datasets.\n21. The computer-readable medium of claim 19, further including program instructions for:\nperforming, by the chatbot, a preliminary search in the multi-tenant database based on the natural language query;\ndetermining, by the chatbot, sufficiency of the natural language query for generating the structured database query based on the preliminary search;\ngenerating, by the chatbot, a natural language request for additional user input when the natural language query is insufficient for generating the structured database query;\nreceiving, by the chatbot, an additional natural language input from the user; and\nusing, by the chatbot, the additional natural language input to construct the structured database query.\n22. The computer-readable medium of claim 19, further including program instructions for:\nidentifying, by the chatbot, a network address associated with the user; and\nidentifying, by the chatbot, the organization in the multi-tenant database associated with the user based on the network address.\n23. The computer-readable medium of claim 19, further including program instructions for:\nidentifying, by the chatbot, keywords in the natural language query that do not match fields in the datasets;\nusing, by the chatbot, the metadata to map the keywords to the fields in the datasets; and\ngenerating, by the chatbot, the structured database query to reference the fields mapped to the keywords.",
    "status": "Active",
    "citations_own": [
        "US5577188A",
        "US5608872A",
        "US5649104A",
        "US5715450A",
        "US5821937A",
        "US5831610A",
        "US5873096A",
        "US5918159A",
        "US5963953A",
        "US5983227A",
        "US6092083A",
        "US6161149A",
        "US6169534B1",
        "US6178425B1",
        "US6216133B1",
        "US6216135B1",
        "US6233617B1",
        "US6236978B1",
        "US6266669B1",
        "US6288717B1",
        "US6295530B1",
        "US20010044791A1",
        "US6324693B1",
        "US6324568B1",
        "US6336137B1",
        "USD454139S1",
        "US6367077B1",
        "US6393605B1",
        "US20020072951A1",
        "US6411949B1",
        "US20020082892A1",
        "US6434550B1",
        "US6446089B1",
        "US20020140731A1",
        "US20020143997A1",
        "US20020162090A1",
        "US20020165742A1",
        "US20030004971A1",
        "US20030018705A1",
        "US20030018830A1",
        "US6535909B1",
        "US20030066032A1",
        "US20030066031A1",
        "US20030069936A1",
        "US20030070000A1",
        "US20030070004A1",
        "US20030070005A1",
        "US20030074418A1",
        "US6553563B2",
        "US6560461B1",
        "US6574635B2",
        "US6577726B1",
        "US6601087B1",
        "US6604117B2",
        "US20030151633A1",
        "US20030159136A1",
        "US6621834B1",
        "US20030189600A1",
        "US20030204427A1",
        "US20030206192A1",
        "US6654032B1",
        "US20030225730A1",
        "US6665648B2",
        "US6665655B1",
        "US20040001092A1",
        "US20040010489A1",
        "US20040015981A1",
        "US20040027388A1",
        "US6711565B1",
        "US6724399B1",
        "US6728960B1",
        "US6728702B1",
        "US6732095B1",
        "US6732100B1",
        "US6732111B2",
        "US20040128001A1",
        "US6763501B1",
        "US6763351B1",
        "US6768904B2",
        "US6772229B1",
        "US6782383B2",
        "US20040186860A1",
        "US20040193510A1",
        "US20040199536A1",
        "US20040199489A1",
        "US20040199543A1",
        "US6804330B1",
        "US6826745B2",
        "US6826582B1",
        "US6829655B1",
        "US20040249854A1",
        "US20040260534A1",
        "US20040260659A1",
        "US20040268299A1",
        "US6842748B1",
        "US6850895B2",
        "US20050050555A1",
        "US6907566B1",
        "US7062502B1",
        "US7069497B1",
        "US7069231B1",
        "US7181758B1",
        "US7269590B2",
        "US7289976B2",
        "US7340411B2",
        "US7356482B2",
        "US20080086482A1",
        "US7406501B2",
        "US7412455B2",
        "US7454509B2",
        "US20090063415A1",
        "US7508789B2",
        "US20090100342A1",
        "US20090177744A1",
        "US7603483B2",
        "US7620655B2",
        "US7644122B2",
        "US7668861B2",
        "US7698160B2",
        "US7747648B1",
        "US7779475B2",
        "US7779039B2",
        "US7827208B2",
        "US7853881B1",
        "US7945653B2",
        "US8005896B2",
        "US8014943B2",
        "US20110218958A1",
        "US20110228922A1",
        "US8032297B2",
        "US20110247051A1",
        "US8073850B1",
        "US8082301B2",
        "US8095531B2",
        "US8095413B1",
        "US20120042218A1",
        "US8209308B2",
        "US20120233137A1",
        "US8490025B2",
        "US8504945B2",
        "US8510664B2",
        "US8510045B2",
        "US20130212497A1",
        "US20130218949A1",
        "US20130218966A1",
        "US20130218948A1",
        "US20130247216A1",
        "US20130276142A1",
        "US8566301B2",
        "US8646103B2",
        "US20140101259A1",
        "US20140195252A1",
        "US8788263B1",
        "US20140359537A1",
        "US20160125371A1",
        "US20170200084A1"
    ],
    "citations_ftf": [],
    "citedby_own": [],
    "citedby_ftf": [
        "US10659398B2",
        "US11087199B2",
        "US11544400B2",
        "WO2018183286A1",
        "KR102266879B1",
        "US10885586B2",
        "US10594757B1",
        "US11526518B2",
        "US11132503B2",
        "US10896297B1",
        "US11600274B2",
        "SE542433C2",
        "US10777196B2",
        "US11081113B2",
        "US11461863B2",
        "US11189267B2",
        "US11164065B2",
        "US11205422B2",
        "US11055489B2",
        "US20200125559A1",
        "US10944800B1",
        "US11044338B1",
        "US10558738B1",
        "US11539541B1",
        "US11445063B1",
        "US11196866B1",
        "US11622043B1",
        "US11314817B1",
        "US11455410B2",
        "US11403299B2",
        "US11409904B2",
        "US11409897B2",
        "US11356456B2",
        "US20220222424A1",
        "US11258731B2",
        "US11455339B1",
        "US11520785B2",
        "US10997217B1",
        "US11429271B2",
        "JP7347244B2",
        "US11461417B2",
        "US11316807B2",
        "US20210409352A1",
        "WO2022043675A2",
        "US11361106B2",
        "US11775681B2",
        "US11775511B2",
        "US11704319B1"
    ]
}