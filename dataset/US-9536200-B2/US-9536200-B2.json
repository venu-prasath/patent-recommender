{
    "patent_id": "US-9536200-B2",
    "title": "Sentiment analysis of data logs ",
    "assignee": "International Business Machines Corporation",
    "publication_date": "2017-01-03",
    "patent_link": "https://patents.google.com/patent/US9536200B2/en",
    "inventors": [
        "Corville O. Allen",
        "Kevin B. Haverlock",
        "Michael D. Whitley"
    ],
    "classifications": [
        "G06N5/041",
        "G06F17/2785",
        "G06F40/30"
    ],
    "abstract": "An approach is provided to use natural language processing (NLP) to analyze data logs. In the approach, a data log is analyzed with the data log including a number of entries. The analysis performed includes performance of a sentiment analysis of the entries using natural language processing. The result of the sentiment analysis results is a sentiment score. Entries from the data log are then visually highlighted based on their corresponding sentiment scores.",
    "claims": "\n1. A method of utilizing natural language processing (NLP) to analyze data logs, the method comprising:\ngenerating a data log in response to executing a software application, wherein the data log includes a plurality of entries that each comprise debugging data generated from execution of the software application;\nperforming a sentiment analysis on the data log, wherein the sentiment analysis further comprises:\nidentifying at least one negative connotation corresponding to at least one term located in at least a selected one of the plurality of entries;\ndetermining that the selected entry is within a predetermined spatial proximity of at least one known error message in the data log; and\ngenerating a proximity model score in response to the determination;\ngenerating a sentiment score for the selected entry based upon the proximity model score; and\nidentifying for visual highlighting the selected entry based on the sentiment score.\n2. The method of claim 1 wherein the analyzing further comprises:\nutilizing one or more models to analyze the plurality of entries, wherein the models are selected from the group consisting of a sentiment lexicon model, a sentiment proximity model, and a sentiment source code parsing model.\n3. The method of claim 1 further comprising:\nevaluating the plurality of entries using a sentiment lexicon model, wherein the evaluation using the sentiment lexicon model is based on a comparison of one or more terms found in one or more of the entries with a knowledge base to generate a lexicon model score, wherein the lexicon model score is used to compute the sentiment score.\n4. The method of claim 3 further comprising:\nevaluating the plurality of entries using a source code parsing model, wherein the evaluation using the source code parsing model is based on the negative connotation found in one or more areas of negative connotation in a related source code corresponding to the software application, the evaluation using the source code parsing model generates a source code parsing model score that is used to compute the sentiment score.\n5. The method of claim 4 further comprising:\nreceiving a set of learned model weights;\nusing a weighted classifier to combine the learned model weights with the lexicon model score, the proximity model score, and the source code parsing model score to generate a set of sentiment scores that correspond to each of the plurality of entries; and\nhighlighting a first set of one or more of the plurality of entries based on the set of sentiment scores corresponding to a set of highlighted entries.\n6. The method of claim 1 wherein the visually highlighting further comprises:\ndisplaying the sentiment score associated with the selected entry.\n7. An information handling system comprising:\none or more processors;\na memory coupled to at least one of the processors;\na set of instructions stored in the memory and executed by at least one of the processors to analyze data logs using natural language processing, wherein the set of instructions perform steps of:\ngenerating a data log in response to executing a software application, wherein the data log includes a plurality of entries that each comprise debugging data generated from execution of the software application;\nperforming a sentiment analysis on the data loci, wherein the sentiment analysis further comprises:\nidentifying at least one negative connotation corresponding to at least one term located in at least a selected one of the plurality of entries;\ndetermining that the selected entry is within a predetermined spatial proximity of at least one known error message in the data log; and\ngenerating a proximity model score in response to the determination;\ngenerating a sentiment score for the selected entry based upon the proximity model score; and\nidentifying for visual highlighting the selected entry based on the sentiment score.\n8. The information handling system of claim 7 wherein the analyzing further comprises steps of:\nutilizing one or more models to analyze the plurality of entries, wherein the models are selected from the group consisting of a sentiment lexicon model, a sentiment proximity model, and a sentiment source code parsing model.\n9. The information handling system of claim 7 wherein the set of instructions perform further steps comprising:\nevaluating the plurality of entries using a sentiment lexicon model, wherein the evaluation using the sentiment lexicon model is based on a comparison of one or more terms found in one or more of the entries with a knowledge base to generate a lexicon model score, wherein the lexicon model score is used to compute the sentiment score.\n10. The information handling system of claim 9 wherein the set of instructions perform further steps comprising:\nevaluating the plurality of entries using a source code parsing model, wherein the evaluation using the source code parsing model is based on the negative connotation found in one or more areas of negative connotation in a related source code corresponding to the software application, the evaluation using the source code parsing model generates a source code parsing model score that is used to compute the sentiment score.\n11. The information handling system of claim 10 wherein the set of instructions perform further steps comprising:\nreceiving a set of learned model weights;\nusing a weighted classifier to combine the learned model weights with the lexicon model score, the proximity model score, and the source code parsing model score to generate a set of sentiment scores that correspond to each of the plurality of entries;\nhighlighting a first set of one or more of the plurality of entries based on the set of sentiment scores corresponding to a set of highlighted entries; and\nfiltering out a second set of entries that have low sentiment scores, wherein the second set of entries is not displayed with the first set of entries.\n12. A computer program product stored in a non-transitory computer readable medium, comprising computer instructions that, when executed by an information handling system, causes the information handling system to perform steps comprising:\ngenerating a data log in response to executing a software application, wherein the data log includes a plurality of entries that each comprise debugging data generated from execution of the software application;\nperforming a sentiment analysis on the data loci, wherein the sentiment analysis further comprises:\nidentifying at least one negative connotation corresponding to at least one term located in at least a selected one of the plurality of entries;\ndetermining that the selected entry is within a predetermined spatial proximity of at least one known error message in the data loci; and\ngenerating a proximity model score in response to the determination;\ngenerating a sentiment score for the selected entry based upon the proximity model score; and\nidentifying for visual highlighting the selected entry based on the sentiment score.\n13. The computer program product of claim 12 wherein the analyzing further comprises:\nutilizing one or more models to analyze the plurality of entries, wherein the models are selected from the group consisting of a sentiment lexicon model, a sentiment proximity model, and a sentiment source code parsing model.\n14. The computer program product of claim 12 wherein the computer instructions cause the information handling system to perform further steps comprising:\nevaluating the plurality of entries using a sentiment lexicon model, wherein the evaluation using the sentiment lexicon model is based on a comparison of one or more terms found in one or more of the entries with a knowledge base to generate a lexicon model score, wherein the lexicon model score is used to compute the sentiment score.\n15. The computer program product of claim 14 wherein the computer instructions cause the information handling system to perform further steps comprising:\nevaluating the plurality of entries using a source code parsing model, wherein the evaluation using the source code parsing model is based on the negative connotation found in one or more areas of negative connotation in a related source code corresponding to the software application, the evaluation using the source code parsing model generates a source code parsing model score that is used to compute the sentiment score.\n16. The computer program product of claim 15 wherein the computer instructions cause the information handling system to perform further steps comprising:\nreceiving a set of learned model weights;\nusing a weighted classifier to combine the learned model weights with the lexicon model score, the proximity model score, and the source code parsing model score to generate a set of sentiment scores that correspond to each of the plurality of entries; and\nhighlighting a first set of one or more of the plurality of entries based on the set of sentiment scores corresponding to a set of highlighted entries.\n17. The computer program product of claim 12 wherein the visually highlighting further comprises:\ndisplaying the sentiment score associated with the selected entry."
}