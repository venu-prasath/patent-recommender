{
    "patent_link": "https://patents.google.com/patent/US5991812A/en",
    "patent_id": "US5991812A",
    "title": "Methods and apparatus for fair queuing over a network",
    "abstract": "Disclosed is a queue selection method for performing data transfers. The method includes scaling a system bandwidth into a plurality of scaled bandwidth integers that extend to a maximum scaled system bandwidth integer. Providing a plurality of queues where each of the plurality of queues are associated with a scaled bandwidth integer, and a sum of the scaled bandwidth integers for each of the plurality of queues is less than or equal to the maximum scaled system bandwidth integer. The method further determines an allocated bandwidth integer from the scaled bandwidth integers for each of the plurality of queues that are enabled, and increments a system virtual time upon each cycle of a system clock while at least one of the plurality of queues is enabled. The method then selects one of the plurality of queues having a lowest queue virtual time, and outputs a packet from the selected one of the plurality of queues having the lowest queue virtual time. And, the queue virtual time of the selected one of the plurality of queues is incremented upon each cycle of the system clock while it is selected for transmission.",
    "inventors": [
        "Sundaram Raj Srinivasan"
    ],
    "assignee": "FoneWeb Inc",
    "classifications": [],
    "claims": "\n1. A queue selection method for data transfer, comprising:\nscaling a system bandwidth into a plurality of scaled bandwidth integers extending to a maximum scaled system bandwidth integer;\nproviding a plurality of queues, each of the plurality of queues being associated with a scaled bandwidth integer such that a sum of the scaled bandwidth integers for each of the plurality of queues is less than or equal to the maximum scaled system bandwidth integer;\ndetermining an allocated bandwidth integer from the scaled bandwidth integers of the plurality of queues that are enabled;\nprecomputing a set of varying time increment amounts;\nincrementing a system virtual time upon each cycle of a system clock while at least one of the plurality of queues is enabled, said incrementing using one of said precomputed time amounts that is associated with the allocated bandwidth integer;\nselecting one of the plurality of queues having a lowest queue virtual time making use of the system virtual time;\noutputting a packet of any length from the selected one of the plurality of queues having the lowest queue virtual time; and\nincrementing the queue virtual time of the selected one of the plurality of queues upon each cycle of the system clock whereby said selected queue is selected in a computationally efficient manner.\n2. A queue selection method for data transfer as recited in claim 1, wherein the pre-computed amount is retrieved from a virtual time increment array.\n3. A queue selection method for data transfer as recited in claim 2, wherein the determined allocated bandwidth integer is mapped to a specific pre-computed amount in the virtual time increment array.\n4. A queue selection method for data transfer as recited in claim 1,\nwherein said incrementing the queue virtual time includes incrementing by one of said pre-computed time amounts associated with the scaled bandwidth integer for the selected queue, and\nwherein said selecting one of the plurality of queues includes comparing queue virtual times of said queues.\n5. A queue selection method for data transfer as recited in claim 4, wherein the pre-computed amount is retrieved from a virtual time increment array.\n6. A queue selection method for data transfer as recited in claim 5, wherein the scaled bandwidth integer of the selected one of the plurality of queues is mapped to a specific pre-computed amount in the virtual time increment array.\n7. A queue selection method for data transfer as recited in claim 1, further comprising:\ncomparing a packet virtual time of a packet queued in one of the plurality of queues with the queue virtual time associated with the one of the plurality of queues; and\nupdating the queue virtual time to the packet virtual time when the packet virtual time is greater than the queue virtual time.\n8. A queue selection method for data transfer as recited in claim 7, wherein the packet virtual time is assigned the system virtual time when the packet is queued.\n9. A queue selection method for data transfer of packets of any length over a network having a system bandwidth, comprising:\nproviding a plurality of queues to hold data to be transferred over the network, each of the plurality of queues being associated with a bandwidth integer, each of the plurality of queues having a bandwidth less than the system bandwidth, and the sum of the bandwidths for each of the plurality of queues is less than or equal to a maximum system bandwidth integer;\ndetermining the plurality of queues that are enabled;\ndetermining an allocated bandwidth integer from the bandwidth integers of the plurality of queues that are enabled;\nprecomputing a set of varying time increment amounts;\nincrementing a virtual time by one of said pre-computed amounts while at least one of the plurality of queues is enabled;\nselecting one of the plurality of queues based on the virtual time; and\noutputting a packet of any length from the selected one of the plurality of queues, whereby said selected queue is selected in a computationally efficient manner.\n10. A queue selection method for data transfer over a network having a system bandwidth as recited in claim 9, wherein the incrementing of the virtual time comprises incrementing a system virtual time for each cycle of a system clock.\n11. A queue selection method for data transfer over a network having a system bandwidth as recited in claim 10, wherein the pre-computed amount is retrieved from a virtual time increment array.\n12. A queue selection method for data transfer over a network having a system bandwidth as recited in claim 11, wherein the allocated bandwidth integer is mapped to a specific pre-computed amount in the virtual time increment array.\n13. A queue selection method for data transfer over a network having a system bandwidth as recited in claim 9, wherein the incrementing of the virtual time comprises incrementing a queue virtual time of the selected one of the plurality of queues.\n14. A queue selection method for data transfer over a network having a system bandwidth as recited in claim 13, wherein the incrementing of the queue virtual time is performed upon each cycle of a system clock.\n15. A queue selection method for data transfer over a network having a system bandwidth as recited in claim 14, wherein the incrementing of the queue virtual time is performed for at least one cycle of the system clock while the outputting of the packet from the selected one of the plurality of queues is in progress.\n16. A queue selection method for data transfer over a network having a system bandwidth as recited in claim 15, wherein the pre-computed amount is retrieved from a virtual time increment array.\n17. A queue selection method for data transfer over a network having a system bandwidth as recited in claim 16, wherein the bandwidth integer of the selected one of the plurality of queues is mapped to a specific pre-computed amount in the virtual time increment array.\n18. A queue selection method for data transfer as recited in claim 13, further comprising:\ncomparing a packet virtual time of a packet queued in one of the plurality of queues with the queue virtual time associated with the one of the plurality of queues; and\nupdating the queue virtual time to be the packet virtual time when the packet virtual time is greater than the queue virtual time.\n19. A queue selection method for data transfer as recited in claim 16, wherein the packet virtual time is assigned a system virtual time when the packet is queued.\n20. A queue selection apparatus for transferring data packets of any length, said apparatus comprising:\na plurality of queues for holding data packets to be transferred over a network, each of the plurality of queues being associated with a bandwidth amount, each of the plurality of queues having a bandwidth that is less than a system bandwidth, and the sum of the bandwidth amounts for each of the plurality of queues is less than about a maximum system bandwidth integer;\nan allocated bandwidth computer for calculating an allocated bandwidth from the bandwidth amounts associated with each of the plurality of queues that are enabled, and for precomputing a set of varying time increment amounts;\na virtual time computer for incrementing a virtual time by one of said pre-computed amounts while at least one of the plurality of queues is enabled;\na queue selection computer for selecting one of the plurality of queues based on the virtual time; and\nan output port for outputting data packets of any length from the selected one of the plurality of queues, whereby said selected queue is selected in a computationally efficient manner.\n21. A queue selection apparatus as recited in claim 20, wherein the virtual time computer increments a system virtual time in a system virtual time computer for each cycle of a system clock.\n22. A queue selection apparatus as recited in claim 21, wherein the pre-computed amount is retrieved from a virtual time increment array.\n23. A queue selection apparatus as recited in claim 22, wherein the allocated bandwidth is mapped to a specific pre-computed amount in the virtual time increment array.\n24. A queue selection apparatus as recited in claim 23, wherein the virtual time computer increments a queue virtual time for the selected one of the plurality of queues in a queue virtual time computer.\n25. A queue selection apparatus as recited in claim 24, wherein the queue virtual time computer increments the queue virtual time for the selected one of the plurality of queues upon each cycle of a system clock.\n26. A queue selection apparatus as recited in claim 25, wherein the incrementing is performed for each cycle of the system clock while the outputting of the data is in progress.\n27. A queue selection apparatus as recited in claim 26, wherein said apparatus further comprises a virtual time increment array that stores a plurality of pre-computed amounts, and wherein the pre-computed amount is retrieved from the virtual time increment array by the virtual time computer.\n28. A queue selection apparatus as recited in claim 24, further comprising:\na queue virtual time adjuster for comparing a packet virtual time of a packet queued in one of the plurality of queues with the queue virtual time associated with the one of the plurality of queues, and adjusting the queue virtual time to be the packet virtual time when the packet virtual time is greater than the queue virtual time.\n29. A method for selecting a queue for data transfer over a network, said method comprising:\nproviding a plurality of queues available for data transfer, each queue being associated with a queue virtual time and arranged to accept packets of any length;\npre-computing a set of varing time increments;\nincrementing a first queue virtual time of a first queue by reference to a first one of said pre-computed time increments;\nselecting one of said queues for data transfer based upon a comparison of the queue virtual times of said queues; and\noutputting a packet of data of any length from said selected queue over a network, whereby said selected queue is selected for data transfer in a computationally efficient manner.\n30. A method for selecting a queue as recited in claim 29 further comprising:\nscaling a system bandwidth into a plurality of scaled bandwidth integers arranged to index an array;\nstoring said set of pre-computed time increments in said array;\ndetermining a bandwidth integer for said first queue; and\nreferencing said first pre-computed time increment in said array using said determined bandwidth integer, whereby said first queue virtual time is incremented in a fair and computationally efficient manner.\n31. A method for selecting a queue as recited in claim 29 further comprising:\ndetermining an allocated bandwidth for said plurality of queues;\nreferencing a second pre-computed time increment in said array using said determined allocated bandwidth;\nincrementing a system virtual time using said second pre-computed time increment without performing a multiplication or division operation; and\nwherein said selecting one of said queues for data transfer is affected by said system virtual time.\n32. A queue selection apparatus comprising:\na plurality of queues available for data transfer, each queue being associated with a queue virtual time and arranged to accept packets of any length;\na computer for precomputing a set of varying time increments;\na queue virtual time computer that increments a first queue virtual time of a first queue by reference to one of a plurality of pre-computed time increments;\na queue selection computer that selects one of said queues for data transfer based upon a comparison of the queue virtual times of said queues; and\nan output port that outputs a packet of data of any length from said selected queue over a network, whereby said selected queue is selected for data transfer in a computationally efficient manner.\n33. A queue selection apparatus as recited in claim 32 further comprising:\nan array that stores said set of pre-computed time increments, said array being indexed by scaling a system bandwidth into a plurality of scaled bandwidth integers, wherein said queue virtual time computer references said one of a plurality of pre-computed time increments in said array using a determined bandwidth integer associated with said first queue, whereby said first queue virtual time is incremented in a fair and computationally efficient manner.\n34. A queue selection apparatus as recited in claim 32 further comprising:\na system virtual time computer that references a second one of said plurality of pre-computed time increments in said array using an allocated bandwidth integer and increments said system virtual time using said second pre-computed time increment without performing a multiplication or division operation.\n35. A queue selection apparatus comprising:\na plurality of queues for holding data to be transferred over a network, each of said queues being associated with a bandwidth amount and each having a bandwidth that is less than a system bandwidth, and wherein the sum of the bandwidth amounts for each of said queues is less than about a maximum system bandwidth integer;\na virtual time increment array that stores a plurality of pre-computed amounts;\nan allocated bandwidth computer for calculating an allocated bandwidth from the bandwidth amounts associated with each of said queues that are enabled, said allocated bandwidth being mapped to a specific pre-computed amount in said virtual time increment array;\na system virtual time computer that increments a system virtual time for each cycle of a system clock;\na queue virtual time computer that increments a queue virtual time by a pre-computed amount for each cycle of a system clock for one of said queues while at least one of said queues is enabled, said pre-computed amount being retrieved from said virtual time increment array by said queue virtual time computer, said incrementing being performed for each cycle of said system clock while outputting data is in progress;\na queue selection computer for selecting one of said queues based on said queue virtual time;\nan output port for outputting data from said selected queue; and\nwherein said plurality of pre-computed amounts stored in said virtual time increment array are determined in accordance with the following equation:\nC*(100/(u*i)), where i\u03b5[1 . . . 100/u]\nwherein C is a constant, i and u are integers, and where i is an integer representing an index to said virtual time increment array and u is a unit of bandwidth allocation that is a percentage of said system bandwidth.\n36. A queue selection apparatus as recited in claim 35, wherein the bandwidth of the selected one of the plurality of queues is mapped to a specific pre-computed amount in the virtual time increment array.",
    "status": "Expired - Fee Related",
    "citations_own": [
        "US5519701A",
        "US5623606A",
        "US5663961A",
        "US5689508A"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US6122673A",
        "US6154769A",
        "US6247058B1",
        "US20020083207A1",
        "US6421786B1",
        "EP1227609A2",
        "US20020161898A1",
        "US20020176361A1",
        "US20020194372A1",
        "US6691208B2",
        "US20040071081A1",
        "US6724766B2",
        "US6742019B1",
        "US20040114602A1",
        "US6754716B1",
        "US6798743B1",
        "US6882623B1",
        "US6907421B1",
        "US6909691B1",
        "US6914881B1",
        "US6948003B1",
        "US6976258B1",
        "US6985937B1",
        "US6999421B1",
        "US7065762B1",
        "US20060187834A1",
        "US7143024B1",
        "US7219354B1",
        "US7225242B2",
        "US7286473B1",
        "US20070255556A1",
        "US7343421B1",
        "US7376159B1",
        "US20080182548A1",
        "US20080212517A1",
        "US20080263137A1",
        "US20090049202A1",
        "US20090287822A1",
        "US20100118768A1",
        "US7912226B1",
        "US8165033B1",
        "US20160110156A1",
        "US9729120B1"
    ],
    "citedby_ftf": [
        "US7486686B2"
    ]
}