{
    "patent_link": "https://patents.google.com/patent/US5715455A/en",
    "patent_id": "US5715455A",
    "title": "Apparatus and method for storing file allocation table efficiently in memory",
    "abstract": "A data processing system, such as a personal computer, contains a file allocation table that is stored in memory in a packed format. During initialization, file allocation tables stored on an external storage device are \"packed\" and stored in a region of memory and subsequently \"unpacked\" during a read operation.",
    "inventors": [
        "James Franklin Macon, Jr.",
        "David Medina",
        "Mark Alan Peloquin"
    ],
    "assignee": "International Business Machines Corp",
    "classifications": [
        "G06F16/10",
        "G06F16/9017",
        "Y10S707/99931",
        "Y10S707/99932",
        "Y10S707/99956"
    ],
    "claims": "\n1. In a personal computer system comprising an operating system, random access memory (RAM) and a file allocation table (FAT) normally stored in definable FAT storage units on an external storage device, wherein the file allocation table represents a mapping of data stored on the external storage device having a plurality of tracks, each track having a plurality of sectors, each sector having a plurality of storage locations, wherein one or more sectors may be represented by a single cluster, the improvement comprising:\nmeans for storing said file allocation table in a packed format in the RAM of the personal computer such that, during an I/O operation, the external storage device need not be accessed to retrieve entries from the file allocation table;\nmeans for grouping a first contiguous range of clusters into a first group of clusters;\nmeans for allocating a bitmap for a given FAT storage unit, said bitmap having a bit for each cluster address within said given FAT storage unit; and\nmeans for setting a bit in said bitmap, to indicate that certain ones of said cluster addresses within said given FAT storage unit represent an end-of-file cluster.\n2. The improvement of claim 1 further comprising:\nmeans for linking said first contiguous group of clusters to a subsequent group of cluster.\n3. The improvement of claim 1 further comprising:\nmeans for assigning a pseudo cluster value for certain ones of said clusters wherein said pseudo cluster value represents a logical address within a contiguous range of clusters on said external storage device.\n4. In a personal computer system comprising an operating system, random access memory (RAM) and a file allocation table (FAT) normally stored in definable FAT storage units on an external storage device, wherein the file allocation table represents a mapping of data stored on the external storage device having a plurality of tracks, each track having a plurality of sectors, each sector having a plurality of storage locations, wherein one or more sectors may be represented by a single cluster, the improvement comprising:\nmeans for storing said file allocation table in a packed format in the RAM of the personal computer such that, during an I/O operation, the external storage device need not be accessed to retrieve entries from the file allocation table;\nmeans for assigning a pseudo cluster value for certain ones of said clusters wherein said pseudo cluster value represents a logical address within a contiguous range of clusters on said external storage device;\nmeans for grouping a first contiguous range of clusters into a first group of clusters;\nmeans for linking said first contiguous group of clusters to a subsequent group of clusters;\nmeans for allocating a bitmap for a given FAT storage unit, said bitmap having a bit for each cluster address within said given FAT storage unit; and\nmeans for setting a bit in said bitmap, to indicate that certain ones of said cluster addresses within said given FAT storage unit represent an end-of-file cluster.\n5. A method in a computer system for storing a file allocation table (FAT) in a packed format in a random access memory of the computer system, wherein the file allocation table represents a mapping of data stored on an external storage device having a plurality of sectors, each sector having a plurality of storage locations, wherein one or more sectors may be represented by a single cluster, the method comprising the steps of:\ngrouping a first contiguous range of clusters into a first group of clusters;\nallocating a bitmap for a given FAT storage unit, said bitmap having a bit for each cluster address within said given FAT storage unit; and\nsetting a bit in said bitmap, to indicate that certain ones of said cluster addresses within said given FAT storage unit represent an end-of-file cluster.\n6. The method of claim 5 further comprising the step of:\nlinking said first contiguous group of clusters to a subsequent group of clusters.\n7. The method of claim 5 further comprising the step of:\nassigning a pseudo cluster value for certain ones of said clusters wherein said pseudo cluster value represents a logical address within a contiguous range of clusters on said external storage device.\n8. A method in a computer system for unpacking a file allocation table (FAT) stored in a packed format in a random access memory of the computer system, wherein the file allocation table represents a mapping of data stored on an external storage device having a plurality of sectors, each sector having a plurality of storage locations, wherein one or more sectors may be represented by a single cluster, the method comprising the steps of:\nassigning a pseudo cluster value for certain ones of said clusters wherein said pseudo cluster value represents a logical address within a contiguous range of clusters on said external storage device;\ngrouping a first contiguous range of clusters into a first group of clusters;\nlinking said first contiguous group of clusters to a subsequent group of clusters;\nallocating a bitmap for a given FAT storage unit, said bitmap having a bit for each cluster address within said given FAT storage unit; and\nsetting a bit in said bitmap, to indicate that certain ones of said cluster addresses within said given FAT storage unit represent an end-of-file cluster.",
    "status": "Expired - Fee Related",
    "citations_own": [
        "US4941059A",
        "US4979054A",
        "US4999766A",
        "US5014237A",
        "US5086502A",
        "US5136711A",
        "US5307497A",
        "US5327563A",
        "US5347651A",
        "US5363487A",
        "US5371885A",
        "US5463772A"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US5930829A",
        "US5956745A",
        "US6098074A",
        "US6215748B1",
        "WO2001042923A2",
        "US6308264B1",
        "US6477616B1",
        "US20030009467A1",
        "US6510505B1",
        "US6549988B1",
        "GB2383859A",
        "US20030225983A1",
        "US20040215754A1",
        "US20050050108A1",
        "US20050149647A1",
        "US7107299B2",
        "US20060230291A1",
        "US20070203884A1",
        "WO2007109705A2",
        "US20070226265A1",
        "US20070250522A1",
        "US7350049B1",
        "US20080109437A1",
        "CN100419756C",
        "US20090271581A1",
        "US20090327622A1",
        "US20100138406A1",
        "US20100191779A1",
        "US20100205145A1",
        "CN102169487A",
        "US20110302142A1",
        "CN102426586A",
        "TWI400616B",
        "TWI408554B",
        "US20150134711A1",
        "US9286160B2",
        "CN105917303A",
        "US9754102B2",
        "US9811463B2",
        "US11489857B2"
    ],
    "citedby_ftf": []
}