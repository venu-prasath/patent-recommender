{
    "patent_id": "US-11625620-B2",
    "title": "Techniques for building a knowledge graph in limited knowledge domains ",
    "assignee": "Oracle International Corporation",
    "publication_date": "2023-04-11",
    "patent_link": "https://patents.google.com/patent/US11625620B2/en",
    "inventors": [
        "Gautam Singaraju",
        "Prithviraj Venkata Ammanabrolu"
    ],
    "classifications": [
        "G06N5/025",
        "G06N5/022",
        "G06N20/00",
        "G06N5/041",
        "G06N3/006",
        "G06N3/08"
    ],
    "abstract": "Techniques disclosed herein relate generally to constructing a customized knowledge graph. In one embodiment, entities and relations among entities are extracted from a user dataset based on certain rules to generate a seed graph. Large-scale knowledge graphs are then traversed using a finite state machine to identify candidate entities and/or relations to add to the seed graph. A priority function is used to select entities and/or relations from the candidate entities and/or relations. The selected entities and/or relations are then added to the seed graph to generate the customized knowledge graph.",
    "claims": "\n1. A computer-implemented method comprising:\nreceiving a user dataset for a chatbot;\nextracting entities from the user dataset;\nidentifying links between the entities based on the user dataset;\ncreating, in a computer readable memory, a seed graph that represents the entities and the identified links between the entities, the seed graph containing a set of nodes and a set of edges, each node in the set of nodes representing an entity extracted from the user dataset, each edge in the set of edges connecting two nodes and representing a link between the entities represented by the two nodes;\nidentifying one or more weakly connected components in the seed graph, wherein each weakly connected component is a subgraph of the seed graph in which all nodes in the subgraph are reachable by traversing the edges of the subgraph through an undirected path;\nfor each weakly connected component in the seed graph:\nmapping entities represented by nodes in the weakly connected component to vertices in a reference knowledge graph;\nusing the mapped vertices in the reference knowledge graph as starting points, traversing the reference knowledge graph based on a finite state machine to identify a first threshold number of vertices in the reference knowledge graph and a first threshold number of entities represented by the first threshold number of vertices; and\nfor each entity in the first threshold number of entities, storing an entry in a buffer representing the entity, wherein the entry comprises information characterizing the entity;\nperforming reservoir sampling on the entries in the buffer to reduce a number of the entries in the buffer;\nafter performing the reservoir sampling, computing priority scores for entries in the buffer;\nselecting, from the entries in the buffer, a subset of entries having the highest priority scores;\nadding entities in the subset of entries and their associated links to the seed graph to generate a customized knowledge graph that is an expanded version of the seed graph;\nreceiving, by the chatbot, an utterance;\ndetermining, by the chatbot, a user intent corresponding to the utterance using the customized knowledge graph; and\nproviding, by the chatbot, a response to the utterance based upon the determined user intent.\n2. The computer-implemented method of claim 1, wherein the user dataset includes a plurality of user utterances.\n3. The computer-implemented method of claim 1, wherein extracting the entities and identifying the links between the entities include performing, on the user dataset, at least one of:\npart-of-speech tagging;\nnamed-entity recognition; or\nconstituency parsing.\n4. The computer-implemented method of claim 1, wherein mapping the entities in the weakly connected component to the vertices in the reference knowledge graph comprises mapping the entities to the vertices in the reference knowledge graph using Dexter 2.\n5. The computer-implemented method of claim 1, wherein:\nthe finite state machine includes a disambiguation state, an entity state, a forbidden state, and an end state; and\ntraversing the reference knowledge graph comprises:\nwhen a next vertex in the reference knowledge graph is a disambiguation vertex, entering the disambiguation state;\nwhen the next vertex in the reference knowledge graph is a forbidden vertex:\nif a current state of the finite state machine is not the forbidden state, entering the forbidden state;\nwhen the next vertex in the reference knowledge graph is an entity vertex:\nentering the entity state; and\nsaving a resource description framework (RDF) of the next vertex in the reference knowledge graph as an entry in the buffer; and\nwhen a number of entries in the buffer is greater than a second threshold number, entering the end state.\n6. The computer-implemented method of claim 5, wherein the forbidden vertex includes a date, a time value, a link to another reference knowledge graph, a web page, or a duplicated or redirected entity.\n7. The computer-implemented method of claim 1, wherein the priority score for an entry in the buffer is determined using a priority function that is a function of:\na number of weakly connected components in a knowledge graph including the seed graph and the entity associated with the entry;\na graph density of the knowledge graph including the seed graph and the entity associated with the entry; and\na control parameter.\n8. The computer-implemented method of claim 7, further comprising, after adding the entities and links identified in the subset of entries to the seed graph, updating the control parameter.\n9. The computer-implemented method of claim 8, wherein updating the control parameter includes multiplying the control parameter with a value less than 1.\n10. The computer-implemented method of claim 8, further comprising:\nfor each weakly connected component in the customized knowledge graph:\nmapping entities in the weakly connected component to vertices in the reference knowledge graph;\ntraversing, from the mapped vertices in the reference knowledge graph and based on the finite state machine, the reference knowledge graph to identify up to the first threshold number of entities in the reference knowledge graph; and\nsaving resource description frameworks (RDFs) for the identified entities as entries in the buffer;\ncomputing priority scores for the entries in the buffer using the priority function and the updated control parameter;\nselecting, from the entries in the buffer, a second set of entries having the highest priority scores; and\nadding entities and links identified by the second set of entries to the seed graph to generate an updated customized knowledge graph.\n11. The computer-implemented method of claim 1, wherein the utterance is an input utterance and wherein determining a user intent corresponding to the utterance comprises:\nextracting entities from the input utterance;\ngenerating, based on the customized knowledge graph, knowledge graph embeddings for the extracted entities; and\nclassifying the input utterance based on the knowledge graph embeddings for the extracted entities.\n12. The computer-implemented method of claim 11, wherein generating the knowledge graph embeddings includes generating the knowledge graph embeddings using TransE or an extension of TransE.\n13. The computer-implemented method of claim 11, wherein generating the knowledge graph embeddings includes generating the knowledge graph embeddings using TransE and a weighted scoring function.\n14. The computer-implemented method of claim 11, wherein generating the knowledge graph embeddings comprises:\npretraining, using the reference knowledge graph, the knowledge graph embeddings for the entities extracted from the input utterance; and\nretraining, using the customized knowledge graph and the pretrained knowledge graph embeddings, the knowledge graph embeddings for the entities extracted from the input utterance.\n15. The computer-implemented method of claim 11, wherein classifying the input utterance based on the knowledge graph embeddings for the extracted entities comprises:\ndetermining an average knowledge graph embedding of the knowledge graph embeddings for the extracted entities;\ndetermining an average global vectors for word representation (GloVe) vector of GloVe vectors for words in the input utterance; and\nclassifying the input utterance based on the average knowledge graph embedding and the average GloVe vector.\n16. The computer-implemented method of claim 15, wherein classifying the input utterance based on the average knowledge graph embedding and the average GloVe vector comprises:\ncombining the average knowledge graph embedding and the average GloVe vector to generate a concatenated vector;\nperforming principal component analysis on the concatenated vector; and\nclassing the input utterance based on the principal component analysis.\n17. The computer-implemented method of claim 15, wherein determining the average GloVe vector of GloVe vectors for words in the input utterance comprises:\ncleaning the input utterance;\ngenerating a GloVe vector for each word in the cleaned input utterance; and\naveraging the GloVe vector for each word in the cleaned input utterance.\n18. A non-transitory computer readable medium storing a plurality of instructions executable by one or more processors, wherein the plurality of instructions, when executed by the one or more processors, cause the one or more processors to perform processing comprising:\nreceiving a user dataset for a chatbot;\nextracting entities from the user dataset;\nidentifying links between the entities based on the user dataset;\ncreating a seed graph that represents the entities and the identified links between the entities, the seed graph containing a set of nodes and a set of edges, each node in the set of nodes representing an entity extracted from the user dataset, each edge in the set of edges connecting two nodes and representing a link between the entities represented by the two nodes;\nidentifying one or more weakly connected components in the seed graph, wherein each weakly connected component is a subgraph of the seed graph in which all nodes in the subgraph are reachable by traversing the edges of the subgraph through an undirected path;\nfor each weakly connected component in the seed graph:\nmapping entities represented by nodes in the weakly connected component to vertices in a reference knowledge graph;\nusing the mapped vertices in the reference knowledge graph as starting points, traversing the reference knowledge graph based on a finite state machine to identify a first threshold number of vertices in the reference knowledge graph and a first threshold number of entities in the reference knowledge graph represented by the first threshold number of vertices; and\nfor each entity in the first threshold number of entities, storing an entry in a buffer representing the entity, wherein the entry comprises information characterizing the entity;\nperforming reservoir sampling on the entries in the buffer to reduce a number of the entries in the buffer;\nafter performing the reservoir sampling, computing priority scores for entries in the buffer;\nselecting, from the entries in the buffer, a subset of entries having the highest priority scores;\nadding entities in the subset of entries and their associated links identified to the seed graph to generate an expanded version of the seed graph, wherein the chatbot thereafter:\nreceives an utterance;\ndetermines a user intent corresponding to the utterance using the expanded version of the seed graph; and\nprovides a response to the utterance based upon the determined user intent.\n19. A system comprising:\none or more processors; and\na memory coupled to the one or more processors, the memory storing instructions, which, when executed by the one or more processors, cause the system to perform operations including:\nreceiving a user dataset for a chatbot;\nextracting entities from the user dataset;\nidentifying links between the entities based on the user dataset;\ncreating a seed graph that represents the entities and the identified links between the entities, the seed graph containing a set of nodes and a set of edges, each node in the set of nodes representing an entity extracted from the user dataset, each edge in the set of edges connecting two nodes and representing a link between the entities represented by the two nodes;\nidentifying one or more weakly connected components in the seed graph, wherein each weakly connected component is a subgraph of the seed graph in which all nodes in the subgraph are reachable by traversing the edges of the subgraph through an undirected path;\nfor each weakly connected component in the seed graph:\nmapping entities represented by nodes in the weakly connected component to vertices in a reference knowledge graph;\nusing the mapped vertices in the reference knowledge graph as starting points, traversing, in the reference knowledge graph based on a finite state machine to identify a threshold number of vertices in the reference knowledge graph and a threshold number of entities in the reference knowledge graph represented by the first threshold number of vertices; and\nfor each entity in the threshold number of entities, storing an entry in a buffer representing the entity, wherein the entry comprises information characterizing the entity;\nperforming reservoir sampling on the entries in the buffer to reduce a number of the entries in the buffer;\nafter performing the reservoir sampling, computing priority scores for entries in the buffer;\nselecting, from the entries in the buffer, a subset of entries having the highest priority scores; and\nadding entities in the subset of entries and their associated links to the seed graph to generate an expanded version of the seed graph,\nwherein the expanded version of the seed graph is thereafter used by the chatbot to determine a user intent corresponding to a user utterance."
}