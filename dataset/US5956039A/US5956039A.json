{
    "patent_link": "https://patents.google.com/patent/US5956039A/en",
    "patent_id": "US5956039A",
    "title": "System and method for increasing performance by efficient use of limited resources via incremental fetching, loading and unloading of data assets of three-dimensional worlds based on transient asset priorities",
    "abstract": "A system and method for increasing the performance associated with creating simulated 3D worlds from a network. The system and method provides a means for increasing the performance by fetching objects in the order of their importance. A priority scheme is used to determine the fetching, pre-fetching, and caching of URLs. The operations of assigning priorities, making prefetch requests and cache management is driven by data in an asset database table. The database contains information pertaining to each asset within the current scene such as the priority, status, region, type bounds, and retrieval time. The asset database table is updated based on fetching activities, camera position, and the positions of moving assets. A world scene is subdivided into appropriately sized regions when a scene is first downloaded. Asset type origins are defined and moved, based on the position, orientation, and velocity of the camera. Regions are assigned priorities based on their distance from the asset origin. Assets within particular regions are assigned priorities based on the region priorities and the asset type.",
    "inventors": [
        "Daniel J. Woods",
        "Christopher F. Marrin",
        "Glenn C. Shute",
        "David C. Mott"
    ],
    "assignee": "Platinum Technology International Inc",
    "classifications": [
        "G06F16/9574",
        "H04L9/40",
        "H04L67/131"
    ],
    "claims": "\n1. A process for increasing the performance associated with creating an interactive three dimensional (3D) world that is modeled using assets each having an asset type, said 3D world capable of being viewed on a computer display from the viewpoint of a virtual camera having a selectable velocity and position, said process comprising the steps of:\ndetermining a world bounding box for the world;\ncreating a grid enclosing said world bounding box, said grid comprising a plurality of regions;\ndefining region priorities to said regions; and\nassigning asset priorities for said assets based on the asset types and said region priorities.\n2. The process of claim 1, further comprising the step of: ordering said assets based on said asset priority.\n3. The process of claim 2, further comprising the step of: fetching said assets based on said ordering step.\n4. The process of claim 1, further comprising the step of:\nupdating an asset database table with information related to said assets.\n5. The process of claim 1, wherein said 3D world is modeled using Virtual Reality Modeling Language.\n6. The process of claim 1, wherein said defining step comprises the steps of:\nfinding the position of the virtual camera; and\ndefining a region priority for each said region using predetermined criteria based on said position the virtual camera.\n7. The process of claim 6, wherein said predetermined criteria is additionally based on the velocity of the virtual camera.\n8. The process of claim 1, wherein said defining step comprises the steps of:\nfinding the position of the virtual camera; and\nconstructing an asset origin within said grid for each asset type, said asset origin being displaced a fixed distance from said position of the virtual camera; and\ndefining a region priority for each said region using predetermined criteria based on the distance of said region from said asset origin.\n9. The process of claim 8, wherein said predetermined criteria is additionally based on the velocity of said asset origin.\n10. The process of claim 8, further comprising the steps of:\nassigning an offset value for each asset type; and\nassigning an asset priority to each asset based on said region priority and said offset value.\n11. The process of claim 3, wherein said ordering and fetching steps comprise the steps of:\nconstructing a fetch request queue comprising N elements;\nloading said fetch request queue with N fetch requests for the first N assets having the highest said asset priority;\nfetching said assets based on said fetch request queue;\nloading said fetch request queue with another fetch request upon completion of a fetch request.\n12. The process of claim 3, wherein said ordering and fetching steps comprise the steps of:\nconstructing an active queue comprising N elements;\nconstructing a waiting queue comprising M elements;\nloading said active queue with N fetch requests for the first N assets having the highest said asset priority;\nloading said waiting queue with M fetch requests for the next M assets having the highest said asset priority;\nloading said active queue with a fetch request from said waiting queue when said fetch request from said active queue is complete; and\nloading said waiting queue with a fetch request for the next asset having the highest said asset priority.\n13. The process of claim 1, further comprising the step of:\nperforming cache management for said assets based on said asset priority.\n14. The process of claim 13, wherein said performing step comprises the steps of:\ndefining N levels of cache storage;\ndetermining whether to store or remove assets from a particular said level by comparing said asset priorities.\n15. A computer program-product readable by a computer system, tangibly embodying a computer program-product comprising instructions executable by the computer system to perform method steps for increasing the performance associated with creating an interactive three dimensional (3D) world that is modeled using assets each having an asset type, said 3D world capable of being viewed on a computer display from the viewpoint of a virtual camera having a selectable velocity and position, said method steps comprising the steps of:\ndetermining a world bounding box for the world;\ncreating a grid enclosing said world bounding box, said grid comprising a plurality of regions;\ndefining region priorities to said regions; and\nassigning asset priorities for said assets based on the asset types and said region priorities.\n16. The computer program-product of claim 15, further comprising the step of:\nordering said assets based on said asset priority.\n17. The computer program-product of claim 16, further comprising the step of:\nfetching said assets based on said ordering step.\n18. The computer program-product of claim 15, further comprising the step of:\nupdating an asset database table with information related to each said asset.\n19. The computer program-product of claim 15, wherein said 3D world is modeled using Virtual Reality Modeling Language.\n20. The computer program-product of claim 15, wherein said defining step comprises the steps of:\nfinding the position of the virtual camera; and\ndefining a region priority for each said region using predetermined criteria based on the position the virtual camera.\n21. The computer program-product of claim 20, wherein said predetermined criteria is additionally based on the velocity of the virtual camera.\n22. The computer program-product of claim 15, wherein said defining step comprises the steps of:\nfinding the position of the virtual camera; and\nconstructing an asset origin within said grid for each asset type, said asset origin being displaced a fixed distance from the virtual camera; and\ndefining a region priority for each said region using predetermined criteria based on the distance of said region from said asset origin.\n23. The computer program-product of claim 22, wherein said predetermined criteria is additionally based on the velocity of said asset origin.\n24. The computer program-product of claim 22, further comprising the steps of:\nassigning an offset value for each asset type; and\nassigning an asset priority to each asset based on said region priority and said offset value.\n25. The computer program-product of claim 17, wherein said ordering and fetching steps comprise the steps of:\nconstructing a fetch request queue comprising N elements;\nloading said fetch request queue with N fetch requests for the first N assets having the highest said asset priority;\nfetching said assets based on said fetch request queue;\nloading said fetch request queue with another fetch request upon completion of a fetch request.\n26. The computer program-product of claim 17, wherein said ordering and fetching steps comprise the steps of:\nconstructing an active queue comprising N elements;\nconstructing a waiting queue comprising M elements;\nloading said active queue with N fetch requests for the first N assets having the highest said asset priority;\nloading said waiting queue with M fetch requests for the next M assets having the highest said asset priority;\nloading said active queue with a fetch request from said waiting queue when said fetch request from said active queue is complete; and\nloading said waiting queue with a fetch request for the next asset having the highest said asset priority.\n27. The computer program-product of claim 15, further comprising the step of:\nperforming cache management for said assets based on said asset priority.\n28. The computer program-product of claim 27, wherein said performing step comprises the steps of:\ndefining N levels of cache storage;\ndetermining whether to store or remove assets from a particular said level by comparing said asset priorities.\n29. A system for increasing the performance associated with creating an interactive three dimensional (3D) world that is modeled using assets each having an asset types, said 3D world is viewed on a computer display from the viewpoint of a virtual camera, said system comprising:\nmeans for determining the world bounding box of the world;\ngrid creating means for creating a grid that encloses said world bounding box, said grid comprising a plurality of regions;\nregion prioritizing means for assigning region priorities to said regions; and\nasset prioritizing means for assigning asset priorities to each of said assets, based on the asset types and said region priorities.\n30. The system according to claim 29, further comprising:\nordering means for ordering said assets based on said asset prioritizing means.\n31. The system according to claim 29, further comprising:\nasset table means for updating an asset database table with information related to said assets.\n32. The system of claim 30, further comprising fetching means for fetching said assets based on said ordering means.\n33. The system of claim 30, further comprising cache management means for performing cache management for assets based on said ordering means.",
    "status": "Expired - Lifetime",
    "citations_own": [],
    "citations_ftf": [],
    "citedby_own": [],
    "citedby_ftf": []
}