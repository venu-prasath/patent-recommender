{
    "patent_id": "US-11698931-B2",
    "title": "Label propagation in a distributed system ",
    "assignee": "Google Llc",
    "publication_date": "2023-07-11",
    "patent_link": "https://patents.google.com/patent/US11698931B2/en",
    "inventors": [
        "Matthew H. Austern",
        "James C. Dehnert",
        "Aart J. C. Bik",
        "Grzegorz J. Czajkowski",
        "Grzegorz Malewicz"
    ],
    "classifications": [
        "G06F16/9024",
        "G06F11/1451",
        "G06F11/1464",
        "G06F11/1469",
        "G06F15/17312",
        "G06F16/00",
        "G06F16/2282",
        "G06F16/23",
        "G06F16/2365",
        "G06F8/457",
        "G06F9/46",
        "G06F9/5005",
        "G06N20/00",
        "G06N99/00",
        "G06T11/206",
        "H04L5/0032",
        "H04L67/10",
        "G06F11/1448",
        "G06F11/2082",
        "G06F16/27",
        "G06F16/9027",
        "G06F21/1087",
        "G06F2201/84",
        "G06F2221/0793",
        "G06F7/00",
        "G06T2210/32"
    ],
    "abstract": "Data are maintained in a distributed computing system that describe a graph. The graph represents relationships among items. The graph has a plurality of vertices that represent the items and a plurality of edges connecting the plurality of vertices. At least one vertex of the plurality of vertices includes a set of label values indicating the at least one vertex's strength of association with a label from a set of labels. The set of labels describe possible characteristics of an item represented by the at least one vertex. At least one edge of the plurality of edges includes a set of label weights for influencing label values that traverse the at least one edge. A label propagation algorithm is executed for a plurality of the vertices in the graph in parallel for a series of synchronized iterations to propagate labels through the graph.",
    "claims": "\n1. A computer-implemented method when executed by one or more processors causes the one or more processors to perform operations comprising:\nobtaining, during an iteration of a label propagation algorithm, a set of vertices from a graph representing relationships among data items;\nobtaining a first label value indicting a strength of association between a first label and a first vertex of the set of vertices;\nreceiving an incoming message from a first computing system via a network, the incoming message comprising a weighted source label value for a source vertex having one or more outgoing edges to the first vertex, the weighted source label value computed by the first computing system;\nin response to receiving the weighted source label value, determining an updated first label value for the first vertex based on the first label value and the received weighted source label value;\ndetermining that the updated first label value exceeds a threshold value;\nin response to determining that the updated first label value exceeds the threshold value, assigning the first label to the first vertex;\nupdating one or more outgoing edges of the first vertex using the updated first label value; and\nupdating, using the one or more outgoing edges, by sending an outgoing message to a second computing system via the network, a second vertex of the set of vertices that neighbors the first vertex, the outgoing message comprising a weighted first label value for the first vertex, the second computing system to update a second label value for a second label of the second vertex based on the weighted first label value.\n2. The method of claim 1, wherein:\nthe updated first label value replaces the first label value in a set of label values associated with the first vertex, and the first vertex comprises a set of labels comprising the first label; and\nthe operations further comprise representing the set of label values for the first vertex as a vector having a plurality of positions, each position in the vector corresponding to one of the labels in the set of labels and storing a value indicating a label value for the corresponding label.\n3. The method of claim 2, wherein:\nthe one or more outgoing edges of the first vertex include an edge label value; and\nthe operations further comprise updating the weighted first label value based on the edge label value and the updated first label value.\n4. The method of claim 3, wherein updating the second label value comprises applying an updating function to the edge label value and the second label value.\n5. The method of claim 3, wherein updating second label value comprises applying a weighting function to the edge label value and the updated first label value to produce the updated second label value.\n6. The method of claim 1, wherein:\nthe first vertex includes the first label value and the second vertex includes the second label value; and\nthe operations further comprise:\nsending a message to a coordinating system indicating that the first vertex has completed an iteration of a series of synchronized iterations including replacing the first label value and the second label value; and\nreceiving a signal to begin another iteration.\n7. The method of claim 1, wherein the operations further comprise:\nmaintaining, using a message module, a message queue for the set of vertices; and\ntransmitting the outgoing message of the first vertex when the message queue reaches a threshold size.\n8. The method of claim 1, wherein determining the updated first label value comprises averaging the first label value with the received weighted source label value.\n9. The method of claim 1, wherein the operations further comprise determining the weighted first label value of the first vertex by multiplying the first label value by a label weight of an edge connecting the first vertex and the second vertex.\n10. The method of claim 1, wherein the operations further comprise terminating an iteration of a series of synchronized iterations of the source vertex, the first vertex and the second vertex when the first label value for the first vertex does not change more than a predefined amount.\n11. A system comprising:\na memory for storing data; and\none or more processors operable to perform operations comprising:\nobtaining, during an iteration of a label propagation algorithm, a set of vertices from a graph representing relationships among data items;\nobtaining a first label value indicting a strength of association between a first label and a first vertex of the set of vertices;\nreceiving an incoming message from a first computing system via a network, the incoming message comprising a weighted source label value for a source vertex having one or more outgoing edges to the first vertex, the weighted source label value computed by the first computing system;\nin response to receiving the weighted source label value, determining an updated first label value for the first vertex based on the first label value and the received weighted source label value;\ndetermining that the updated first label value exceeds a threshold value;\nin response to determining that the updated first label value exceeds the threshold value, assigning the first label to the first vertex;\nupdating one or more outgoing edges of the first vertex using the updated first label value; and\nupdating, using the one or more outgoing edges, by sending an outgoing message to a second computing system via the network, a second vertex of the set of vertices that neighbors the first vertex, the outgoing message comprising a weighted first label value for the first vertex, the second computing system to update a second label value for a second label of the second vertex based on the weighted first label value.\n12. The system of claim 11, wherein:\nthe updated first label value replaces the first label value in a set of label values associated with the first vertex, and the first vertex comprises a set of labels comprising the first label; and\nthe operations further comprise representing the set of label values for the first vertex as a vector having a plurality of positions, each position in the vector corresponding to one of the labels in the set of labels and storing a value indicating a label value for the corresponding label.\n13. The system of claim 12, wherein:\nthe one or more outgoing edges of the first vertex include an edge label value; and\nthe operations further comprise updating the weighted first label value based on the edge label value and the updated first label value.\n14. The system of claim 13, wherein updating the second label value comprises applying an updating function to the edge label value and the second label value.\n15. The system of claim 13, wherein updating second label value comprises applying a weighting function to the edge label value and the updated first label value to produce the updated second label value.\n16. The system of claim 11, wherein:\nthe first vertex includes the first label value and the second vertex includes the second label value; and\nthe operations further comprise:\nsending a message to a coordinating system indicating that the first vertex has completed an iteration of a series of synchronized iterations including replacing the first label value and the second label value; and\nreceiving a signal to begin another iteration.\n17. The system of claim 11, wherein the operations further comprise:\nmaintaining, using a message module, a message queue for the set of vertices; and\ntransmitting the outgoing message of the first vertex when the message queue reaches a threshold size.\n18. The system of claim 11, wherein determining the updated first label value comprises averaging the first label value with the received weighted source label value.\n19. The system of claim 11, wherein the operations further comprise determining the weighted first label value of the first vertex by multiplying the first label value by a label weight of an edge connecting the first vertex and the second vertex.\n20. The system of claim 11, wherein the operations further comprise terminating an iteration of a series of synchronized iterations of the source vertex, the first vertex and the second vertex when the first label value for the first vertex does not change more than a predefined amount."
}