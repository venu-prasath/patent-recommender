{
    "patent_link": "https://patents.google.com/patent/US20080114896A1/en",
    "patent_id": "US20080114896A1",
    "title": "Asynchronous data transmission",
    "abstract": "A method of, and system for, asynchronous data transmission are disclosed which have application in the transmission of stock exchange data or replicated memory data. Later transmitted data (14) is used to overwrite earlier transmitted and received data (13). However, earlier transmitted data (14) which is received later than later transmitted data (15) (for example due to network latency) does not overwrite the later transmitted data (15). Transmitted data packets include a count value (15) indicative of the sequence position of each data packet in a transmitted sequence (13, 14, 15) of data packets. A transmitter and receiver for asynchronous data transmission and reception, and a packet signal structure are also disclosed.",
    "inventors": [
        "John Holt"
    ],
    "assignee": "Individual",
    "classifications": [
        "G06F9/54",
        "H04L69/40",
        "H04L67/60"
    ],
    "claims": "\n1. A transmitting system for asynchronous updating data packets by a single computer operating within a multiple computer system including a multiplicity of computers each of the multiplicity of computers adapted for executing a different portion of an application program written to execute on only a single conventional computer, and each of the multiplicity of computers having an independent local memory with at least one memory location being replicated in each said local memory, said transmission system for asynchronous updating data packets by a single computer comprising:\na transmitter for transmitting an updating data packet to an external receiver;\neach updating data packet forming part of a sequence of information and each updating data packet intended to overwrite a previously transmitted data packet, each said updating data packet comprises (i) an identifier of the replicated memory location to be updated, (ii) the content with which said replicated memory location is to be updated, and (iii) a resident updating count of the updating source associated with the identified replicated memory location, and each updating data packet comprising (a) a updating data identifier, (b) a updating data content, and (c) an updating count value;\na count valuer within said transmitter determining the magnitude of the updating count value for each data packet transmitted, said updating count value indicating the position of said updating data packet in said sequence of information, and the or each receiver including a count comparison means for comparing a currently received updating count value with a previously received updating count value and overwriting the previously received data content with the currently received data content only if the current received updating count is greater than the previously received updating count.\n2. A transmission system for asynchronous updating data packets by a single computer operating within a multiple computer system as in claim 1, wherein the count comparison means comprises a comparator.\n3. A transmission system for asynchronous updating data packets by a single computer operating within a multiple computer system as in claim 2, wherein the transmission system further includes at least one of said external receiver, the or each receiver comprising:\na count comparison means for comparing a currently received updating count value with a previously received updating count value and overwriting the previously received data content with the currently received data content only if the current received updating count is greater than the previously received updating count.\n4. In a multiple computer system including a multiplicity of computers each executing a different portion of an application program written to execute on a single computer, and each having an independent local memory with at least one memory location being replicated in each said local memory, a method of asynchronous transmission of updating data packets by a single computer of the multiplicity of computers to at least one other one of said multiplicity of computers, the method comprising:\nasynchronous transmitting said updating data packets by said single computer, each updating data packet forming part of a sequence of information and each updating data packet intended to overwrite a previously transmitted data packet, each said updating data packet comprises: an (i) identifier of the replicated memory location to be updated, (ii) the content with which said replicated memory location is to be updated, and (iii) a resident updating count of the updating source associated with the identified replicated memory location;\n(i) for each said updating data packet transmitted, transmitting (a) an updating data identifier, (b) an updating data content, and (c) an updating count value;\n(ii) for each said updating data packet transmitted, for each updating data identifier transmitted in sequence, incrementing said updating count value to indicate the position of said updating data packet in said sequence; and\n(iii) on receipt of an updating data packet by a receiving computer from among the multiplicity of computers, overwriting the previously received data content corresponding to the data identifier with the currently received data content only if the currently received updating count value is greater than the previously received updating count value corresponding to the same data identifier.\n5. A computer program stored in a computer readable media, the computer program adapted for execution in a processor within a computer or information appliance and a memory coupled with the processor to modify the operation of the computer or information appliance, for modifying the operation of the computer or information appliance in a multiple computer system that includes a multiplicity of computers each executing a different portion of an application program written to execute on only a single conventional computer, and each having an independent local memory with at least one memory location being replicated in each said local, the modification including performing a method of asynchronous transmission of updating data packets by a single computer of the multiplicity of computers to at least one other one of said multiplicity of computers, said method comprising:\nasynchronous transmitting said updating data packets by said single computer, each updating data packet forming part of a sequence of information and each updating data packet intended to overwrite a previously transmitted data packet, each said updating data packet comprises: an (i) identifier of the replicated memory location to be updated, (ii) the content with which said replicated memory location is to be updated, and (iii) a resident updating count of the updating source associated with the identified replicated memory location;\n(i) for each said updating data packet transmitted, transmitting (a) an updating data identifier, (b) an updating data content, and (c) an updating count value;\n(ii) for each said updating data packet transmitted, for each updating data identifier transmitted in sequence, incrementing said updating count value to indicate the position of said updating data packet in said sequence; and\n(iii) on receipt of an updating data packet by a receiving computer from among the multiplicity of computers, overwriting the previously received data content corresponding to the data identifier with the currently received data content only if the currently received updating count value is greater than the previously received updating count value corresponding to the same data identifier.\n6. A data packet signal structure comprising: a data identifier, a data content, and a packet count value; the packet count value indicating the sequential position of said data packet in a sequence of separately transmitted data packet signals.",
    "status": "Abandoned",
    "citations_own": [
        "US4969092A",
        "US5214776A",
        "US5291597A",
        "US5394551A",
        "US5418966A",
        "US5434994A",
        "US5488723A",
        "US5544345A",
        "US5568609A",
        "US5612865A",
        "US5802585A",
        "US5918248A",
        "US5987506A",
        "US6049809A",
        "US6148377A",
        "US6163801A",
        "US6192514B1",
        "US6314558B1",
        "US6324587B1",
        "US6327630B1",
        "US6360248B1",
        "US6370625B1",
        "US6389423B1",
        "US6425016B1",
        "US20020199172A1",
        "US20030004924A1",
        "US20030005407A1",
        "US20030067912A1",
        "US6571278B1",
        "US6574674B1",
        "US6574628B1",
        "US20030105816A1",
        "US6611955B1",
        "US6625751B1",
        "US6650640B1",
        "US6668260B2",
        "US20040073828A1",
        "US20040093588A1",
        "US6757896B1",
        "US6760903B1",
        "US6775831B1",
        "US20040158819A1",
        "US6779093B1",
        "US20040163077A1",
        "US6782492B1",
        "US6795850B2",
        "US6823511B1",
        "US20050005074A1",
        "US20050039171A1",
        "US6862608B2",
        "US20050086384A1",
        "US20050108481A1",
        "US6898677B2",
        "US6915390B2",
        "US6954794B2",
        "US20050240737A1",
        "US20050257219A1",
        "US6968372B1",
        "US20050262313A1",
        "US20060020913A1",
        "US7010576B2",
        "US7020736B1",
        "US20060080389A1",
        "US7031989B2",
        "US20060095483A1",
        "US7047341B2",
        "US7058826B2",
        "US20060143350A1",
        "US7082604B2",
        "US20060167878A1",
        "US20060242464A1",
        "US7206827B2",
        "US20080072238A1",
        "US20080189700A1",
        "US7664026B2",
        "US7698308B2"
    ],
    "citations_ftf": [
        "CA2172517C",
        "US5913213A",
        "US6449734B1",
        "EP0969377B1",
        "US6460051B1",
        "AU2002232411A1",
        "US7231554B2",
        "GB2392062A",
        "US7228543B2",
        "EP1763774B1",
        "US20050262513A1"
    ],
    "citedby_own": [
        "US20060242464A1",
        "US7844665B2",
        "US20140359036A1",
        "US20150227320A1"
    ],
    "citedby_ftf": [
        "US9436454B1",
        "US9600378B2"
    ]
}