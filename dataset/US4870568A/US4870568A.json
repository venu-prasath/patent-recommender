{
    "patent_link": "https://patents.google.com/patent/US4870568A/en",
    "patent_id": "US4870568A",
    "title": "Method for searching a database system including parallel processors",
    "abstract": "A method to operate on a single instruction multiple data (SIMD) computer for searching for relevant documents in a database which makes it possible to perform thousands of operations in parallel. The words of each document are stored by surrogate coding in tables in one or more of the processors of the SIMD computer. To determine which documents of the database contain a word that is the subject of a query, a query is broadcast from a central computer to all the processors and the query operations are simultaneously performed on the documents stored in each processor. The results of the query are then returned to the central computer. After all the search words have been broadcast to the processors and point values accumulated as appropriate, the point values associated with each document are reported to the central computer. The documents with the largest point values are then ascertained and their identification is provided to the user.",
    "inventors": [
        "Brewster Kahle",
        "Craig W. Stanfill"
    ],
    "assignee": "TM Patents LP",
    "classifications": [
        "G06F16/9014",
        "G06F16/24532",
        "G06F16/3326",
        "G06F16/90339",
        "Y10S707/99935"
    ],
    "claims": "\n1. A process for searching for relevant documents in a database comprising the steps of:\n(a) forming a database by storing for each of a plurality of documents at least one table of hash codes representing words in the document, the table(s) that represent the words in each different document being stored in a different digital data processor, each hash code comprising information at a plurality of bit locations;\n(b) forming a query having at least one word and a point value of relevance assigned to each word;\n(c) testing if the word in the query is in the database by:\n(1) determining the bit locations in the table at which the hash code corresponding to the queried word is stored; and\n(2) simultaneously testing in each of the processors the bit locations corresponding to the queried word;\n(d) adding at each digital data processor the point value associated with the queried word to a total point value for the document if the hash code is found at all the bit locations corresponding to the queried word that are tested in that processor; and\n(e) providing identification of those documents in the database with high total point values.\n2. The process of claim 1 wherein the step of forming a query comprises:\n(a) identifying a group of relevant documents;\n(b) determining a frequency at which the words in the documents occur among all the relevant documents; and\n(c) generating a query based on the frequency of occurrence of words in the relevant documents.\n3. The process of claim 1 wherein the step of adding the point value of a queried word to the total point value of a document comprises:\n(a) setting a flag in the processor to indicate the presence of the queried word in the table;\n(b) communicating simultaneously from a central computer to each of the processors a command to add the point value assigned to the word to the total point value of the document if the flag in the processor is set.\n4. The process according to claim 1 wherein a document is represented by a chain of tables, each of which stores a representation of a portion of the document, each chain of tables comprising a first table and one or more successive tables, the step of adding the point value associated with the queried word to the total point value of the document comprising the steps of:\n(a) communicating the total point value of the portion of the document represented by each successive table in the chain to the preceding table in the chain; and\n(b) accumulating the total point values of all the tables in the first table of the chain.\n5. The process according to claim 1 wherein the storing of document data in the processors comprises the steps of:\n(a) initializing to zero a table of bits in a memory of each processor;\n(b) generating a plurality of independent hash codes for each word with values in an address range of the table; and\n(c) for each hash code, setting a bit at an address in the table corresponding to each hash code value.\n6. The process of claim 1 wherein the step of providing the identification of those documents with high total point values comprises identifying the documents in numeric order of total point value, said process comprising:\n(a) testing the most significant bit of the point value stored in memory in each processor;\n(b) setting a flag in the processor if the most significant bit is zero;\n(c) repeating step (a) and (b), if necessary, until a non-zero bit is identified; and\n(d) successively testing bits of the point values of lesser significance in those processors where a non-zero bit is identified until a document is identified with the highest total point value.\n7. The process of claim 1 wherein the step of providing the identification of those documents with high total point values comprises identifying the documents in numeric order of total point value, said process comprising:\n(a) testing the most significant bit of the point values stored in memory in each processor;\n(b) setting a flag in the processor if the most significant bit is zero;\n(c) testing the next most significant bit of the point values stored in memory at each processor where a flag is not set; and\n(d) setting a second flag in the processor if the next most significant bit is zero.\n8. The process of claim 1 wherein the step of providing the identification of documents with high total point values comprises:\n(a) successively testing at each digital data processor bits of the total point values associated with each document beginning with the most significant bit and continuing to test bits of lesser significance until the highest total point value is identified; and\n(b) repeating step (a) of this claim on the total point values remaining after the highest total point value is identified in the previous execution of step (a).\n9. The method of claim 1 wherein different point values are assigned to at least some different words.\n10. A process for searching in a database comprising the steps of:\n(a) forming a database by storing in each of a plurality of digital data processors at least one table of hash codes, the hash codes in each table representing a group of related words;\n(b) forming a query having at least one word and a point value of relevance assigned to each word;\n(c) testing if the word in the query is in the database by:\n(1) determining the bit locations in the table at which the hash code corresponding to the queried word is stored; and\n(2) simultaneously testing in each of the processors the bit locations corresponding to the queried word;\n(d) at each digital data processor, adding the point value associated with the queried word to a total point value for that group of related words if the hash code is found at all the bit locations tested in the table; and\n(e) providing identification of those groups of related words in the database with high total point values.\n11. The process of claim 10 wherein the step of adding the point value of a queried word to the total point value for a group of related words comprises:\n(a) setting a flag in the processor to indicate the presence of the queried word in the table;\n(b) communicating simultaneously from a central computer to each of the processors a command to add the point value of the queried word to the total point value for the group of related words if the flag in the processor is set.\n12. The process of claim 10 wherein the step of providing the identification of those groups of related words with high total point values comprises:\n(a) successively testing the bits of the total point values associated with each group of related words beginning with the most significant bit and continuing to test bits of lesser significance until the highest total point value is identified; and\n(b) repeating step (a) of this claim on the total point values remaining after the highest total point values is identified in the previous execution of step (a).\n13. The process of claim 10 wherein the step of providing the identification of those groups of related words with high total point values comprises identifying the groups in numeric order of total point value, said process comprising:\n(a) testing the most significant bit of the point values stored in memory in each processor;\n(b) setting a flag in the processor if the most significant bit is zero;\n(c) testing the next most significant bit of the point values stored in memory at each processor where a flag is not set;\n(d) setting a second flag in the processor if the next most significant bit is zero.\n14. The method of claim 10 wherein different point values are assigned to at least some different words.\n15. A process for searching in a database comprising the steps of:\n(a) forming a database by storing in each of a plurality of digital data processors at least one table of hash codes, the hash codes in each table representing a group of related words;\n(b) forming a query having at least one word;\n(c) testing for the presence of the queried word in the database by:\n(1) determining the bit locations in the table at which the hash code corresponding to the queried word is stored; and\n(2) simultaneously testing in each of the processors the bit locations corresponding to the queried word; and\n(d) scoring each group of related words, a score for a group of related words being increased if the hash code is found at all the bit locations tested in the table.",
    "status": "Expired - Lifetime",
    "citations_own": [
        "US4118788A",
        "US4152762A",
        "US4255796A",
        "US4358824A",
        "US4451901A",
        "US4464650A",
        "US4468728A",
        "US4495566A",
        "US4543630A",
        "US4554631A"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "WO1992004681A1",
        "US5257395A",
        "US5301339A",
        "WO1994023386A2",
        "US5367677A",
        "US5388259A",
        "US5408655A",
        "US5420982A",
        "WO1995021407A2",
        "US5469354A",
        "US5499360A",
        "US5511186A",
        "US5522077A",
        "US5530939A",
        "US5535382A",
        "US5548770A",
        "US5548769A",
        "US5623652A",
        "WO1997034242A1",
        "US5715443A",
        "US5742807A",
        "US5758149A",
        "US5758069A",
        "US5757983A",
        "US5761655A",
        "US5799298A",
        "US5809212A",
        "US5819259A",
        "US5903650A",
        "US5905860A",
        "US5909681A",
        "US5946678A",
        "US5978803A",
        "US6081804A",
        "US6101599A",
        "US6119215A",
        "US6173386B1",
        "US6195739B1",
        "US20010052028A1",
        "US6356548B1",
        "US20020052868A1",
        "US6385747B1",
        "US6505269B1",
        "US6513108B1",
        "US6529983B1",
        "US20030225995A1",
        "US20040006562A1",
        "US6681341B1",
        "US6728839B1",
        "US20040098371A1",
        "US20040098373A1",
        "US20040098374A1",
        "US20040098372A1",
        "US6836838B1",
        "US20050010604A1",
        "US6892237B1",
        "US6920562B1",
        "US20050246194A1",
        "US6968335B2",
        "US20060080285A1",
        "US7058658B2",
        "US20060218126A1",
        "US20060218123A1",
        "US7167857B2",
        "US7293024B2",
        "US20070288478A1",
        "US7403942B1",
        "US20080281843A1",
        "US20080307070A1",
        "US20090271405A1",
        "US20100005079A1",
        "US7657540B1",
        "US7720846B1",
        "US20100293177A1",
        "US7912842B1",
        "US8074289B1",
        "US20130297646A1",
        "US8924654B1",
        "US9189505B2",
        "US9411859B2",
        "US9442930B2",
        "US9442928B2",
        "US10303687B2"
    ],
    "citedby_ftf": [
        "US5170482A",
        "US5088048A",
        "US5170370A",
        "US5325500A",
        "US7779020B2"
    ]
}