{
    "patent_link": "https://patents.google.com/patent/US6975656B1/en",
    "patent_id": "US6975656B1",
    "title": "Method and system for accurately calculating latency variation on an end-to-end path in a network",
    "abstract": "A high-resolution, per-packet measurement tool for analyzing a computer network that operates by sending a predetermined number of packets from a sender machine to a receiver machine with measurement information inserted into the packet. The system kernel at the sending machine stamps a sequence number and the sender's local time into the data section of each packet. When packets arrive at the receiver machine, they are similarly stamped by the receiving machine's kernel with the receiving machine's local time. The maintained packet information serves as the basis for latency analysis. For example, one set of latencies can be obtained with QoS mechanisms turned on, and another set with QoS mechanisms turned off, whereby the benefits of the QoS mechanisms can be accurately determined. To analyze the latencies, the present invention normalizes each time and each latency into relative latency information. Clock skew and timer jumps may be handled as part of the normalization.",
    "inventors": [
        "Shreedhar Madhavapeddi",
        "Yoram Bernet",
        "Rajesh Sundaram",
        "John Holmes"
    ],
    "assignee": "Microsoft Technology Licensing LLC",
    "classifications": [],
    "claims": "\n1. A method for obtaining information for packets transmitted over a network, comprising:\ntransmitting a plurality of packets from a sender to a receiver, including a plurality of selected packets;\nassociating a sender-relative timestamp with each of the plurality of selected packets transmitted;\nreceiving at least some of the plurality of packets, including at least some of the plurality of selected packets;\nassociating a receiver-relative timestamp with each of the plurality of selected packets received;\nassociating a latency, relative to the actual time between when each selected packet is sent and when each selected packet is received that is based on the sender-relative timestamp and the receiver-relative timestamp associated with each selected packet received; and\nnormalizing the latency associated with each selected packet, including detecting clock skew and adjusting information maintained for each selected packet to compensate for the clock skew, wherein detecting clock skew comprises logically finding a slope based on information maintained with the plurality of selected packets received.\n2. The method of claim 1 wherein associating the sender-relative timestamp includes placing a local timestamp of the sender into each selected packet.\n3. The method of claim 1 wherein associating the receiver-relative timestamp includes placing a local timestamp of the receiver into each selected packet.\n4. The method of claim 1 wherein associating the sender-relative timestamp includes placing a local timestamp of the sender into each selected packet, and associating the receiver-relative timestamp includes placing a local timestamp of the receiver into each selected packet.\n5. The method of claim 1 further comprising uniquely identifying each selected packet.\n6. The method of claim 5 wherein uniquely identifying each selected packet includes writing a sequence number.\n7. The method of claim 1 wherein normalizing the latency includes selecting the lowest latency from each of the latencies associated with each selected packet.\n8. The method of claim 1 wherein normalizing the latency includes detecting at least one timer jump and adjusting information maintained for each selected packet to compensate therefor.\n9. The method of claim 1 further comprising, normalizing the sender-relative timestamp associated with each selected packet.\n10. The method of claim 1 further comprising, normalizing the receiver-relative timestamp associated with each selected packet.\n11. The method of claim 1 wherein the network is a controlled network, and further comprising running a calibration phase during transmission of at least some of the transmitted packets.\n12. The method of claim 1 further comprising, generating noise by transmitting other packets on the network.\n13. The method of claim 1 further comprising, enabling network quality of service.\n14. The method of claim 1 further comprising, detecting dropped packets.\n15. A computer-readable medium having computer-executable instructions for performing the method of claim 1.",
    "status": "Expired - Fee Related",
    "citations_own": [
        "US5477531A",
        "US6112323A",
        "US6327274B1",
        "US6377579B1"
    ],
    "citations_ftf": [
        "ZA955605B",
        "US6308072B1",
        "US6064667A",
        "US6714898B1",
        "US6678268B1",
        "US6977929B1",
        "US6975656B1"
    ],
    "citedby_own": [
        "US20030117959A1",
        "US20030177154A1",
        "US20050265500A1",
        "US20050271071A1",
        "EP1681813A2",
        "US7127422B1",
        "US20070217343A1",
        "US7948906B1",
        "US20110246651A1",
        "US20140115406A1",
        "US20140122742A1",
        "US8997076B1",
        "US9122859B1",
        "CN108028782A"
    ],
    "citedby_ftf": [
        "CN1190936C",
        "US7747729B2",
        "US8149880B1",
        "US7792158B1",
        "US7693082B2",
        "US7822073B2",
        "US20070183330A1",
        "US20090124250A1",
        "US8224624B2",
        "US20090307347A1",
        "US8130752B2",
        "US8165011B2",
        "US20100080143A1",
        "US8108557B2",
        "US8064900B2",
        "US8966110B2",
        "US8571068B2",
        "DE102010020663A1",
        "DE102010020662A1",
        "US8687483B2",
        "US9571406B2",
        "US9503343B2",
        "WO2014191820A1",
        "US9967779B2",
        "US20150286416A1",
        "US10165031B2",
        "US9787852B2",
        "US9800482B2",
        "CN106487608B",
        "US10326862B2",
        "US11233719B1"
    ]
}