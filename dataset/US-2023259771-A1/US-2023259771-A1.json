{
    "patent_id": "US-2023259771-A1",
    "title": "Automatic xai (autoxai) with evolutionary nas techniques and model discovery and refinement ",
    "assignee": "UMNAI Limited",
    "publication_date": "2023-08-17",
    "patent_link": "https://patents.google.com/patent/US20230259771A1/en",
    "inventors": [
        "Angelo Dalli",
        "Kristian D\u2019AMATO",
        "Mauro PIRRONE"
    ],
    "classifications": [
        "G06N3/126",
        "G06N3/08",
        "G06F18/2163",
        "G06F18/217",
        "G06F18/22",
        "G06N5/025",
        "G06N3/006",
        "G06N3/045",
        "G06N3/048",
        "G06N3/049",
        "G06N3/084",
        "G06N5/045",
        "G06N7/01"
    ],
    "abstract": "An exemplary model search may provide optimal explainable models based on a dataset. An exemplary embodiment may identify features from a training dataset, and may map feature costs to the identified features. The search space may be sampled to generate initial or seed candidates, which may be chosen based on one or more objectives and/or constraints. The candidates may be iteratively optimized until an exit condition is met. The optimization may be performed by an external optimizer. The external optimizer may iteratively apply constraints to the candidates to quantify a fitness level of each of the seed candidates. The fitness level may be based on the constraints and objectives. The candidates may be a set of data, or may be trained to form explainable models. The external optimizer may optimize the explainable models until the exit conditions are met.",
    "claims": "\n1. A system for performing a model search and providing a system output based on the model search, the system comprising a processor and a memory, the system configured to:\nstore, in the memory, a plurality of features extracted from a training dataset;\nstore, in the memory, one or more objectives and one or more pre-hoc constraints;\nwith the processor, generate a search space and store the search space in the memory, wherein generating the search space comprises mapping a plurality of feature costs to the extracted features, sampling the search space based on the one or more objectives and the one or more pre-hoc constraints, and generating and storing one or more seed candidates from the sampled search space;\nwith the processor, iteratively optimize the one or more seed candidates until an exit condition is met by iteratively performing one or more iterations in a loop, each iteration comprising steps of:\napplying the set of pre-hoc constraints to the seed candidates to quantify a fitness level of each of the seed candidates;\nevaluating the fitness level of each of the seed candidates by comparing the fitness level to the one or more objectives and the one or more pre-hoc constraints;\nstoring a plurality of candidates from the plurality of seed candidates based on the one or more objectives and the one or more pre-hoc constraints;\ntraining the candidates by applying one or more predetermined training techniques;\nevaluating the candidates based on post-hoc constraints, wherein the post-hoc constraints comprise at least one of performance, robustness, and explainability;\nforming or updating, based on a fitness level of one or more candidates, a Pareto front comprising the one or more candidates;\nchecking if at least one of the one or more exit conditions has been reached, wherein\nif the exit conditions have not been reached, regenerating seed candidates identified based on the stored plurality of candidates on the Pareto front and performing another iteration of optimizing the seed candidates, or\nif at least one of the exit conditions has been reached, selecting one or more final candidates based on the seed candidates in the Pareto front, and exiting the loop; and\nstoring, in the memory, the one or more final candidates, and performing the system output based on the one or more final candidates.\n2. The system of claim 1, wherein the processor is communicatively coupled to a behavioral model control system for an autonomous or semi-autonomous system; and\nwherein the one or more objectives and the one or more pre-hoc constraints comprise feedback of the behavioral model control system.\n3. The system of claim 2, wherein the processor is configured to receive a trigger output from the behavioral model control system, and is configured to update system architecture based on the trigger output.\n4. The system of claim 3, wherein the behavioral model control system is a safety controller for a physical system, wherein receiving the trigger output comprises identifying, with a sensor communicatively coupled to the safety controller, an unsafe situation in a physical environment, and wherein updating the system architecture comprises constraining a behavior of the physical system.\n5. The system of claim 3, wherein performing the system output comprises providing, to the autonomous or semi-autonomous system, an instruction to update a sub-component within the autonomous or semi-autonomous system.\n6. The system of claim 1, wherein the processor is communicatively coupled to at least one sensor of an autonomous or semi-autonomous system operating in a physical space;\nwherein the system is further configured to store, in the memory, the training dataset; and\nwherein the system is further configured to add, to the training dataset, at least one sensor output and is configured to compute a further plurality of features based on an update to the training dataset.\n7. The system of claim 6, wherein the autonomous or semi-autonomous system is a robot;\nwherein performing the system output comprises performing at least one action in the physical space; and\nwherein the at least one sensor output comprises an inspection and classification of a result of the at least one action.\n8. The system of claim 6, wherein the training dataset is a synthetic dataset; and\nwherein the system is configured to add the at least one sensor output by identifying a real-world observation from the sensor output and transforming and cleaning the real-world observation.\n9. The system of claim 1, wherein the one or more final candidates are one or more trained explainable models, and wherein performing the system output comprises providing an input to the one or more trained explainable models, and receiving an output from the one or more trained explainable models based on the input.\n10. The system of claim 1, wherein the system further comprises a causal model, wherein the system is further configured to extract, from the one or more trained explainable models, at least one coefficient or at least one weight, and use the at least one coefficient or at least one weight as an input to the causal model.\n11. The system of claim 10, wherein the causal model is one or more of: Pearl's structural causal models, dynamic causal models, granger causal models, and relativistic causal models.\n12. The system of claim 10, wherein the causal model further comprises a counterfactual component comprising at least one of a set of: a component configured to provide a stationary stochastic process, a component configured to provide a non-stationary stochastic process, a continuous dynamic systems model, a discrete dynamic systems model, a phase space model, and a recurrent feedback control system model.\n13. The system of claim 10, wherein the causal model further comprises a mediations component configured to construct one or more mediation models comprising one or more of: one or more statistical mediation models and one or more causal mediation models; and\nwherein the mediations component is configured to arrange the one or more mediation models in one of a serial structure or a parallel structure.\n14. The system of claim 1, wherein the one or more objectives and the one or more pre-hoc constraints are implemented in one of an abductive logic, inductive logic, deductive logic in combination with causal logic.\n15. The system of claim 1, wherein the system further comprises a causal model and is configured to execute a causal model search and optimization process after storing, in the memory, the one or more final candidates, comprising:\ncomparing a first level of fit of the one or more final candidates to a second level of fit of the causal model, and identifying a gap between the second level of fit and a threshold; and\nbased on identification of the gap between the second level of fit and the threshold, initiating a causal model discovery process and generating, from the causal model discovery process, a replacement causal model.\n16. The system of claim 1, wherein the one or more pre-hoc constraints are causal constraints.\n17. The system of claim 1, wherein the one or more final candidates comprise an explainable spiking network integrating a causal model, wherein connections between elements in the explainable spiking network are probabilistic.\n18. The system of claim 1, wherein the one or more final candidates comprise an explainable model paired with source code architecture, said explainable model having a bi-directional link with the source code architecture and configured to adjust a structure of the explainable model based on a change to the source code architecture.\n19. The system of claim 1, wherein the one or more final candidates comprise an explainable model paired with a synthetic image, wherein said image comprises a blend of at least one computer-generated image and at least one real image; and\nwherein performing the system output comprises performing real-time image blending comprising generating and outputting the synthetic image to at least one paired device, performing a further loop and generating and outputting a further synthetic image.\n20. The system of claim 1, wherein the one or more final candidates comprise at least one explainable model paired with an input to be reconstructed; wherein performing the system output comprises:\nidentifying, based on the at least one explainable model, a degree of reconstruction of the input, and determining whether the degree of reconstruction is above an acceptable threshold; and\nif the degree of reconstruction is poorer than the acceptable threshold, flagging the input as anomalous, the system output comprising at least a data output identifying an anomalous element.",
    "status": "Pending",
    "citations_own": [],
    "citations_ftf": [
        "CN112784954A"
    ],
    "citedby_own": [],
    "citedby_ftf": [
        "WO2023136771A1",
        "CN116560725A"
    ]
}