{
    "patent_id": "US-10846341-B2",
    "title": "System and method for analysis of structured and unstructured data ",
    "assignee": "Kpmg Llp",
    "publication_date": "2020-11-24",
    "patent_link": "https://patents.google.com/patent/US10846341B2/en",
    "inventors": [
        "Timothy J. CERINO",
        "Justin Mathew EDWARDS",
        "James Johnson Gardner",
        "John Hyung LEE",
        "Gabriel C. STOENESCU"
    ],
    "classifications": [
        "G06F16/90332",
        "G06F16/116",
        "G06F16/1794",
        "G06F16/285",
        "G06F16/35",
        "G06F40/131",
        "G06F40/14",
        "G06F40/169",
        "G06F40/205",
        "G06F40/216",
        "G06F40/295",
        "G06F40/30",
        "G06F40/56",
        "G06K9/00456",
        "G06N20/00",
        "G06N3/08",
        "G06N5/022",
        "G06V30/413",
        "G06V30/416",
        "G06N5/041",
        "G06N7/01"
    ],
    "abstract": "The invention relates to computer-implemented systems and methods for analyzing and standardizing various types of input data such as structured data, semi-structured data, unstructured data, and images and voice. Embodiments of the systems and the methods further provide for generating responses to specific questions based on the standardized input data.",
    "claims": "\n1. A computer-implemented method for analyzing at least one of structured and unstructured data, the method comprising:\nreceiving at least one specific question and at least one input file to be analyzed, wherein the at least one input file comprises at least one of: text, an image, an audio file, a video file, a table, and a database; and\napplying an artificial intelligence process to the at least one input file, the artificial intelligence process comprising the steps of:\ngenerating, for the at least one input file, a converted file in a data format that is standardized for a plurality of input file types and that includes at least one element;\ngenerating the at least one element, wherein the at least one element includes an element identifier and an element type, and is stored in a non-hierarchical relationship format to other elements;\ngenerating at least one expression, wherein the expression comprises an expression string that is in a domain-specific language;\nreading, via a machine review portion of the artificial intelligence process, the at least one expression;\napplying, via the machine review portion of the artificial intelligence process, the at least one expression to the converted file to generate an output file having an answer to the specific question; and\napplying the answer to the specific question as feedback to the artificial intelligence process to improve the accuracy of the artificial intelligence process.\n2. The method of claim 1, wherein the converted file is configured to interface with a dynamic, interpreted language.\n3. The method of claim 1, wherein the converted file is configured to interface with Python.\n4. The method of claim 1, wherein the converted file is (i) implemented in Python and includes computer-object representations as Python objects and (ii) serialized as JSON for inter-process communication.\n5. The method of claim 1, wherein the converted file is configured for use with JSON, Swagger (YAML), and RESTful.\n6. The method of claim 1, wherein the converted file further includes a name of the document, a file path for the document, a file type of the document, and a binary representation of the document.\n7. The method of claim 1, wherein the at least one element further includes at least one attribute, wherein the at least one attribute comprises a key-value pair.\n8. The method of claim 1, wherein the expression is configured to interface with the format of the converted file.\n9. The method of claim 1, wherein the at least one element is generated and stored in a stand-off annotation format in an annotated file, wherein the at least one expression is applied to the annotated file to generate the output file.\n10. The method of claim 9, wherein the expression string (i) specifies at least one of a programmatic logical operation and a pattern to search for in the annotated file and (ii) incorporates subject matter expertise for a particular question.\n11. The method of claim 1, wherein the domain-specific language is stored in a comma-separated-value file.\n12. A system for analyzing at least one of structured and unstructured data, the system comprising:\na scanner, wherein the scanner is configured to receive at least one input file to be analyzed, wherein the at least one input file comprises at least one of: text, an image, an audio file, a video file, a table, and a database; and\na server, wherein the server is configured to:\nreceive at least one specific question and the scanned at least one input file;\napply an artificial intelligence process to the at least one input file;\ngenerate, for the at least one input file, a converted file in a data format that is standardized for a plurality of input file types and that includes at least one element;\ngenerate the at least one element, wherein the at least one element includes an element identifier and an element type and is stored in a non-hierarchical relationship format to other elements;\ngenerate at least one expression, wherein the expression comprises an expression string that is in a domain-specific language;\nread, via a machine review portion of the artificial intelligence process, the at least one expression;\napply, via the machine review portion of the artificial intelligence process, the at least one expression to the converted file to generate an output file having an answer to the specific question; and\napply the answer to the specific question as feedback to the artificial intelligence process to improve the accuracy of the artificial intelligence process.\n13. The system of claim 12, wherein the server includes an intelligent domain engine (IDE), wherein the IDE is configured to:\nreceive the at least one expression,\napply the at least one expression to the at least one input file, and\noutput the answer to the specific question based on the applying.\n14. The system of claim 13, wherein the IDE incorporates at least one of natural language processing, machine learning, annotation components, and manually-encoded expressions to classify and analyze the at least one input file.\n15. The system of claim 12, wherein the server is further configured to:\nextract original source data and metadata from the at least one input file,\nstore the extracted original source data in the converted file,\ngenerate the at least one element based on a conversion of the extracted metadata,\nstore the generated at least one element in the converted file.\n16. The system of claim 15, wherein the metadata is at least one of author information, page information, paragraph information, and font information.\n17. The system of claim 15, wherein the extracted metadata is converted with a format-specific parser.\n18. The system of claim 12, wherein the server is further configured to perform at least one of entity resolution and semantic annotation on the at least one input file.\n19. The system of claim 18, wherein (i) the entity resolution determines a match between data associated with the at least one input file and data associated with at least one ontology and (ii) the semantic annotation connects the data associated with the at least one input file with the data associated with at least one ontology.\n20. A system for analyzing at least one of structured and unstructured data, the system comprising:\na server, wherein the server is configured to:\nreceive at least one specific question and at least one input file to be analyzed, wherein the at least one input file comprises at least one of: text, an image, an audio file, a video file, a table, and a database;\napply an artificial intelligence process to the at least one input file;\ngenerate, for the at least one input file, a converted file in a data format that is standardized for a plurality of input file types and that includes at least one element;\ngenerate the at least one element, wherein the at least one element includes an element identifier and an element type and is stored in a non-hierarchical relationship format to other elements;\ngenerate, by a artificial intelligence operator, at least one expression, wherein the expression comprises an expression string that is in a domain-specific language;\nread, via a machine review portion of the artificial intelligence process, the at least one expression;\napply, via the machine review portion of the artificial intelligence process, the at least one expression to the converted file to generate an output file having an answer to the specific question; and\napply the answer to the specific question as feedback to the artificial intelligence process to improve the accuracy of the artificial intelligence process."
}