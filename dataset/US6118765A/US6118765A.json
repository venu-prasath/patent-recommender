{
    "patent_link": "https://patents.google.com/patent/US6118765A/en",
    "patent_id": "US6118765A",
    "title": "System method and computer program product for eliminating unnecessary retransmissions",
    "abstract": "A system, method and computer program product for preventing unnecessary retransmissions from being sent from a terminal such as, for example, an internet host computer, on a slow link. A slow link TCP optimizer receives data packets from a host computer and determines, based on an estimated round trip time, whether a data packet is a new data packet, a valid retransmitted data packet or an unnecessary retransmitted data packet. New data packets and valid retransmitted data packets are forwarded over the slow link to a remote terminal. Unnecessary retransmitted data packets are discarded. The estimating a round trip time is determined as the time it takes for a data packet to travel from the present invention to the remote terminal and for an acknowledgment of receipt to travel from the remote terminal back to the present invention. The estimated round trip time includes throughput latency that results from a slow link. The slow link TCP optimizer does not affect data packets that are sent from a host computer that properly accounts for a slow link when determining a round trip time.",
    "inventors": [
        "Marc S. Phillips"
    ],
    "assignee": "Qualcomm Inc",
    "classifications": [
        "H04L47/10",
        "H04L1/1838",
        "H04W28/06"
    ],
    "claims": "\n1. A method for eliminating unnecessary retransmissions of data packets from a first terminal, comprising the steps of:\n(1) receiving a data packet from the first terminal at a first location;\n(2)(a) estimating at the first location a round trip time for a data packet to travel from the first terminal to a second terminal, and for an acknowledgment of receipt to arrive at the first terminal from the second terminal, wherein the round trip time is based upon a delay in transmission plus throughput latency resulting from a slow link between the first terminal the second terminal;\n(2)(b) determining whether the data packet is a valid data packet or an unnecessary retransmitted data packet based upon the estimated round trip time;\n(3) forwarding valid data packets to the second terminal; and\n(4) discarding unnecessary retransmitted data packets.\n2. The method according to claim 1, wherein step (2)(a) further comprises:\n(i) determining that the data packet is a valid data packet if a round trip timer has expired, wherein the round trip timer is set according to the estimated round trip time.\n3. The method according to claim 1, wherein step (2) further comprises:\n(a) maintaining a data table including an expected sequence number.\n4. The method according to claim 3, wherein step (2) further comprises the step of:\n(b) determining that the data packet is a valid data packet when the following conditions are met;\n(i) a round trip timer has not expired, and\n(ii) the data packet has a sequence number that is not less than the expected sequence number.\n5. The method according to claim 4, wherein step (2) further comprises the steps of:\n(c) maintaining a current sequence number, an end of packet number, a highest sequence number and the expected sequence number in the data table;\n(d) setting the end of packet number to a sum of a TCP sequence number of the data packet and an IP length field of the data packet;\n(e) setting the expected sequence number to the end of packet number if the sequence number is equal to the expected sequence number; and\n(f) setting the highest sequence number to the end of packet number if the end of packet number is greater than the highest sequence number.\n6. The method according to claim 3, wherein step (2) further comprises the step of:\n(b) determining that the data packet is a valid data packet when the following conditions are met;\n(i) the data packet has a sequence number that is less than the expected sequence number, and\n(ii) the data packet includes data that is not substantially similar to data in a previously received data packet.\n7. The method according to claim 6, wherein step (2) further comprises the steps of:\n(c) maintaining a current sequence number, an end of packet number, a highest sequence number, the expected sequence number and control flags in the data table;\n(d) setting the end of packet number to a sum of a TCP sequence number of the data packet and an IP length field of the data packet;\n(e) setting the expected sequence number to the end of packet number if the sequence number is equal to the expected sequence number;\n(f) setting the highest sequence number to the end of packet number if the end of packet number is greater than the highest sequence number; and\n(g) setting the expected sequence number to the highest sequence number.\n8. The method according to claim 3, wherein step (2) further comprises the step of:\n(b) determining that the data packet is an unnecessary retransmitted data packet when;\n(i) the data packet has a sequence number that is less than the expected sequence number,\n(ii) the data packet includes data that is substantially similar to data in a previously received data packet, and\n(iii) the timer is still running.\n9. The method according to claim 8, wherein step (2) further comprises the step of:\n(c) maintaining a current sequence number, an end of packet number, a highest sequence number and the expected sequence number in the data table; and\n(d) setting the expected sequence number to the highest sequence number.\n10. The method according to claim 1, wherein step (2) comprises the step of:\n(a) determining that a data packet is a valid data packet if the data packet is was not previously received and if the data packet has a sequence number that is less than a sequence number of a previously received data packet.\n11. A system for eliminating unnecessary retransmissions of data packets from a first terminal, comprising:\na round trip timer that estimates a round trip time that it takes for a data packet to travel to a second terminal and for an acknowledgment of receipt to return from the second terminal, based upon delay in transmission plus throughput latency resulting from a slow link;\ndata tables that store information associated with the data packets including an expected sequence number; and\na discriminator that receives the data packets from the first terminal, that employs said round trip timer to determine whether the data packets are valid data packets or unnecessary retransmitted data packets, that forwards valid data packets to a second terminal and that discards unnecessary retransmitted data packets.\n12. The system according to claim 11, wherein said discriminator comprises:\nmeans for determining that the data packet is a valid data packet when said round trip timer has expired.\n13. The system according to claim 12, wherein said discriminator comprises:\nmeans for determining that the data packet is a valid data packet when said round trip timer has not expired and the data packet has a sequence number that is not less than the expected sequence number.\n14. The system according to claim 13, wherein said discriminator comprises:\nmeans for determining that the data packet is a valid data packet when said round trip timer has not expired, the data packet has a sequence number that is less than the expected sequence number, and the data packet includes data that is not substantially similar to data in a previously received data packet.\n15. The system according to claim 14, wherein said discriminator further comprises:\nmeans for maintaining a current sequence number, an end of packet number, a highest sequence number and the expected sequence number in said data table;\nmeans for setting the end of packet number to a sum of a TCP sequence number of the data packet and an IP length field of the data packet;\nmeans for setting the expected sequence number to the end of packet number when the sequence number is equal to the expected sequence number;\nmeans for setting the highest sequence number to the end of packet number when the end of packet number is greater than the highest sequence number; and\nmeans for setting the expected sequence number to the highest sequence number when the data packet has a sequence number that is less than the expected sequence number and the data packet includes data that is not substantially similar to data in a previously received data packet.\n16. The system according to claim 11, wherein said discriminator comprises:\nmeans for determining that the data packet is an unnecessary retransmitted data packet when the data packet has a sequence number that is less than the expected sequence number and the data packet includes data that is substantially similar to data in a previously received data packet.\n17. The method according to claim 16, wherein said discriminator further comprises:\nmeans for maintaining a current sequence number, an end of packet number, a highest sequence number and the expected sequence number in said data tables; and\nmeans for setting the expected sequence number to the highest sequence number.\n18. A computer program product comprising a computer useable medium having computer program logic stored therein, said computer program logic for enabling a computer to eliminate unnecessary retransmissions from a first terminal, wherein said computer program logic comprises:\nmeans for enabling the computer to receive a data packet from the first terminal;\nmeans for enabling the computer to determine whether the data packet is a valid data packet or an unnecessary retransmitted data packet, said determination considering a round trip time based upon delay in transmission plus throughput latency resulting from a slow link;\nmeans for enabling the computer to forward valid data packets to a second terminal; and\nmeans for enabling the computer to discard unnecessary retransmitted data packets.\n19. The computer program product according to claim 18, wherein said means for enabling the computer to determine whether the data packet is a valid data packet or an unnecessary retransmitted data packet comprises:\nmeans for enabling the computer to estimate a round trip time that it takes for a data packet to travel to the second terminal and for an acknowledgment of receipt to return from the second terminal, based upon delay in transmission plus throughput latency resulting from a slow link; and\nmeans for enabling the computer to determine whether the data packet is a valid data packet or an unnecessary retransmitted data packet based upon the estimated round trip time.",
    "status": "Expired - Lifetime",
    "citations_own": [
        "US5442637A",
        "US5444718A",
        "US5793768A",
        "US6018516A",
        "US6031818A"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US6260070B1",
        "US6298381B1",
        "US6338092B1",
        "US6446121B1",
        "US20020161892A1",
        "US20020172153A1",
        "US20020199019A1",
        "WO2003012601A2",
        "US20030043777A1",
        "WO2003019876A1",
        "EP1300991A1",
        "US6608818B1",
        "US6611495B1",
        "US20030206549A1",
        "US6700871B1",
        "US20040066935A1",
        "US6724724B1",
        "US6741581B1",
        "EP1427146A1",
        "US6754706B1",
        "US20040122969A1",
        "US6791945B1",
        "US6795860B1",
        "US20040218532A1",
        "US6816458B1",
        "US6826153B1",
        "US6826152B1",
        "US6856599B1",
        "US20050041581A1",
        "US20050097445A1",
        "US20050117515A1",
        "US20060056457A1",
        "EP1638278A2",
        "US20060112176A1",
        "US7058706B1",
        "US7068677B1",
        "US20070058636A1",
        "US20070130355A1",
        "US20070147245A1",
        "US20070198737A1",
        "US7346676B1",
        "CN100440781C",
        "US7523181B2",
        "US20090132826A1",
        "US20100125649A1",
        "US20110014908A1",
        "US20110103403A1",
        "US8346956B2",
        "US8559341B2",
        "US20140029620A1",
        "US8670326B1",
        "US8724517B1",
        "US20140156720A1",
        "US8762036B2",
        "US8774010B2",
        "US8830875B1",
        "US8982733B2",
        "US9450846B1",
        "US9762492B2"
    ],
    "citedby_ftf": [
        "KR100424654B1",
        "EP1102441A1",
        "EP1435704B1",
        "EP2887595B8"
    ]
}