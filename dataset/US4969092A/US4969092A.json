{
    "patent_link": "https://patents.google.com/patent/US4969092A/en",
    "patent_id": "US4969092A",
    "title": "Method for scheduling execution of distributed application programs at preset times in an SNA LU 6.2 network environment",
    "abstract": "A method for scheduling time initiated tasks from an Intelligent Work Station (IWS) of an SNA network in which a host processor has created a plurality of run ready virtual machines which are assigned under control of a Virtual Machine Pool Manager in response to an LU 6.2 allocate verb to establish an LU 6.2 conversation between distributed parts of an application program, one part of which is resident at the IWS and the other part of which is resident at the host. A distributed application program named BATCH is provided, Part A of which is resident on the user's IWS and Part B of which is resident on the host processor. Part B is functionally a component of Virtual Machine Pool Manager (VMPM). The BATCH program allows the user to tranfer information regarding the task that is to be initiated at a designated time, to the host processor. The user invokes the BATCH program which prompts the user for the name of the application program which is to be time initiated, the time that the program is to be initiated, and the name of the processor on which the named application is to be executed. When the named application is to be executed on a host processor other than the host processor assigned to the IWS, the user may specify a transfer time for the local processor to forward the information to the target host processor. The user may also specify a plurality of host locations where the application is to be run. The method also provides at the host processor a Time Application Information Table. The function of the TAIT is to maintain information on time initiated tasks that are frequently scheduled so that the user may be relieved of much of the data entry.",
    "inventors": [
        "David U. Shorter"
    ],
    "assignee": "International Business Machines Corp",
    "classifications": [
        "G06F9/4843",
        "G06F9/5077"
    ],
    "claims": "\n1. A method for scheduling time initiated tasks from an Intelligent Work Station (IWS) of an SNA network in which a host processor has created a plurality of run ready virtual machines which are assigned under control of a Virtual Machine Pool Manager in response to an LU 6.2 Allocate verb from said IWS to establish an LU 6.2 conversation between distributed parts of a scheduling program, one part of which is resident at the IWS and a second part of which is resident at the host, said method comprising the following steps;\n(A) storing at said host processor, scheduling information that identifies a first distributed application program and a scheduled time said application should be executed,\n(B) issuing, with said host processor at said scheduled time, and ALLOCATE verb to the VMPM of said host processor specifying the said first distributed application program, and\n(C) assigning an idle virtual machine from said pool to respond to said Allocate and establish in LU 6.2 conversation between the distributed parts of said first distributed application.\n2. The method recited in claim 1 in which said scheduling program comprises first and second distributed parts, including the further step of,\n(D) maintaining at said IWS said first part of said scheduling program, and\n(E) maintaining at said host said second part of said scheduling program.\n3. The method recited in claim 2 including the further step of,\n(G) invoking said first path of said scheduling program at said IWS when a user of said IWS indicates to said IWS that said user wants to schedule said first distributed application program for execution on a host processor, and\n(H) displaying a screen to a said user which prompts said user to enter predetermined information into said IWS concerning the scheduling of said first distributed application program.\n4. The method recited in claim 3 including the further step of,\n(I) issuing with said first part of said scheduling program an LU 6.2 ALLOCATE verb requesting a conversation with said second part of said scheduling program maintained at said host, and\n(J) establishing an LU 6.2 conversation with said second part of said scheduling program to permit said predetermined information to be transferred to said host processor.\n5. The method recited in claim 4 including the further steps of,\n(K) creating a Time Control Block Entry (TCBE) data structure with said second part of said scheduling program, and\n(L) storing in said TCBE selected scheduling information that was entered into said IWS by said user and transferred to said host processor from said IWS.\n6. The method recited in claim 5 including the further step of,\n(M) creating with said VMPM, a Time Application Information Table data structure at said host processor for storing scheduling data at said host processor, that can be used to complete said TCBE for said first distributed application program whenever said information is not entered by said user.\n7. The method recited in claim 6 in which said host processor has an Operating System which includes a TIMER SERVICES component, and said first distributed application program comprises a Part A and a Part B, including the further step of,\n(N) providing said VMPM with a Timer Function (TF) component which is operable in response to an alert signal from said Timer Services component in invoke said Part A of said distributed application program.\n8. The method recited in claim 7 including the further step of,\n(O) calling said Timer Services component of said Operating System with said TF component and specifying a time interval parameter that determines when said alert signal is to be sent to said TF from said Timer Services.\n9. The method recited in claim 8 including the further step of,\n(P) issuing, in response to said alert signal, an ALLOCATE verb with said Part A of said first application program to said VMPM requesting that an idle run ready virtual machine in said pool of virtual machines be assigned by said VMPM to establish a conversation with said Part B of said application program.\n10. The method recited in claim 9, in which said SNA network includes a plurality of interconnected systems, each of which was a host processor and a plurality of IWSs and in which said scheduling program permits and application program to be scheduled from an IWS to run on a selected host processor of any one of said interconnected systems at a scheduled time, including the further steps of,\n(Q) assigning a unique network name to said host processor of each of said interconnected systems, and for each said selected host processor scheduled to run said first application program,\n(R) creating at said selected host processor a separate TCBE,\n(S) entering said unique name in said separate TCBE, and\n(T) processing each said separate TCBE at said scheduled time to send an ALLOCATE verb to said VMPM of said selected host processor, to cause said VMPM to assign an idle virtual machine from a pool of virtual machines at said host processor to service said conversation request represented in said received ALLOCATE verb,\nwhereby each said selected host processor runs said application program at said scheduled time.\n11. The method recited in claim 10 in which said scheduling program schedules a specified host processor to store and forward to a target host processor at a scheduled time-1, a scheduling request to initiate at said target host processor a specified distributed application program on said target host processor at a subsequent scheduled time-2, including the further steps of,\n(U) prompting said user for said scheduled time-1,\n(V) entering a value at said IWS for said time-1,\n(W) transferring said value to said specified host processor,\n(X) storing said value in a TCBE at said specified host processor, and\n(Y) forwarding said scheduling request to said target host processor at said time-1 in response to said alert signal from said timing services of said specified host.\n12. The method recited in claim 11 including the further step of,\n(Z) issuing an ALLOCATE at said target host processor at said scheduled time-2 to initiate said execution of said specified distributed application program on a virtual machine from the pool of virtual machines that was previously created at said target host processor.",
    "status": "Expired - Fee Related",
    "citations_own": [
        "US4318173A"
    ],
    "citations_ftf": [
        "JP2585535B2",
        "US4918595A",
        "DE3854323T2"
    ],
    "citedby_own": [
        "US5027269A",
        "US5274810A",
        "US5291595A",
        "US5321605A",
        "US5371857A",
        "US5420801A",
        "US5448731A",
        "US5590281A",
        "US5659720A",
        "US5668993A",
        "US5668994A",
        "US5680548A",
        "US5724584A",
        "US5835688A",
        "US5881239A",
        "US5923850A",
        "US5999916A",
        "US6061807A",
        "US6098091A",
        "US6182110B1",
        "US20010013049A1",
        "US20020059392A1",
        "US20020087886A1",
        "US6442613B1",
        "US6658488B2",
        "US6681254B1",
        "US6687735B1",
        "US6708226B2",
        "US20040073603A1",
        "US6732141B2",
        "US6757778B1",
        "US20040138907A1",
        "US20050180095A1",
        "US20050240737A1",
        "US20050240931A1",
        "US20050257219A1",
        "US20050262513A1",
        "US20050262313A1",
        "US6972770B1",
        "US20060020913A1",
        "US7035906B1",
        "US20060095497A1",
        "US7093086B1",
        "US20060253844A1",
        "US7203944B1",
        "US7213246B1",
        "US20070101080A1",
        "US20070126750A1",
        "US7246200B1",
        "US20070174734A1",
        "US7373655B1",
        "US20080114896A1",
        "US20080114853A1",
        "US20080114943A1",
        "US20080114945A1",
        "US20080120477A1",
        "US20080120478A1",
        "US20080126516A1",
        "US20080123642A1",
        "US20080126721A1",
        "US20080126503A1",
        "US20080126505A1",
        "US20080126508A1",
        "US20080126703A1",
        "US20080126502A1",
        "US20080134189A1",
        "US20080133861A1",
        "US20080133870A1",
        "US20080133869A1",
        "US20080133859A1",
        "US20080130652A1",
        "US20080140975A1",
        "US20080140805A1",
        "US20080155127A1",
        "US20080195617A1",
        "US20080215701A1",
        "US20080250221A1",
        "US20080250213A1",
        "US7603670B1",
        "US20090313447A1",
        "US20100064293A1",
        "US20100121935A1",
        "US7805756B2",
        "US7908650B2",
        "US7940706B2",
        "US8122198B2",
        "US8171474B2",
        "US8225003B2",
        "US8266477B2",
        "US8312529B2",
        "US8670246B2",
        "US8700898B1",
        "US8839447B2",
        "US8898768B2",
        "US8954964B2",
        "US20150095910A1",
        "US9389898B2",
        "US10303782B1",
        "US20190340029A1",
        "USD960177S1"
    ],
    "citedby_ftf": [
        "CN108062245A"
    ]
}