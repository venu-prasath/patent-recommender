{
    "patent_id": "US-11176459-B2",
    "title": "Extracting encryption metadata and terminating malicious connections using machine learning ",
    "assignee": "Cujo LLC",
    "publication_date": "2021-11-16",
    "patent_link": "https://patents.google.com/patent/US11176459B2/en",
    "inventors": [
        "Yuri Frayman",
        "Robert Beatty",
        "Leonid Kuperman",
        "Gabor Takacs"
    ],
    "classifications": [
        "H04L12/4625",
        "G06N5/003",
        "G06N20/00",
        "G06N20/20",
        "G06N5/01",
        "H04B10/1149",
        "H04L12/2825",
        "H04L12/2827",
        "H04L12/2834",
        "H04L63/0428",
        "H04L63/06",
        "H04L63/0823",
        "H04L63/1416",
        "H04L63/1425",
        "H04L63/20",
        "H04W12/082",
        "H04W12/088",
        "G06N20/10",
        "G06N3/08"
    ],
    "abstract": "A network traffic hub extracts encryption metadata from messages establishing an encrypted connection between a smart appliance and a remote server and determines whether malicious behavior is present in the messages. For example, the network traffic hub can extract an encryption cipher suite, identified encryption algorithms, or a public certificate. The network traffic hub detects malicious behavior or security threats based on the encryption metadata. These security threats may include a man-in-the-middle attacker or a Padding Oracle On Downgraded Legacy Encryption attack. Upon detecting malicious behavior or security threats, the network traffic hub blocks the encrypted traffic or notifies a user.",
    "claims": "\n1. A network traffic hub for detecting malicious behavior based on network communications establishing an encrypted connection between a computing system and a remote server, the network traffic hub comprising:\na network interface communicatively coupled to the computing system via a first communication channel in a local network and communicatively coupled to a remote server via a second communication channel in a wide area network;\na processor; and\na memory storing program code, the program code when executed causes the processor to:\nintercept, via the first communication channel, a first network communication from the computing system for transmission, via the second communication channel, to the remote server;\ntransmit, via the second communication channel, the first network communication to the remote server;\nintercept, via the second communication channel, one or more second network communications from the remote server to the computing system, the one or more second network communications comprising a public certificate associated with the remote server;\nextract the public certificate from the one or more second network communications;\ntransmit, via the first communication channel, the one or more second network communications to the computing system;\ndetect, using a threat detection model, malicious behavior performed by the computing system or remote server, via the first and second communication channels, based on the public certificate, wherein the threat detection model comprises a machine-learned model trained using known-malicious training data and known-benign training data, the known-malicious training data comprising examples where a secure connection between a computing system and a remote server is attacked while the secure connection was being established, and the known-benign training data comprising examples where a secure connection between a computing system and a remote server is successfully connected without being compromised; and\nblock subsequent network communications between the computing system and the remote server in response to detecting malicious behavior in the network communications between the computing system and the remote server.\n2. The network traffic hub of claim 1, further comprising program code to allow, responsive to a lack of detection of malicious behavior in the network communications between the computing system and the remote server, continued network traffic communications between the computing system and the remote server.\n3. The network traffic hub of claim 1, further comprising program code to receive a designation, from a behavior analysis engine, of whether malicious behavior is present in the first network communication or the one or more second network communications based on analysis from a threat detection model.\n4. A method for detecting malicious behavior based on network communications establishing an encrypted connection between a computing system and a remote server, comprising:\nintercepting, by a network traffic hub in a local network, a first network communication from the computing system in the local network, for transmission to a remote server in a wide area network;\ntransmitting, by the network traffic hub, the first network communication to the remote server;\nintercepting, by the network traffic hub, one or more second network communications from the remote server to the computing system, the one or more second network communications comprising a public certificate associated with the remote;\nextracting the public certificate from the one or more second network communications;\ntransmitting, by the network traffic hub, the one or more second network communications to the computing system;\ndetecting, using a threat detection model, malicious behavior performed by the computing system or remote server, based on the public certificate, wherein the threat detection model comprises a machine-learned model trained using known-malicious training data and known-benign training data, the known-malicious training data comprising examples where a secure connection between a computing system and a remote server is attacked while the secure connection was being established, and the known-benign training data comprising examples where a secure connection between a computing system and a remote server is successfully connected without being compromised; and\nblocking subsequent network communications between the computing system and the remote server, responsive to detecting malicious behavior in the network communications between the computing system and the remote server by the network traffic hub.\n5. The method of claim 4, further comprising, responsive to not detecting malicious behavior in the network communications between the computing system and the remote server, allowing continued network traffic communications between the computing system and the remote server by the network traffic hub.\n6. The method of claim 4, further comprising receiving, from a behavior analysis engine a designation of whether malicious behavior is present in the first network communication or the one or more second network communications based on analysis from a threat detection model.\n7. A non-transitory computer-readable medium comprising stored program code, the program code comprised of computer-executable instructions that, when executed by a processor, causes the processor to:\nintercept, via a first communication channel in a local network, a first network communication from a computing system for transmission, via a second communication channel in a wide area network, to a remote server;\ntransmit, via the second communication channel, the first network communication to the remote server;\nintercept, via the second communication channel, one or more second network communications from the remote server to the computing system, the one or more second network communications comprising a public certificate associated with the remote server;\nextract the public certificate from the one or more second network communications;\ntransmit, via the first communication channel, the one or more second network communications to the computing system;\ndetect, using a threat detection model, malicious behavior performed by the computing system or remote server, via the first and second communication channels, based on the public certificate, wherein the threat detection model comprises a machine-learned model trained using known-malicious training data and known-benign training data, the known-malicious training data comprising examples where a secure connection between a computing system and a remote server is attacked while the secure connection was being established, and the known-benign training data comprising examples where a secure connection between a computing system and a remote server is successfully connected without being compromised; and\nblock network communications between the computing system and the remote server, in response to detecting malicious behavior in the network communications between the computing system and the remote server.\n8. The non-transitory computer-readable medium of claim 7, further comprising, responsive to not detecting malicious behavior in the network communications between the computing system and the remote server, allowing continued network traffic communications between the computing system and the remote server.\n9. The non-transitory computer-readable medium of claim 7, further comprising program code to receive a designation, from a behavior analysis engine, of whether malicious behavior is present in the first network communication or the one or more second network communications based on analysis from a threat detection model.",
    "status": "Active",
    "citations_own": [
        "US20080092181A1",
        "US20080162390A1",
        "US20100162395A1",
        "US20110219451A1",
        "US20110219450A1",
        "US20120266245A1",
        "US20120330801A1",
        "US20120330863A1",
        "US20130055338A1",
        "US20130074185A1",
        "US20130139260A1",
        "US20130145471A1",
        "US8677466B1",
        "US20140101759A1",
        "US9009820B1",
        "US20160173288A1",
        "US20160182459A1",
        "US20160180100A1",
        "US20160197786A1",
        "US20160219024A1",
        "US9419942B1",
        "US20160315909A1",
        "US20170006643A1",
        "US20170005390A1",
        "US20170019873A1",
        "US20170055148A1",
        "US20170126704A1",
        "US20170171181A1",
        "US20170169640A1",
        "US20170171607A1",
        "US20170171314A1",
        "US20170171165A1",
        "US20170169264A1",
        "US20170171747A1",
        "US20170171196A1",
        "US20170264626A1",
        "US9787710B1",
        "US20170342741A1",
        "US20170347264A1",
        "US20170351505A1",
        "US20170351504A1",
        "US20180013788A1",
        "US20180027006A1",
        "US9888337B1",
        "US20180048710A1",
        "US20180097788A1",
        "US20180097803A1",
        "US20180097840A1",
        "US10045217B2",
        "US20190190961A1",
        "US10454961B2",
        "US10516586B2"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US11363003B2",
        "US11516253B1"
    ],
    "citedby_ftf": [
        "US10666676B1",
        "US10362373B2",
        "US10454961B2",
        "US10841337B2",
        "WO2018160904A1",
        "US11032294B2",
        "US10536268B2",
        "US10735470B2",
        "US10594713B2",
        "US10666640B2",
        "US10805341B2",
        "US10824721B2",
        "CN108833360B",
        "US10785238B2",
        "US11003718B2",
        "US10897480B2",
        "US11584379B2",
        "US11370446B2",
        "CN109714343B",
        "US11455569B2",
        "US11475368B2",
        "US11669779B2",
        "US20230018188A1",
        "US11310268B2",
        "US11418524B2",
        "US11470046B2",
        "US11381589B2",
        "US11290475B2",
        "US11394733B2",
        "CN110995710B",
        "US11522877B2",
        "CN111277587A",
        "US11588834B2",
        "US11528294B2",
        "CN113067839B",
        "IT202100015782A1",
        "US20230075094A1",
        "CN114785567A",
        "KR102502475B1"
    ]
}