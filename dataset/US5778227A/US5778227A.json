{
    "patent_link": "https://patents.google.com/patent/US5778227A/en",
    "patent_id": "US5778227A",
    "title": "System for adding attributes to an object at run time in an object oriented computer environment",
    "abstract": "The system uses an intermediary process in an object oriented computer environment to allow application objects to perform operations such as creation, deletion and accessing of other objects. Typically the other objects are database objects. The intermediary process allows associations to be made between add-on attributes and primary objects. The primary objects are objects that are designed to be used by an original application. A later application that wishes to use the same objects as the original application, but with additional attributes, can create, delete and access the additional attributes at run time so that extra functionality is provided to a user of the original application program in an efficient manner.",
    "inventors": [
        "David A. Jordan"
    ],
    "assignee": "Intergraph Corp",
    "classifications": [
        "G06F9/4488",
        "Y10S707/99942",
        "Y10S707/99944"
    ],
    "claims": "\n1. A method for associating a property with an object in a computer system, wherein the computer system includes a processor coupled to a memory and a storage device, wherein the computer system includes objects, wherein an object includes one or more data members, wherein the computer system includes a definition of a class that specifies one or more class properties of an object, the method comprising the steps of:\ncompiling a definition of a first object as a first instance of the class, wherein the first object has the class properties specified in the class;\ncompiling a definition of a second object as a second instance of the class, wherein the second object has the class properties specified in the class;\ncompiling a definition of a third object, wherein the third object includes an added property that is not specified in the class;\nperforming the following steps subsequent to the compiling steps, above:\nusing the definition of a first object to create a first object;\nusing the definition of a second object to create a second object;\nusing the definition of a third object to create a third object;\nassociating the third object with the second object;\nexecuting instructions in a first application to access the first object and transfer information about the first object's class properties to the first application;\nexecuting instructions in the first application to access the second object and transfer information about the second object's class properties to the first application; and\nexecuting instructions in a second application to access the second object and transfer information about the added property of the third object associated with the second object to the second application.\n2. The method of claim 1, further comprising the steps of:\nremoving the association between the third object and the second object; and\nin response to the step of executing instructions in a second application, indicating to the second application that the added property is not available in association with the second object.\n3. The method of claim 1, further comprising the steps of:\nmodifying the added property; and\nsubsequent to the step of altering the added property, and in response to the step of executing instructions in a second application, providing information to the second application about the modifications to the added property.\n4. The method of claim 1, wherein a plurality of objects is associated with the third object so that any of the plurality of objects, when accessed by the second application, return information about the added property.\n5. The method of claim 1, wherein the computer system includes functionality specified in the object linking and embedding (OLE) system of Microsoft, Corp., the method further comprising the steps of:\ncreating a type library that includes information about the objects and the properties of the objects; and\nwherein the step of associating the third object with the first object does not cause the type library to be modified.\n6. The method of claim 1, wherein the added property is data.\n7. The method of claim 1, wherein the added property is a function.",
    "status": "Expired - Lifetime",
    "citations_own": [
        "EP0520924A2",
        "US5367671A",
        "US5432925A",
        "US5475817A",
        "US5600838A",
        "US5634128A",
        "US5659736A"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US5884097A",
        "US5920725A",
        "US5943496A",
        "US5950001A",
        "US5991534A",
        "US6044224A",
        "US6059838A",
        "US6101501A",
        "US6122685A",
        "US6122649A",
        "US6182278B1",
        "US6418444B1",
        "US6441837B1",
        "US20020133535A1",
        "US6477539B1",
        "US20020184344A1",
        "US6513157B1",
        "US20030110471A1",
        "US20030131069A1",
        "US6611954B1",
        "US20030177478A1",
        "US6832365B1",
        "US20050240945A1",
        "US20060009862A1",
        "US7058956B1",
        "US20060242655A1",
        "US7159185B1",
        "US20070005568A1",
        "US7284271B2",
        "US20090037895A1",
        "US20090259720A1",
        "US20090288062A1",
        "US20100077377A1",
        "USRE41706E1",
        "US8015542B1",
        "USRE43375E1",
        "CN1470984B",
        "US8850406B1",
        "US9262743B2",
        "US9460421B2",
        "US9886309B2"
    ],
    "citedby_ftf": [
        "EP0841612A3",
        "US6795968B1",
        "US6304879B1",
        "WO2000031628A1",
        "WO2000058864A1",
        "NL1011713C2",
        "US6473769B1",
        "GB2351370A",
        "US6634019B1",
        "US6973560B1",
        "AU6346200A",
        "US7685581B2",
        "US7559050B2",
        "US7120898B2",
        "US7707566B2",
        "US7305666B2",
        "US7788652B2",
        "DE102007055117A1",
        "DE102014016968A1",
        "DE102021005701A1",
        "DE102023000489A1"
    ]
}