{
    "patent_id": "US-11100153-B2",
    "title": "Dynamic process model optimization in domains ",
    "assignee": "Zuora, Inc.",
    "publication_date": "2021-08-24",
    "patent_link": "https://patents.google.com/patent/US11100153B2/en",
    "inventors": [
        "Sudipto Shankar Dasgupta",
        "Michael Reh"
    ],
    "classifications": [
        "G06F16/906",
        "G06F16/353",
        "G06F16/316",
        "G06F16/36",
        "G06N3/042",
        "G06N3/0427",
        "G06N3/044",
        "G06N3/0445",
        "G06N3/045",
        "G06N3/0454",
        "G06N3/08",
        "G06N3/084",
        "G06N5/02",
        "G06N5/025"
    ],
    "abstract": "A computing server may receive master data, transaction data, and one or more existing process models of a domain. The computing server may aggregate, based on domain knowledge ontology of the domain, the master data and the transaction data to generate a fact table. For example, entries in the fact table may be identified as relevant to the target process model and include attributes and facts that are extracted from master data or transaction data. The computing server may convert the entries in the fact table into vectors. The computing server inputting vectors into one or more machine learning algorithms to generate one or more algorithm outputs. One or more algorithm outputs may correspond to one or more improved process models that are optimized compared to the existing process models. The computing server may provide the improved process model to the domain to replace one of the existing process models.",
    "claims": "\n1. A computer-implemented method, comprising:\nreceiving master data, transaction data, and one or more existing process models of a domain;\naggregating, based on domain knowledge ontology of the domain, the master data and the transaction data to generate a fact table;\nconverting entries in the fact table into vectors;\ninputting the vectors into one or more machine learning algorithms to generate one or more algorithm outputs, at least one of the algorithm outputs corresponding to an improved process model, wherein inputting the vectors into the one or more machine learning algorithms to generate the one or more algorithm outputs comprises:\ninputting the vectors into a machine learning algorithm to generate one or more event sequences that comprise a plurality of events, and\nfiltering the event sequences based on a probability that one of the event sequences is associated with an optimization action; and\nproviding the improved process model to the domain to replace one of the existing process models.\n2. The computer-implemented method of claim 1, wherein aggregating, based on the domain knowledge ontology of the domain, the master data and the transaction data to generate the fact table comprises:\nderiving relationships of entities in the master data and the transaction data based on the domain knowledge ontology of the domain;\nconverting the relationships of the entities into serialization entries.\n3. The computer-implemented method of claim 2, wherein the serialization entries are in a resource description framework format.\n4. The computer-implemented method of claim 1, further comprising:\nenriching the improved process model with the domain knowledge ontology.\n5. The computer-implemented method of claim 1, wherein the master data and the transaction data are received from an enterprise resource planning application of the domain, and the improved process model is fed back to the enterprise resource planning application.\n6. The computer-implemented method of claim 1, wherein one or more improvements in the improved process model is generated based on one or more performance indicators.\n7. The computer-implemented method of claim 1, wherein the entries in the fact table are scaled by feature scaling prior to converting into the vectors.\n8. The computer-implemented method of claim 1, wherein the machine learning algorithm is one of: a convolutional neural network, a recurrent neural network, or a long short term memory network.\n9. The computer-implemented method of claim 1, wherein filtering the event sequences is based on a conditional random field.\n10. The computer-implemented method of claim 1, further comprising:\nreceiving a manual action that is inputted to improve one of the existing process models;\ninputting the manual action into the one or more machine learning algorithms.\n11. The computer-implemented method of claim 10, wherein receiving the manual action comprises:\ndisplaying at least one of the existing process models as a process map visualization that includes a series of events;\nreceiving a selection associated with one of the events from a user as the manual action.\n12. The computer-implemented method of claim 11, wherein the selection is a selection of a target performance indicator associated with the one of the events.\n13. The computer-implemented method of claim 1, further comprising:\nreceiving one or more human corrections to the improved process model; and\nadjusting the improved process model based on the one or more human corrections.\n14. The computer-implemented method of claim 13, wherein the human corrections are used to reinforce the one or more machine learning algorithms.\n15. A system comprising:\none or more processors; and\nmemory configured to store computer code comprising instructions, the instructions, when executed by the one or more processors, cause the one or more processor to:\nreceive master data, transaction data, and one or more existing process models of a domain;\naggregate, based on domain knowledge ontology of the domain, the master data and the transaction data to generate a fact table;\nconvert entries in the fact table into vectors;\ninput the vectors into one or more machine learning algorithms to generate one or more algorithm outputs, at least one of the algorithm outputs corresponding to an improved process model, wherein the instruction to input the vectors into the one or more machine learning algorithms to generate the one or more algorithm outputs comprises instructions to:\ninput the vectors into a machine learning algorithm to generate one or more event sequences that comprise a plurality of events, and\nfilter the event sequences based on a probability that one of the event sequences is associated with an optimization action; and\nprovide the improved process model to the domain to replace one of the existing process models.\n16. The system of claim 15, wherein the instructions, when executed, further cause the one or more processors to:\nenrich the improved process model with the domain knowledge ontology.\n17. The system of claim 15, wherein the master data and the transaction data are received from an enterprise resource planning application of the domain, and the improved process model is fed back to the enterprise resource planning application.\n18. A non-transitory computer readable medium for storing computer code comprising instructions, the instructions, when executed by one or more processors, cause the one or more processors to:\nreceive master data, transaction data, and one or more existing process models of a domain;\naggregate, based on domain knowledge ontology of the domain, the master data and the transaction data to generate a fact table;\nconvert entries in the fact table into vectors;\ninput the vectors into one or more machine learning algorithms to generate one or more algorithm outputs, at least one of the algorithm outputs corresponding to an improved process model, wherein the instruction to input the vectors into the one or more machine learning algorithms to generate the one or more algorithm outputs comprises instructions to:\ninput the vectors into a machine learning algorithm to generate one or more event sequences that comprise a plurality of events, and\nfilter the event sequences based on a probability that one of the event sequences is associated with an optimization action; and\nprovide the improved process model to the domain to replace one of the existing process models.\n19. The non-transitory computer readable medium of claim 18, wherein the master data and the transaction data are received from an enterprise resource planning application of the domain, and the improved process model is fed back to the enterprise resource planning application.",
    "status": "Active",
    "citations_own": [
        "US5182794A",
        "US5890133A",
        "US6763353B2",
        "US20040210552A1",
        "US7120896B2",
        "US7162458B1",
        "US7480640B1",
        "US20090281845A1",
        "US20110161333A1",
        "US8036907B2",
        "US8166013B2",
        "US20130096947A1",
        "US20130311446A1",
        "US8631048B1",
        "US20150058337A1",
        "US20150106078A1",
        "US20150296395A1",
        "US9176951B2",
        "US20160140236A1",
        "US20160247087A1",
        "US20160253364A1",
        "US20170109657A1",
        "US9672497B1",
        "US20180032861A1",
        "US20180137424A1",
        "US20180146000A1",
        "US20180219889A1",
        "US20180232443A1",
        "US20180253653A1",
        "US20180322283A1",
        "US10157347B1",
        "US10176245B2",
        "US20190018904A1",
        "US20190102430A1",
        "US10311442B1",
        "US20190303441A1",
        "US10607042B1",
        "US10851636B1",
        "US10877979B2"
    ],
    "citations_ftf": [
        "US20140058789A1",
        "US10438013B2",
        "US11087088B2",
        "US10592544B1"
    ],
    "citedby_own": [],
    "citedby_ftf": [
        "US10832680B2",
        "US10592544B1",
        "US11501186B2",
        "WO2020198319A1",
        "US20200279180A1",
        "US20210142233A1",
        "US11605137B2",
        "US20210073920A1",
        "US11321531B2",
        "US11403347B2",
        "WO2022003737A1",
        "US11631046B2",
        "US11620895B2",
        "US11327731B2",
        "CN112084416A",
        "CN112463377B",
        "US20220207229A1",
        "US20220214948A1",
        "US20220222495A1",
        "CN113220672A",
        "US20220358162A1",
        "US20220382614A1",
        "US20230035639A1",
        "EP4141648A1",
        "CN113793227B",
        "US20230195742A1",
        "CN114186690B",
        "CN114595686B"
    ]
}