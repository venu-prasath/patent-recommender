{
    "patent_id": "US-11599549-B2",
    "title": "Sampling-based preview mode for a data intake and query system ",
    "assignee": "Splunk Inc.",
    "publication_date": "2023-03-07",
    "patent_link": "https://patents.google.com/patent/US11599549B2/en",
    "inventors": [
        "Ram Sriharsha"
    ],
    "classifications": [
        "G06F16/901",
        "G06F16/144",
        "G06F16/156",
        "G06F16/168",
        "G06F16/2246",
        "G06F16/23",
        "G06F16/2379",
        "G06F16/242",
        "G06F16/24534",
        "G06F16/24568",
        "G06F16/2465",
        "G06F16/285",
        "G06F16/9032",
        "G06F17/16",
        "G06F17/18",
        "G06F18/2148",
        "G06F18/2185",
        "G06F9/3885",
        "G06F9/544",
        "G06K9/6257",
        "G06K9/6264",
        "G06N20/00",
        "G06N20/20",
        "G06F16/22",
        "G06F16/2264",
        "G06F16/2282",
        "G06N5/022",
        "G06N5/04",
        "G06N7/01"
    ],
    "abstract": "Systems and methods are described for providing a user interface through which a user can program operation of a data processing pipeline by specifying a graph of nodes that transform data and interconnections that designate routing of data between individual nodes within the graph. In response to a user request, a preview mode can be activated that causes the data processing pipeline to retrieve data from at least one source specified by the graph, transform the data according to the nodes of the graph, sample the transformed data, and display the sampling of the transformed data to at least one node without writing the transformed data to at least one destination specified by the graph.",
    "claims": "\n1. A method, comprising:\nproviding a user interface depicting a graph representing a data processing pipeline, wherein the graph comprises a first data processing node of the data processing pipeline interconnected with a machine learning model and a second data processing node of the data processing pipeline, wherein the second data processing node receives input data, transforms the input data into transformed data, and provides the transformed data as an input to the first data processing node, and wherein the first data processing node generates first data based on the transformed data provided as an input to the first data processing node;\nreceiving, via the user interface, a request to activate a preview mode in association with the machine learning model;\nobtaining the first data generated by the first data processing node;\napplying the first data as an input to the machine learning model to generate output data;\ndetermining that the output data comprises a first number of a first label type and a second number of a second label type;\nselecting a first subset of the first number of the first label type and a second subset of the second number of the second label type; and\ncausing the user interface to display a preview of the output data output by the machine learning model that comprises the first subset of the first number of the first label type and the second subset of the second number of the second label type.\n2. The method of claim 1, wherein causing the user interface to display a preview further comprises causing the user interface to display the preview without writing the output data to at least one destination specified by the graph.\n3. The method of claim 1, further comprising retrieving input data from at least one source specified by the graph in response to the request to activate the preview mode.\n4. The method of claim 1, wherein the first data comprises live data streamed from a source specified by the graph.\n5. The method of claim 1, further comprising:\nretrieving input data from at least one source specified by the graph in response to the request to activate the preview mode; and\ncausing the input data to be transformed according to the first data processing node to generate the first data.\n6. The method of claim 1, further comprising transmitting an abstract syntax tree (AST) of the data processing pipeline to an intake system, wherein the intake system produces an augmented AST by causing a function of the graph that writes to an external database to drop received data instead of writing the received data to the external database and by adding a preview node to the graph in association with the machine learning model.\n7. The method of claim 1, further comprising transmitting an abstract syntax tree (AST) of the data processing pipeline to an intake system, wherein the intake system produces an augmented AST by causing a function of the graph that writes to an external database to drop received data instead of writing the received data to the external database and by adding a preview node to the graph in association with the machine learning model, and wherein the intake system runs a job using the augmented AST that results in the first data being transmitted to the preview node.\n8. The method of claim 1, further comprising transmitting an abstract syntax tree (AST) of the data processing pipeline to an intake system, wherein the intake system produces an augmented AST by causing a function of the graph that writes to an external database to drop received data instead of writing the received data to the external database and by adding a preview node to the graph in association with the machine learning model, wherein the intake system runs a job using the augmented AST that results in the first data being transmitted to the preview node, and wherein applying the first data as an input to the machine learning model to generate output data further comprises applying, by the preview node, the first data as an input to the machine learning model to generate output data.\n9. The method of claim 1, wherein the first data comprises a stream of data items generated by the first data processing node in sequence, and wherein applying the first data as an input to the machine learning model further comprises applying, in sequence, each of the data items of the stream of data items as an input to the machine learning model to generate the output data.\n10. The method of claim 1, wherein the first data comprises a stream of data items generated by the first data processing node in sequence, wherein applying the first data as an input to the machine learning model further comprises, for each data item of the stream of data items, applying the respective data item as an input to the machine learning model to generate a portion of the output data, and wherein determining that the output data comprises a first number of a first label type and a second number of a second label type further comprises, for each data item of the stream of data items, determining that the portion of the output data generated using the respective data item corresponds to one of the first label type or the second label type after the portion of the output data is generated and before a subsequent portion of the output data is generated.\n11. The method of claim 1, wherein the first data comprises a stream of data items generated by the first data processing node in sequence, wherein applying the first data as an input to the machine learning model further comprises, for each data item of the stream of data items in sequence, applying the respective data item as an input to the machine learning model to generate a portion of the output data, and wherein determining that the output data comprises a first number of a first label type and a second number of a second label type further comprises:\nfor each data item of the stream of data items in sequence, determining that the portion of the output data generated using the respective data item corresponds to one of the first label type or the second label type after the portion of the output data is generated and before a subsequent portion of the output data is generated; and\nincrementing a count of one of the first label type or the second label type.\n12. The method of claim 1, wherein applying the first data as an input to the machine learning model to generate output data further comprises applying the first data as the input to the machine learning model for a first period of time.\n13. The method of claim 1, wherein applying the first data as an input to the machine learning model to generate output data further comprises applying the first data as the input to the machine learning model for a first period of time, and wherein the first data corresponds to a second period of time.\n14. The method of claim 1, wherein applying the first data as an input to the machine learning model to generate output data further comprises applying the first data as the input to the machine learning model for a first period of time, and wherein the first data corresponds to a second period of time greater than the first period of time.\n15. The method of claim 1, wherein the first data comprises a stream of data items generated by the first data processing node in sequence, wherein applying the first data as an input to the machine learning model to generate output data further comprises:\nfor each data item of the stream of data items in sequence, applying the respective data item as an input to the machine learning model to generate a portion of the output data; and\ndetermining, a first period of time after an initial portion of the output data is generated, that no portion of the output data corresponds to a third type of label.\n16. The method of claim 1, wherein the first data comprises a stream of data items generated by the first data processing node in sequence, wherein applying the first data as an input to the machine learning model to generate output data further comprises:\nfor each data item of the stream of data items in sequence, applying the respective data item as an input to the machine learning model to generate a portion of the output data;\ndetermining, a first period of time after an initial portion of the output data is generated, that no portion of the output data corresponds to a third type of label; and\nstopping application of the stream of data items as an input to the machine learning model.\n17. The method of claim 1, wherein the first data comprises a stream of data items generated by the first data processing node in sequence, wherein applying the first data as an input to the machine learning model to generate output data further comprises:\nfor each data item of the stream of data items in sequence, applying the respective data item as an input to the machine learning model to generate a portion of the output data; and\nstopping application of the stream of data items as an input to the machine learning model after a timeout period expires.\n18. The method of claim 1, wherein the first data comprises a stream of data items generated by the first data processing node in sequence, wherein applying the first data as an input to the machine learning model to generate output data further comprises:\nfor each data item of the stream of data items in sequence, applying the respective data item as an input to the machine learning model to generate a portion of the output data; and\nstopping application of the stream of data items as an input to the machine learning model after a timeout period expires, wherein the timeout period begins at a time that an initial portion of the output data is generated.\n19. The method of claim 1, wherein the first number is greater than the second number.\n20. The method of claim 1, wherein the first number is greater than the second number, and wherein a number of the first subset of the first number of the first label type equals a number of the second subset of the second number of the second label type.\n21. The method of claim 1, wherein selecting a first subset of the first number of the first label type and a second subset of the second number of the second label type further comprises selecting an equal number of the first label type and the second label type to form the first subset and the second subset.\n22. The method of claim 1, wherein selecting a first subset of the first number of the first label type and a second subset of the second number of the second label type further comprises downsampling the first number of the first label type and upsampling the second number of the second label type.\n23. The method of claim 1, wherein the output data is provided as an input to a third data processing node of the graph.\n24. The method of claim 1, wherein a first tab in a user interface depicts an interactive element that allows a user to request activation of the preview mode.\n25. The method of claim 1, wherein a first tab in a user interface depicts an interactive element that allows a user to request activation of the preview mode, and wherein the preview is displayed in a second tab in the user interface.\n26. The method of claim 1, wherein a first window in a user interface depicts an interactive element that allows a user to request activation of the preview mode, and wherein the preview is displayed in a second window in the user interface.\n27. The method of claim 1, wherein the first label type comprises a first type of event.\n28. A system, comprising:\none or more data stores including computer-executable instructions; and\none or more processors configured to execute the computer-executable instructions, wherein execution of the computer-executable instructions causes the system to:\nprovide a user interface depicting a graph representing a data processing pipeline, wherein the graph comprises a first data processing node of the data processing pipeline interconnected with a machine learning model and a second data processing node of the data processing pipeline, wherein the second data processing node receives input data, transforms the input data into transformed data, and provides the transformed data as an input to the first data processing node, and wherein the first data processing node generates first data based on the transformed data provided as an input to the first data processing node;\nreceive, via the user interface, a request to activate a preview mode in association with the machine learning model;\nobtain the first data generated by the first data processing node;\napply the first data as an input to the machine learning model to generate output data;\ndetermine that the output data comprises a first number of a first label type and a second number of a second label type;\nselect a first subset of the first number of the first label type and a second subset of the second number of the second label type; and\ncause the user interface to display a preview of the output data output by the machine learning model that comprises the first subset of the first number of the first label type and the second subset of the second number of the second label type.\n29. The system of claim 28, wherein execution of the computer-executable instructions further causes the system to cause the user interface to display the preview without writing the output data to at least one destination specified by the graph.\n30. A non-transitory computer-readable medium comprising instructions executable by a computing system to:\nprovide a user interface depicting a graph representing a data processing pipeline, wherein the graph comprises a first data processing node of the data processing pipeline interconnected with a machine learning model and a second data processing node of the data processing pipeline, wherein the second data processing node receives input data, transforms the input data into transformed data, and provides the transformed data as an input to the first data processing node, and wherein the first data processing node generates first data based on the transformed data provided as an input to the first data processing node;\nreceive, via the user interface, a request to activate a preview mode in association with the machine learning model;\nobtain the first data generated by the first data processing node;\napply the first data as an input to the machine learning model to generate output data;\ndetermine that the output data comprises a first number of a first label type and a second number of a second label type;\nselect a first subset of the first number of the first label type and a second subset of the second number of the second label type; and\ncause the user interface to display a preview of the output data output by the machine learning model that comprises the first subset of the first number of the first label type and the second subset of the second number of the second label type.",
    "status": "Active",
    "citations_own": [
        "US6714941B1",
        "US20050243366A1",
        "US7080046B1",
        "US20070156786A1",
        "US20110040733A1",
        "US7937344B2",
        "US20110267964A1",
        "US8112425B2",
        "US20130166188A1",
        "US8639650B1",
        "US8751529B2",
        "US8788525B2",
        "US20150280973A1",
        "US9215240B2",
        "US9286413B1",
        "US20160134694A1",
        "US20160203498A1",
        "US20160224600A1",
        "US20160350646A1",
        "EP3107026A1",
        "US20170063896A1",
        "US20170199902A1",
        "US9760240B2",
        "US20170353477A1",
        "US9843596B1",
        "US20180004948A1",
        "US20180089561A1",
        "US20180211176A1",
        "US20180219889A1",
        "US20180307576A1",
        "US10127258B2",
        "US20190034767A1",
        "WO2019043163A1",
        "US10235638B2",
        "US20190098106A1",
        "US20190163840A1",
        "US10367827B2",
        "US20190251457A1",
        "US10474680B2",
        "US10496817B1",
        "US20200004736A1",
        "US10536353B2",
        "US20200064818A1",
        "US20200183711A1",
        "US20200195656A1",
        "US20200210538A1",
        "US20200320769A1",
        "US20200349181A1",
        "US20200349469A1",
        "US20200409339A1",
        "US20210064624A1",
        "US20210081423A1",
        "US20210092161A1",
        "US20210089040A1",
        "US20210117415A1",
        "US20210117232A1",
        "US11087263B2",
        "US20210248146A1",
        "US11106734B1",
        "US20220036002A1",
        "US20220035775A1",
        "US20220036177A1",
        "US11269939B1",
        "US11288283B2",
        "US11294941B1",
        "US11388211B1"
    ],
    "citations_ftf": [
        "US7243110B2",
        "US9529974B2",
        "US8135580B1",
        "US8589375B2",
        "US8412696B2",
        "US8589403B2",
        "US9262519B1",
        "US8682925B1",
        "US9185007B2",
        "US8826434B2",
        "US11226975B2",
        "US10726030B2",
        "US10394803B2",
        "EP3520038A4",
        "JP7039179B2",
        "US11037033B2",
        "US20200097579A1",
        "US20200184272A1"
    ],
    "citedby_own": [
        "US11809492B2"
    ],
    "citedby_ftf": [
        "US10394946B2",
        "US8751963B1",
        "US8682906B1",
        "US20140208217A1",
        "US9753909B2",
        "US9152929B2",
        "WO2018130284A1",
        "US11605100B1",
        "JP7279368B2",
        "JP7163786B2",
        "US11379410B2",
        "US11620157B2",
        "US11615101B2",
        "US11442749B2",
        "US11726752B2",
        "US20210158260A1",
        "US11409516B2",
        "US11681708B2",
        "US10997179B1",
        "US11409546B2",
        "US10846106B1",
        "US11475364B2",
        "US20210286819A1",
        "US20210303793A1",
        "US11544158B1",
        "US11461346B2",
        "US11321340B1",
        "US11366810B2",
        "US20210365478A1",
        "US11449362B2",
        "US11582251B2",
        "US11281564B2",
        "US11641304B2",
        "US11704490B2",
        "US11663176B2",
        "US11651031B2",
        "US11568253B2",
        "US11775481B2",
        "US11336507B2",
        "US11763240B2",
        "US11720595B2",
        "CN114443701A",
        "US11444824B2",
        "US11755647B2",
        "US20220239577A1",
        "US11694533B2",
        "US20220237176A1",
        "US11687438B1",
        "US20220245036A1",
        "US20220414470A1",
        "US20230069958A1",
        "US20230004564A1",
        "US11663216B2",
        "US11681273B2",
        "US20230038977A1",
        "US11615147B2",
        "JP2023032843A",
        "US11301451B1",
        "US11726982B1",
        "US20230127193A1",
        "DE102021213207A1",
        "US11586878B1",
        "US11704173B1"
    ]
}