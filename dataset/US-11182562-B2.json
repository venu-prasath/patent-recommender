{
    "patent_id": "US-11182562-B2",
    "title": "Deep embedding for natural language content based on semantic dependencies ",
    "assignee": "International Business Machines Corporation",
    "publication_date": "2021-11-23",
    "patent_link": "https://patents.google.com/patent/US11182562B2/en",
    "inventors": [
        "Taesung Lee",
        "Youngja Park"
    ],
    "classifications": [
        "G06F40/30",
        "G06N5/022",
        "G06N3/04",
        "G06N3/044",
        "G06N3/0445",
        "G06N3/045",
        "G06N3/0454",
        "G06N3/08",
        "G06N5/04",
        "G06F40/20",
        "G06F40/279",
        "G06F40/289",
        "G06F40/295",
        "G10L15/1815",
        "G10L15/1822",
        "G10L15/183",
        "G10L15/19"
    ],
    "abstract": "Mechanisms are provided to perform embedding of content of a natural language document. The mechanisms receive a document data object of an electronic document and analyze a structure of the electronic document to identify one or more structural document elements that have a relationship with the document data object. A dependency data structure is generated, representing the electronic document, where edges define relationships between document elements and at least one edge represents at least one relationship between the one or more structural document elements and the document data object. The mechanisms embed the document data object based on the at least one relationship to thereby represent the document data object as a vector data structure. The mechanisms perform natural language processing on the portion of natural language content based on the vector data structure. The one or more structural document elements are non-local non-contiguous with the document data object.",
    "claims": "\n1. A method, in a data processing system comprising a processor and a memory, the memory comprising instructions that are executed by the processor to configure the processor to implement a natural language embedding engine, the method comprising:\nreceiving, by the natural language embedding engine executing on the processor, a document data object of an electronic document;\nanalyzing, by the natural language embedding engine, a structure of the electronic document to identify one or more structural document elements that have a relationship with the document data object, wherein analyzing the structure of the electronic document comprises applying a set of rules from a rules database representing dependencies within the electronic document and dependencies between the electronic document and an external knowledge source;\ngenerating, by the natural language embedding engine, a dependency data structure representing the electronic document, wherein edges in the dependency data structure define relationships between document elements, and wherein at least one edge is generated in the dependency data structure to represent at least one relationship between the one or more structural document elements and the document data object;\nexecuting, by the natural language embedding engine, an embedding operation on the document data object based on the at least one relationship in the dependency data structure to thereby represent the document data object as a vector data structure; and\nperforming, by a natural language processing engine executing in the data processing system, a natural language processing operation on the document data object based on the vector data structure, wherein the one or more structural document elements comprise one or more structural document elements that are non-local non-contiguous with the document data object.\n2. The method of claim 1, wherein the document data object is a non-natural language text data object representing an image, table, or other portion of non-textual content in the electronic document.\n3. The method of claim 1, wherein the document data object comprises a natural language sentence of the electronic document, and wherein the one or more structural document elements comprise at least one of a title of the electronic document or a section title of a section within the electronic document.\n4. The method of claim 1, wherein the document data object comprises an image or table in content of the electronic document, and wherein the at least one structural document element comprises a reference to the image or table.\n5. The method of claim 1, wherein the one or more structural document elements comprise at least one of:\na link to another electronic document, wherein the at least one edge representing at least one relationship between the one or more structural document elements and the document data object comprises an edge representing a relationship between content of the other electronic document, and the document data object, or\nan association of the document data object with data in an external knowledge base, wherein the at least one edge representing at least one relationship between the one or more structural document elements and the document data object comprises an edge representing a relationship between content of the external knowledge base, and the document data object.\n6. The method of claim 1, wherein generating the dependency data structure comprises:\ngenerating edges as a dependency tuple having a first tuple element identifying a dependent document element, a second tuple element representing a dependency relationship, and a third tuple element representing a document element which depends on the first tuple element; and\naggregating, for each document element in the electronic document, dependency tuples referencing the document element.\n7. The method of claim 1, wherein executing an embedding operation on the document data object based on the at least one relationship in the dependency data structure to thereby represent the document data object as a vector data structure comprises:\ninputting the document data object into a trained neural network comprising a plurality of embedding encoders and at least one embedding decoder;\nprocessing, by the plurality of embedding encoders, the document data object to generate an embedded document data object comprising the vector data structure, wherein each embedding encoder performs an encoding operation on the document data object with respect to a different type of structural document element; and\noutputting, by the neural network, the embedded document data object to the natural language processing engine.\n8. The method of claim 1, wherein the natural language processing operation comprises at least one of coreference resolution, paraphrase detection, word sense disambiguation, entity and event resolution, opinion mining, semantic relatedness, image-sentence ranking, image generation from text, story generation, subjectivity/objectivity classification, or question-type classification.\n9. The method of claim 1, wherein the set of rules identify extra-sentence dependencies.\n10. The method of claim 1, wherein the set of rules identify extra-document dependencies.\n11. The method of claim 10, wherein the extra-document dependencies include hyperlinks, citations to other documents, and entity references for which other background information is available from an external knowledge source.\n12. The method of claim 1, wherein the set of rules identify intra-document non-contiguous long distanced dependencies.\n13. The method of claim 12, wherein the intra-document non-contiguous long-distanced dependencies include titles, lists, intra-document references, non-non-contrastive conjunctions/conjunctive adverbs, parallel structures, and image/table references.\n14. A computer program product comprising a computer readable storage medium having a computer readable program stored therein, wherein the computer readable program, when executed in a data processing system, causes the data processing system to:\nreceive, by a natural language embedding engine executing in the data processing system, a document data object of an electronic document;\nanalyze, by the natural language embedding engine, a structure of the electronic document to identify one or more structural document elements that have a relationship with the document data object, wherein analyzing the structure of the electronic document comprises applying a set of rules from a rules database representing dependencies within the electronic document and dependencies between the electronic document and an external knowledge source;\ngenerate, by the natural language embedding engine, a dependency data structure representing the electronic document, wherein edges in the dependency data structure define relationships between document elements, and wherein at least one edge is generated in the dependency data structure to represent at least one relationship between the one or more structural document elements and the document data object;\nexecute, by the natural language embedding engine, an embedding operation on the document data object based on the at least one relationship in the dependency data structure to thereby represent the document data object as a vector data structure; and\nperform, by a natural language processing engine executing in the data processing system, a natural language processing operation on the document data object based on the vector data structure, wherein the one or more structural document elements comprise one or more structural document elements that are non-local non-contiguous with the document data object.\n15. The computer program product of claim 14, wherein the one or more structural document elements comprise at least one of:\na link to another electronic document, wherein the at least one edge representing at least one relationship between the one or more structural document elements and the document data object comprises an edge representing a relationship between content of the other electronic document, and the document data object, or\nan association of the document data object with data in an external knowledge base, wherein the at least one edge representing at least one relationship between the one or more structural document elements and the document data object comprises an edge representing a relationship between content of the external knowledge base, and the document data object.\n16. The computer program product of claim 14, wherein generating the dependency data structure comprises:\ngenerating edges as a dependency tuple having a first tuple element identifying a dependent document element, a second tuple element representing a dependency relationship, and a third tuple element representing a document element which depends on the first tuple element; and\naggregating, for each document element in the electronic document, dependency tuples referencing the document element.\n17. The computer program product of claim 14, wherein executing an embedding operation on the document data object based on the at least one relationship in the dependency data structure to thereby represent the document data object as a vector data structure comprises:\ninputting the document data object into a trained neural network comprising a plurality of embedding encoders and at least one embedding decoder;\nprocessing, by the plurality of embedding encoders, the document data object to generate an embedded document data object comprising the vector data structure, wherein each embedding encoder performs an encoding operation on the document data object with respect to a different type of structural document element; and\noutputting, by the neural network, the embedded document data object to the natural language processing engine.\n18. The computer program product of claim 14, wherein the natural language processing operation comprises at least one of coreference resolution, paraphrase detection, word sense disambiguation, entity and event resolution, opinion mining, semantic relatedness, image-sentence ranking, image generation from text, story generation, subjectivity/objectivity classification, or question-type classification.\n19. An apparatus comprising:\nat least one processor; and\nat least one memory coupled to the at least one processor, wherein the at least one memory comprises instructions which, when executed by one or more processors of the at least one processor, causes the one or more processors to:\nreceive, by a natural language embedding engine executing on the one or more processors, a document data object of an electronic document;\nanalyze, by the natural language embedding engine, a structure of the electronic document to identify one or more structural document elements that have a relationship with the document data object, wherein analyzing the structure of the electronic document comprises applying a set of rules from a rules database representing dependencies within the electronic document and dependencies between the electronic document and an external knowledge source;\ngenerate, by the natural language embedding engine, a dependency data structure representing the electronic document, wherein edges in the dependency data structure define relationships between document elements, and wherein at least one edge is generated in the dependency data structure to represent at least one relationship between the one or more structural document elements and the document data object;\nexecute, by the natural language embedding engine, an embedding operation on the document data object based on the at least one relationship in the dependency data structure to thereby represent the document data object as a vector data structure; and\nperform, by a natural language processing engine executing on one or more of the processors, a natural language processing operation on the document data object based on the vector data structure, wherein the one or more structural document elements comprise one or more structural document elements that are non-local non-contiguous with the document data object.\n20. The apparatus of claim 19, wherein the natural language processing operation comprises at least one of coreference resolution, paraphrase detection, word sense disambiguation, entity and event resolution, opinion mining, semantic relatedness, image-sentence ranking, image generation from text, story generation, subjectivity/objectivity classification, or question-type classification."
}