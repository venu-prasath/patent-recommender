{
    "patent_link": "https://patents.google.com/patent/US20040250255A1/en",
    "patent_id": "US20040250255A1",
    "title": "Analytical application framework",
    "abstract": "One implementation provides a computer system that integrates software applications with analytical software applications. In this implementation, the computer system is programmed to receive a request from a software application to execute an analytical task, such as a prediction task or a key performance indicator (KPI) lookup task. The request includes a task name and input information. The computer system then uses the task name to identify an analytical engine and a data store, and invokes an analytical software application in the analytical engine to execute the analytical task. The analytical task is executed using the identified data store and the received input information. The computer system receives task output from the invoked analytical software application, the task output including output information generated during execution of the analytical task. The computer system then sends the output information to the software application that made the request.",
    "inventors": [
        "Achim Kraiss",
        "Jens Weidner",
        "Marcus Dill",
        "Sven Gilg",
        "Harish Mahabal",
        "Dipankar Roy",
        "Vikas Bhan",
        "Manikandan V",
        "Girish Kulkarni",
        "Ramine Eskandari"
    ],
    "assignee": "SAP SE",
    "classifications": [
        "G06F9/445",
        "G06F16/258",
        "Y10S707/99942"
    ],
    "claims": "\n1. A computer system that integrates software applications with analytical software applications, the computer system programmed to:\nreceive a request from a software application to execute an analytical task, the request including a task name and input information;\nuse the task name to identify an analytical engine and a data store;\ninvoke an analytical software application in the analytical engine to execute the analytical task, wherein the analytical task is executed using the identified data store and the received input information;\nreceive task output from the invoked analytical software application, the task output including output information generated during execution of the analytical task; and\nsend the output information to the software application that made the request.\n2. The computer system of claim 1, wherein the computer system is further programmed to translate one or more values of the output information into one or more translated output values that are sent to the software application.\n3. The computer system of claim 1, wherein the analytical task is a prediction task, wherein the analytical engine is a prediction server, wherein the data store comprises a data mining model, and wherein the analytical software application is a prediction application.\n4. The computer system of claim 3, wherein the computer system is further programmed to translate one or more values of the input information into one or more translated input values for use with the data mining model during execution of the prediction task.\n5. The computer system of claim 3, wherein the data mining model is represented using the Predictive Modeling Markup Language (PMML).\n6. The computer system of claim 1, wherein the analytical task is a key performance indicator (KPI) lookup task, wherein the analytical engine is a KPI server, wherein the data store comprises a KPI-set, and wherein the analytical software application is a KPI-lookup application.\n7. The computer system of claim 6, wherein the computer system is further programmed to translate one or more values of the input information into one or more translated input values for use with the KPI-set during execution of the KPI-lookup task.\n8. The computer system of claim 1, wherein the computer system is programmed to:\nreceive the request from the software application through a business rule engine; and\nsend the output information to the software application through the business rule engine.\n9. The computer system of claim 1, wherein the analytical engine is located externally from the computer system.\n10. The computer system of claim 1, wherein the data store is located externally from the computer system.\n11. A computer-implemented method for integrating software applications with analytical software applications, the method comprising:\nreceiving a request from a software application to execute an analytical task, the request including a task name and input information;\nusing the task name to identify an analytical engine and a data store;\ninvoking an analytical software application in the analytical engine to execute the analytical task, wherein the analytical task is executed using the identified data store and the received input information;\nreceiving task output from the invoked analytical software application, the task output including output information generated during execution of the analytical task; and\nsending the output information to the software application that made the request.\n12. The computer-implemented method of claim 11, wherein the method further comprises:\ntranslating one or more values of the output information into one or more translated output values that are sent to the software application.\n13. The computer-implemented method of claim 11, wherein the analytical task is a prediction task, wherein the analytical engine is a prediction server, wherein the data store comprises a data mining model, and wherein the analytical software application is a prediction application.\n14. The computer-implemented method of claim 13, wherein the method further comprises:\ntranslating one or more values of the input information into one or more translated input values for use with the data mining model during execution of the prediction task.\n15. The computer-implemented method of claim 13, wherein the data mining model is represented using the Predictive Modeling Markup Language (PMML).\n16. The computer-implemented method of claim 11, wherein the analytical task is a key performance indicator (KPI) lookup task, wherein the analytical engine is a KPI server, wherein the data store comprises a KPI-set, and wherein the analytical software application is a KPI-lookup application.\n17. The computer-implemented method of claim 16, wherein the method further comprises:\ntranslating one or more values of the input information into one or more translated input values for use with the KPI-set during execution of the KPI-lookup task.\n18. The computer-implemented method of claim 11, wherein:\nreceiving the request from the software application includes receiving the request from the software application through a business rule engine; and\nsending the output information to the software application includes sending the output information to the software application through the business rule engine.\n19. A computer-implemented method for defining an analytical task, the method comprising:\nproviding analytical engine information to identify a specific analytical engine capable of executing the analytical task;\nproviding data store information to identify a specific data store capable of being used when executing the analytical task;\nproviding input information capable of being used when executing the analytical task; and\ncombining the analytical engine information, data store information, and input information into a definition of the analytical task.\n20. The computer-implemented method of claim 19, wherein the method further comprises:\nproviding an input mapping function capable of translating one or more values of the input information into one or more translated input values for use with the specific data store during execution of the analytical task; and\nadding the input mapping function to the definition of the analytical task.\n21. The computer-implemented method of claim 20, wherein the method further comprises:\nproviding an output mapping function capable of translating one or more values of output information generated upon execution of the analytical task into one or more translated output values for use by a front-end application; and\nadding the output mapping function to the definition of the analytical task.\n22. The computer-implemented method of claim 19, wherein the analytical engine information is prediction server information, and wherein the data store information comprises data mining model information.\n23. The computer-implemented method of claim 19, wherein the analytical engine information is key performance indicator (KPI) server information, and wherein the data store information comprises KPI-set information.\n24. A computer-readable medium having computer-executable instructions contained therein for performing a method, the method comprising:\nreceiving a request from a software application to execute an analytical task, the request including a task name and input information;\nusing the task name to identify an analytical engine and a data store;\ninvoking an analytical software application in the analytical engine to execute the analytical task, wherein the analytical task is executed using the identified data store and the received input information;\nreceiving task output from the invoked analytical software application, the task output including output information generated during execution of the analytical task; and\nsending the output information to the software application that made the request.",
    "status": "Active",
    "citations_own": [
        "US652872A",
        "US664771A",
        "US665249A",
        "US5317722A",
        "US5603027A",
        "US5974428A",
        "US6216137B1",
        "US6240411B1",
        "US20020051063A1",
        "US20020078039A1",
        "US6460037B1",
        "US6470333B1",
        "US20030043815A1",
        "US20030220860A1",
        "US20040098358A1",
        "US6778971B1",
        "US6782390B2",
        "US6820073B1",
        "US6842751B1",
        "US6920458B1",
        "US6941301B2",
        "US6941318B1",
        "US6954758B1",
        "US7024417B1"
    ],
    "citations_ftf": [
        "AU2002317119A1",
        "WO2003037018A1"
    ],
    "citedby_own": [
        "US20060010258A1",
        "US20060010110A1",
        "US20060212791A1",
        "US20070094185A1",
        "US20070106496A1",
        "US20070106495A1",
        "US20070124263A1",
        "US20070130134A1",
        "US20070130186A1",
        "US20070130124A1",
        "US20070203869A1",
        "US20070209013A1",
        "US20080115103A1",
        "US7462849B2",
        "US20090083700A1",
        "US20110066551A1",
        "US9031889B1",
        "US9230211B1",
        "WO2017024242A1",
        "CN109240740A",
        "US20200097616A1"
    ],
    "citedby_ftf": [
        "US11087261B1",
        "US8364519B1",
        "US8209218B1",
        "US8401993B2",
        "US10127299B2",
        "US10242406B2",
        "US9678487B1",
        "US10860931B1",
        "US10641921B1",
        "US9785731B1",
        "US10095926B1"
    ]
}