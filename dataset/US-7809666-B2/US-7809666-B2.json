{
    "patent_id": "US-7809666-B2",
    "title": "Method and system for sequential compilation and execution of rules ",
    "assignee": "International Business Machines Corporation",
    "publication_date": "2010-10-05",
    "patent_link": "https://patents.google.com/patent/US7809666B2/en",
    "inventors": [
        "Hugues Citeau"
    ],
    "classifications": [],
    "abstract": "Systems and methods for matching objects against a set of rules are described. The present invention is a novel rule execution algorithm that generally operates with greater efficiency than known algorithms. The algorithm uses a test analyzer to determine the relationships that exist between pairs of tests within a ruleset. Each rule is then translated into loops and tests, and merged into a unified series of loops and tests using the output of the test analyzer. The algorithm then generates pattern matching code corresponding to the unified series of loops and tests for evaluation by a virtual machine, and auxiliary code that provides object manipulations and rule actions at the service of the pattern matching code. In its runtime, the algorithm loads objects into the pattern matching code through an access interface. The pattern matching code is then executed by the virtual machine against the loaded objects.",
    "claims": "\n1. A method, within a computer hardware system, for processing a ruleset,\nthe ruleset including a plurality of rules,\neach individual rule of the plurality of rules including a condition and a rule action responsive to the condition being met,\neach condition within an individual rule including a plurality of tests,\nthe method comprising:\nidentifying a plurality of relationships, each identified relationship is between a plurality of tests respectively associated with different conditions;\ntranslating, by the computer hardware system, each individual rule of the plurality of rules into a coded series of one or more loops and tests; and\nunifying, by the computer hardware system, the loops and the test from each individual rule of the plurality of rules into a unified series of loops and tests for the ruleset, wherein\nthe unifying based upon the identified plurality of relationships.\n2. The method of claim 1, wherein\none of the identified plurality of relationships is a disjoint.\n3. The method of claim 2, wherein\nthe plurality of tests respectively associated with the disjoint relationship are unified into a switch test.\n4. The method of claim 1, further comprising\ntranslating the unified series of loops and tests into a pattern matching code for the ruleset; and\nevaluating an object set using the pattern matching code for the ruleset.\n5. The method of claim 4, further comprising\ngenerating auxiliary code, distinct from the pattern matching code, including coded object manipulations and rule actions; and\nperforming the object manipulations and the rule actions on an object in the object set using the auxiliary code.\n6. The method of claim 1, wherein\neach identified relationship having a type selected from the group consisting of equality, complement, subsumption, disjoint, and unrelated.\n7. A computer hardware system for processing a ruleset,\nthe ruleset including a plurality of rules,\neach individual rule of the plurality of rules including a condition and a rule action responsive to the condition being met,\neach condition within an individual rule including a plurality of tests,\nthe computer hardware system comprising:\na memory;\nat least one processor connected to the memory, the at least one processor configured to perform\nidentifying a plurality of relationships, each identified relationship is between a plurality of tests respectively associated with different conditions;\ntranslating each individual rule of the plurality of rules into a coded series of one or more loops and tests; and\nunifying the loops and the test from each individual rule of the plurality of rules into a unified series of loops and tests for the ruleset, wherein\nthe unifying based upon the identified plurality of relationships.\n8. The method of claim 7, wherein\none of the identified plurality of relationships is a disjoint.\n9. The method of claim 8, wherein\nthe plurality of tests respectively associated with the disjoint relationship are unified into a switch test.\n10. The computer hardware system of claim 7, wherein\nthe at least one processor is further configured to perform\ntranslating the unified series of loops and tests into a pattern matching code for the ruleset; and\nevaluating an object set using the pattern matching code for the ruleset.\n11. The computer hardware system of claim 10, wherein\nthe at least one processor is further configured to perform\ngenerating auxiliary code, distinct from the pattern matching code, including coded object manipulations and rule actions; and\nperforming the object manipulations and the rule actions on an object in the object set using the auxiliary code.\n12. The computer hardware system of claim 7, wherein\neach identified relationship having a type selected from the group consisting of equality, complement, subsumption, disjoint, and unrelated.\n13. A computer-readable storage medium having stored therein computer usable program code for processing a ruleset,\nthe ruleset including a plurality of rules,\neach individual rule of the plurality of rules including a condition and a rule action responsive to the condition being met,\neach condition within an individual rule including a plurality of tests,\nthe computer usable program code, upon being executed by a computer hardware system, causing the computer hardware system to perform\nidentifying a plurality of relationships, each identified relationship is between a plurality of tests respectively associated with different conditions;\ntranslating each individual rule of the plurality of rules into a coded series of one or more loops and tests; and\nunifying the loops and the test from each individual rule of the plurality of rules into a unified series of loops and tests for the ruleset, wherein\nthe unifying based upon the identified plurality of relationships.\n14. The computer-readable storage medium of claim 13, wherein\none of the identified plurality of relationships is a disjoint.\n15. The computer-readable storage medium of claim 14, wherein\nthe plurality of tests respectively associated with the disjoint relationship are unified into a switch test.\n16. The computer-readable storage medium of claim 13, further comprising\ntranslating the unified series of loops and tests into a pattern matching code for the ruleset; and\nevaluating an object set using the pattern matching code for the ruleset.\n17. The computer-readable storage medium of claim 16, further comprising\ngenerating auxiliary code, distinct from the pattern matching code, including coded object manipulations and rule actions; and\nperforming the object manipulations and the rule actions on an object in the object set using the auxiliary code.\n18. The computer-readable storage medium of claim 13, wherein\neach identified relationship having a type selected from the group consisting of equality, complement, subsumption, disjoint, and unrelated."
}