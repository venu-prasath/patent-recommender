{
    "patent_link": "https://patents.google.com/patent/US5218646A/en",
    "patent_id": "US5218646A",
    "title": "Classification procedure implemented in a hierarchical neural network, and hierarchical neural network",
    "abstract": "Classification procedure implemented in a tree-like neural network which, in the course of learning steps, determines with the aid of a tree-like structure the number of neurons and their synaptic coefficients required for the processing of problems of classification of multi-class examples. Each neuron tends to distinguish, from the examples, two groups of examples approximating as well as possible to a division into two predetermined groups of classes. This division can be obtained through a principal component analysis of the distribution of examples. The neural network comprises a directory of addresses of successor neurons which is loaded in learning mode then read in exploitation mode. A memory stores example classes associated with the ends of the branches of the tree.",
    "inventors": [
        "Jacques-Ariel Sirat",
        "Jean-Pierre Nadal"
    ],
    "assignee": "US Philips Corp",
    "classifications": [
        "G06N3/04",
        "G06F18/24137",
        "G06F18/24323"
    ],
    "claims": "\n1. A method of classifying a group of non-homogenous data into K homogenous classes implemented in a neural network device including at least one processing element, having a classification coefficient, comprising the steps of:\na) dividing said group of non-homogeneous data into two subgroups of data;\nb) generating a classification coefficient for said processing element to divide said group of non-homogeneous data in accordance with said two subgroups of data;\nc) testing the homogeneity of each of said two subgroups to determine if each subgroup contains only a single class;\nd) storing a location of said processing element and recording said homogeneous class of said group of data when said processing element distinguishes said single class;\ne) if said subgroup is non-homogeneous, dividing said homogeneous subgroup into two further subgroups by performing step a) and generating a second processing element for each non-homogeneous subgroup; and\nf) repeating steps a)-d) until said further subgroups of data are classified by each of said successive processing elements correspond to a homogeneous class.\n2. The method of claim 1, wherein K is greater than 2.\n3. The method of claim 1, wherein one of said subgroups contains only a single particular class.\n4. The method of claim 2, further including the step of generating an error criterion for each of said K classes and wherein said single particular class has said smallest error criterion.\n5. The method of claim 3, wherein the step of dividing is performed by a layered neural network.\n6. The method of claim 1, wherein said the step of dividing includes dividing said group of nonhomogeneous data relative to an axis passing through a center of gravity of a distribution of said group of nonhomogeneous data perpendicular to a principal direction, said center of gravity and said principal direction being determined by a principal component analysis.\n7. The method of claim 4, wherein the step of generating a classification coefficient includes determining an initial classification coefficient from a layered neural network by selecting said classification coefficient which best separates a class in accordance with said particular single class.\n8. The method of claim 1, wherein the step of generating includes implementing one of a Pocket algorithm, a perceptron-type learning rule and a Hebb-type learning rule.\n9. A neural network device for classifying a group of non-homogeneous data into three homogeneous classes, comprising:\nan input for receiving said non-homogeneous data;\na first processing element layer including a processing element connected to said input, said processing element utilizing a classification coefficient for separating said group of nonhomogeneous data into two subgroups, one of said groups including data belonging to one homogenous class, another of said groups including non-homogeneous data;\na second processing element layer connected to said processing element in said first processing element layer, said second processing element for receiving said subgroups and separating said subgroup of nonhomgeneous data into two homogeneous classes; and\nmeans for validating whether said output of each of said processing elements is a homogeneous class.",
    "status": "Expired - Fee Related",
    "citations_own": [],
    "citations_ftf": [],
    "citedby_own": [],
    "citedby_ftf": []
}