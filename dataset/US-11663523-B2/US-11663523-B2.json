{
    "patent_id": "US-11663523-B2",
    "title": "Machine learning (ML) infrastructure techniques ",
    "assignee": "Oracle International Corporation",
    "publication_date": "2023-05-30",
    "patent_link": "https://patents.google.com/patent/US11663523B2/en",
    "inventors": [
        "Alberto Polleri",
        "Sergio Aldea Lopez",
        "Marc Michiel Bron",
        "Dan David Golding",
        "Alexander Ioannides",
        "Maria del Rosario Mestre",
        "Hugo Alexandre Pereira Monteiro",
        "Oleg Gennadievich Shevelev",
        "Larissa Cristina Dos Santos Romualdo Suzuki",
        "Xiaoxue Zhao",
        "Matthew Charles Rowe"
    ],
    "classifications": [
        "G06N20/00",
        "G06F16/90332",
        "G06F16/3329",
        "G06F18/23213",
        "G06F18/24",
        "G06F8/30",
        "G06F8/41",
        "G06F9/541",
        "G06N3/08",
        "G06N3/105",
        "G06N5/022",
        "G10L17/22",
        "G06F8/75",
        "G06N20/10",
        "G06N20/20",
        "G06N5/01",
        "G06N7/01"
    ],
    "abstract": "The present disclosure relates to systems and methods for a machine learning platform that generates a library of components to generate machine learning models and machine learning applications. The machine learning infrastructure system allows a user (i.e., a data scientist) to generate machine learning applications without having detailed knowledge of the cloud-based network infrastructure or knowledge of how to generate code for building the model. The machine learning platform can analyze the identified data and the user provided desired prediction and performance characteristics to select one or more library components and associated API to generate a machine learning application. The machine learning can monitor and evaluate the outputs of the machine learning model to allow for feedbacks and adjustments to the model. The machine learning application can be trained, tested, and compiled for export as stand-alone executable code.",
    "claims": "\n1. A method for automatically creating a machine learning application bespoke to a hardware platform for use in a production environment, the method comprising:\nreceiving a first input, wherein the first input identifies a location of data that is used for creating the machine learning application;\nreceiving a second input, wherein the second input identifies a problem to generate a solution using the machine learning application;\nreceiving a third input, wherein the third input identifies one or more requirements for the machine learning application in generating the solution, wherein the requirements are a plurality metrics;\ndetermining one or more components from a library to use for generating a machine learning model to prototype the machine learning application to comply with the one or more requirements, wherein the one or more components from the library perform production functions, wherein the determining the one or more components comprises:\nidentifying one or more characteristics of the solution for the machine learning application; and\nidentifying the one or more components based at least in part on correlating the one or more characteristics with metadata of the one or more components;\nidentifying one or more application programming interfaces stored in the library, wherein the application programming interfaces link the one or more components to form the machine learning application;\nstoring the machine learning application in a memory;\ntesting the machine learning application according to the requirements; and\nbased on the machine learning application meeting the requirements, compiling a machine learning function for the hardware platform for use in the production environment.\n2. The method of claim 1, wherein the machine learning application is customized for each infrastructure hardware layer by selection of the components from the library.\n3. The method of claim 1, further comprising selecting from a plurality of pipelines for the machine learning model using machine learning to match the requirements to automatically weigh and customize a selected pipeline.\n4. The method of claim 1, wherein the requirements comprise at least one of quality of service (QoS) metrics, key performance indicator (KPI), inference query metrics, performance metrics, sentiment metrics, and testing metrics.\n5. The method of claim 1, wherein the requirements comprise at least one of training, power, maintainability, modularity, and reusability metrics.\n6. The method of claim 1, wherein the components from the library comprise at least one of application programming interfaces, pipelines, workflows, micro-services, software modules, and infrastructure modules.\n7. The method of claim 1, wherein the production functions comprise at least one of load balancing, fail-over caching, security, test capability, audit function, scalability, predicted performance, training models, predicted power, maintenance, debug function, and reusability.\n8. A non-transitory machine-readable storage medium storing a plurality of instructions configured to cause a data processing apparatus to perform operations for automatically creating a machine learning application bespoke to a hardware platform for use in a production environment, the operations comprising:\nreceiving a first input, wherein the first input identifies a location of data that is used for creating on the machine learning application;\nreceiving a second input, wherein the second input identifies a problem to generate a solution using the machine learning application;\nreceiving a third input, wherein the third input identifies one or more requirements for the machine learning application in generating the solution, wherein the requirements are a plurality metrics;\ndetermining one or more components from a library to use for generating a machine learning model to prototype the machine learning application to comply with the one or more requirements, wherein the one or more components from the library perform production functions, wherein the determining the one or more components comprises:\nidentifying one or more characteristics of the solution for the machine learning application; and\nidentifying the one or more components based at least in part on correlating the one or more characteristics with metadata of the one or more components;\nidentifying one or more application programming interfaces stored in the library, wherein the application programming interfaces link the one or more components to form the machine learning application;\nstoring the machine learning application in a memory;\ntesting the machine learning application according to the requirements; and\nbased on the machine learning application meeting the requirements, compiling a machine learning function for the hardware platform for use in the production environment.\n9. The non-transitory machine-readable storage medium of claim 8, wherein the machine learning application is customized for each infrastructure hardware layer by selection of the components from the library.\n10. The non-transitory machine-readable storage medium of claim 8, including instructions configured to cause the data processing apparatus to perform further operations comprising selecting from a plurality of pipelines for the machine learning model using machine learning to match the requirements to automatically weigh and customize a selected pipeline.\n11. The non-transitory machine-readable storage medium of claim 8, wherein the requirements comprise at least one of quality of service (QoS) metrics, key performance indicator (KPI), inference query metrics, performance metrics, sentiment metrics, and testing metrics.\n12. The non-transitory machine-readable storage medium of claim 8, wherein the requirements comprise at least one of training, power, maintainability, modularity, and reusability metrics.\n13. The non-transitory machine-readable storage medium of claim 8, wherein the components from the library comprise at least one of pipelines, workflows, micro-services, software modules, and infrastructure modules.\n14. The non-transitory machine-readable storage medium of claim 8, wherein the production functions comprise at least one of load balancing, fail-over caching, security, test capability, audit function, scalability, predicted performance, training models, predicted power, maintenance, debug function, and reusability.\n15. A system for automatically creating a machine learning application for use in a production environment, comprising:\none or more data processors; and\na non-transitory computer-readable storage medium containing instructions which, when executed on the one or more data processors, cause the one or more data processors to perform operations comprising:\nreceiving a first input, wherein the first input identifies a location of data that is used for creating on the machine learning application;\nreceiving a second input, wherein the second input identifies a problem to generate a solution using the machine learning application;\nreceiving a third input, wherein the third input identifies one or more requirements for the machine learning application in generating the solution, wherein the requirements are a plurality metrics;\ndetermining one or more components from a library to use for generating a machine learning model to prototype the machine learning application to comply with the one or more requirements, wherein the one or more components from the library perform production functions, wherein the determining the one or more components comprises:\nidentifying one or more characteristics of the solution for the machine learning application; and\nidentifying the one or more components based at least in part on correlating the one or more characteristics with metadata of the one or more components;\nidentifying one or more application programming interfaces stored in the library, wherein the application programming interfaces link the one or more components to form the machine learning application;\nstoring the machine learning application in a memory;\ntesting the machine learning application according to the requirements; and\nbased on the machine learning application meeting the requirements, compiling a machine learning function for a hardware platform for use in the production environment.\n16. The system of claim 15, wherein the machine learning application is customized for each infrastructure hardware layer by selection of the components from the library.\n17. The system of claim 15, wherein the non-transitory computer-readable storage medium includes further instructions which, when executed on the one or more data processors, cause the one or more data processors to perform further operations comprising selecting from a plurality of pipelines for the machine learning model using machine learning to match the requirements to automatically weight and customize a selected pipeline.",
    "status": "Active",
    "citations_own": [
        "US5343527A",
        "US5699507A",
        "US20040006761A1",
        "US20050102227A1",
        "US20070043734A1",
        "US20070239630A1",
        "US20090144698A1",
        "CN101782976A",
        "US20110099532A1",
        "US20140180738A1",
        "US20150170053A1",
        "US20160055426A1",
        "US9306738B2",
        "US20160110657A1",
        "US20160179063A1",
        "US9384450B1",
        "US20160358099A1",
        "US20170061021A1",
        "US20170277693A1",
        "US20180052824A1",
        "US20180089593A1",
        "WO2018111270A1",
        "US20180222776A1",
        "US20180314936A1",
        "US20180314250A1",
        "US20180314926A1",
        "US20180322403A1",
        "US20180322365A1",
        "US20180322387A1",
        "WO2018217635A1",
        "US20180349499A1",
        "US20180349447A1",
        "US10198399B1",
        "US20190108417A1",
        "US20190163758A1",
        "US20190228261A1",
        "US20190279114A1",
        "US10417577B2",
        "US20190317805A1",
        "US20190334716A1",
        "WO2019236894A1",
        "US20200081899A1",
        "US20200333772A1",
        "US20200410011A1",
        "US20210133670A1",
        "US11238377B2"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US20220214948A1"
    ],
    "citedby_ftf": [
        "US11521132B2",
        "US11475374B2",
        "KR102111002B1",
        "US11593608B2",
        "US11397591B2",
        "US11762937B2",
        "US11727284B2",
        "US11423305B2",
        "US11462220B2",
        "US11580455B2",
        "EP3907672A1",
        "US11438406B2",
        "US11620575B2",
        "US20220035990A1",
        "CN113010181B",
        "US11422850B1",
        "US20220366901A1",
        "US20220366331A1",
        "CN113255765A",
        "US11599242B2",
        "WO2022263005A1",
        "US20230023645A1",
        "US20230053820A1",
        "US11397808B1",
        "CN115904359A",
        "US20230140553A1",
        "WO2023105262A1",
        "CN114186697B",
        "CN114201154B",
        "WO2023111627A1",
        "US20230236813A1",
        "WO2023187663A1",
        "CN115114495B",
        "CN116011657B",
        "CN116431355B"
    ]
}