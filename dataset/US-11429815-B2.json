{
    "patent_id": "US-11429815-B2",
    "title": "Methods, systems, and media for deep neural network interpretation via rule extraction ",
    "assignee": "Huawei Cloud Computing Technologies Co., Ltd.",
    "publication_date": "2022-08-30",
    "patent_link": "https://patents.google.com/patent/US11429815B2/en",
    "inventors": [
        "Cho Ho LAM",
        "Lingyang CHU",
        "Yong Zhang",
        "Lanjun Wang"
    ],
    "classifications": [
        "G06K9/6262",
        "G06F18/217",
        "G06N5/025",
        "G06F18/2411",
        "G06K9/6269",
        "G06N20/00",
        "G06N3/045",
        "G06N3/08",
        "G06N3/084",
        "G06N5/045",
        "G06V10/454",
        "G06V10/82"
    ],
    "abstract": "Methods, systems and media for deep neural network interpretation via rule extraction. The interpretation of the deep neural network is based on extracting one or more rules approximating classification behavior of the network. Rules are defined by identifying a set of hyperplanes through the data space that collectively define a convex polytope that separates a target class of input samples from input samples of different classes. Each rule corresponds to a set of decision boundaries between two different decision outcomes. Human-understandable representations of rules may be generated. One or more rules may be used to generate a classifier. The representations and interpretations exhibit faithfulness, robustness, and comprehensiveness relative to other known approaches.",
    "claims": "\n1. A method for generating a simplified representation of a neural network trained to perform classification, the trained neural network comprising a truncated portion including one or more layers and a tail portion including one or more layers, the method comprising:\nusing the truncated portion to generate an updated input sample comprising one or more output activation maps based on the input sample; and\nusing the tail portion to generate a label classifying the input sample into a first category or a second category based on the one or more output activation maps; and\ngenerating a rule, the rule comprising a convex polytope defined by a plurality of hyperplanes in a multi-dimensional Euclidean space defined based on the plurality of updated samples such that updated input samples falling within the convex polytope are likely to be classified in a first category by the trained neural network and updated input samples falling outside the convex polytope are likely to be classified in a second category by the trained neural network.\n2. The method of claim 1, wherein:\nthe plurality of input samples comprises:\na seed sample classified by the trained neural network in the first category, the truncated portion generating an updated seed sample based on the seed sample; and\na number of contrasting input samples equal to a predetermined candidate pool size, each contrasting input sample being classified by the trained neural network in the second category, the truncated portion generating an updated contrasting sample based on each contrasting input sample; and\ngenerating the rule comprises, for each updated contrasting sample:\nperforming a binary search between the updated seed sample and the updated contrasting sample to generate a basis value and a bias value;\ncomputing a decision boundary between the first category and the second category based on the basis value and the bias value of the binary search, the decision boundary defining one of the plurality of hyperplanes.\n3. The method of claim 2, wherein:\nthe plurality of input samples further comprises:\none or more positive samples, each positive sample being classified by the trained neural network in the first category, the truncated portion generating an updated positive sample based on each positive sample; and\none or more negative samples, each negative sample being classified by the trained neural network in the second category, the truncated portion generating an updated negative sample based on each negative sample; and\ngenerating the rule further comprises, for each hyperplane:\ngenerating a positive-sample binary matrix comprising, for each updated positive sample, a row of binary values, each binary value indicating whether the updated positive sample falls on a first side or second side of one of the hyperplanes, each column of the positive-sample binary matrix corresponding to a hyperplane;\ngenerating a negative-sample binary matrix comprising, for each updated negative sample, a row of binary values, each binary value indicating whether the updated negative sample falls on a first side or second side of one of the hyperplanes, each column of the negative-sample binary matrix corresponding to a hyperplane; and\nselecting the plurality of hyperplanes from the columns of the positive-sample binary matrix and the columns of the negative-sample binary matrix using submodular cost submodular cover optimization such that the number of hyperplanes in the plurality of hyperplanes defining the convex polytope of the rule is less than the predetermined candidate pool size.\n4. The method of claim 3, wherein:\nthe positive-sample binary matrix further comprises a row of binary values corresponding to the updated seed sample; and\nthe negative-sample binary matrix further comprises a row of binary values corresponding to each updated contrasting sample.\n5. A non-transitory computer-readable medium having instructions tangibly stored thereon, wherein the instructions, when executed by a processing system, cause the processing system to perform the method of claim 4.\n6. The method of claim 1,\nwherein the plurality of input samples comprises an interpretation sample classified by the trained neural network in the first category, the truncated portion generating an updated interpretation sample based on the interpretation sample,\nthe method further comprising generating an interpretation of the rule by:\nidentifying a hyperplane of the plurality of hyperplanes of the rule;\nfor each of one or more activation maps of the updated interpretation sample, each activation map comprising a plurality of activation values:\ncalculating a mean of the partial derivatives of the hyperplane with respect to each activation value of the activation map; and\nsetting a weight for the activation map equal to the calculated mean; and\ngenerating a heatmap by calculating a sum of each activation map weighted by its respective weight, the heatmap representing a decision boundary corresponding to the hyperplane.\n7. The method of claim 6, wherein each input sample is an image, the method further comprising generating a human-visible representation of the rule by combining the heatmap with the interpretation sample.\n8. The method of claim 7, wherein combining the heatmap with the interpretation sample comprises generating an image comprising at least part of the interpretation sample with a visual indicator of a portion of the heatmap having a heat value above a salience threshold.\n9. The method of claim 6, wherein generating a representation of the rule further comprises repeating the steps of:\nidentifying a hyperplane;\ncalculating a mean for each activation map;\nsetting a weight for each activation map; and\ngenerating a heatmap\n10. The method of claim 1, wherein:\nthe steps of generating an updated input sample and generating a label are performed for each input sample of a first plurality of input samples to generate a first plurality of updated samples and a first plurality of labels;\nthe step of generating a rule is performed based on the first plurality of updated samples and a first plurality of labels, thereby generating a first rule;\nthe steps of generating an updated sample and generating a label are performed for each input sample of each of one or more additional pluralities of input samples to generate one or more additional pluralities of updated samples and one or more additional pluralities of labels; and\nthe step of generating a rule is performed based on one or more additional pluralities of updated samples and one or more additional pluralities of labels, thereby generating one or more additional rules, the first rule and the one or more additional rules jointly constituting a plurality of rules,\nthe method further comprising generating a multiple rule classifier comprising the plurality of rules.\n11. A non-transitory computer-readable medium having instructions tangibly stored thereon, wherein the instructions, when executed by a processing system, cause the processing system to perform the method of claim 1.\n12. A system comprising:\na processing system comprising one or more processor devices; and\na memory storing instructions which, when executed by the processing system, cause the system to generate a simplified representation of a neural network trained to perform a classification task on input samples, the trained neural network comprising a truncated portion including one or more layers and a tail portion including one or more layers, by:\nusing the truncated portion to generate an updated input sample comprising one or more output activation maps based on the input sample; and\nusing the tail portion to generate a label classifying the input sample into a first category or a second category based on the one or more output activation maps; and\ngenerating a rule, the rule comprising a convex polytope defined by a plurality of hyperplanes in a multi-dimensional Euclidean space defined based on the plurality of updated samples such that updated input samples falling within the convex polytope are likely to be classified in a first category by the trained neural network and updated input samples falling outside the convex polytope are likely to be classified in a second category by the trained neural network.\n13. The system of claim 12, wherein:\nthe plurality of input samples comprises:\na seed sample classified by the neural network in the first category, the truncated portion generating an updated seed sample based on the seed sample; and\na number of contrasting input samples equal to a predetermined candidate pool size, each contrasting input sample being classified by the neural network in the second category, the truncated portion generating an updated contrasting sample based on each contrasting input sample; and\ngenerating the rule comprises, for each updated contrasting sample:\nperforming a binary search between the updated seed sample and the updated contrasting sample to generate a basis value and a bias value;\ncalculating a decision boundary between the first category and the second category based on the basis value and the bias value of the binary search, the decision boundary defining one of the plurality of hyperplanes.\n14. The system of claim 13, wherein:\nthe plurality of input samples further comprises:\none or more positive samples, each positive sample being classified by the trained neural network in the first category, the truncated portion generating an updated positive sample based on each positive sample; and\none or more negative samples, each negative sample being classified by the trained neural network in the second category, the truncated portion generating an updated negative sample based on each negative sample; and\ngenerating the rule further comprises, for each hyperplane:\ngenerating a positive-sample binary matrix comprising, for each updated positive sample, a row of binary values, each binary value indicating whether the updated positive sample falls on a first side or second side of one of the hyperplanes, each column of the positive-sample binary matrix corresponding to a hyperplane;\ngenerating a negative-sample binary matrix comprising, for each updated negative sample, a row of binary values, each binary value indicating whether the updated negative sample falls on a first side or second side of one of the hyperplanes, each column of the negative-sample binary matrix corresponding to a hyperplane; and\nselecting the plurality of hyperplanes from the columns of the positive-sample binary matrix and the columns of the negative-sample binary matrix using submodular cost submodular cover optimization such that the number of hyperplanes in the plurality of hyperplanes defining the convex polytope of the rule is less than the predetermined candidate pool size.\n15. The system of claim 14, wherein:\nthe positive-sample binary matrix further comprises a row of binary values corresponding to the updated seed sample; and\nthe negative-sample binary matrix further comprises a row of binary values corresponding to each updated contrasting sample.\n16. The system of claim 12,\nwherein the plurality of input samples comprises an interpretation sample classified by the trained neural network in the first category, the truncated portion generating an updated interpretation sample based on the interpretation sample,\nthe instructions, when executed by the processing system, further causing the system to generate an interpretation of the rule by:\nidentifying a hyperplane of the plurality of hyperplanes of the rule;\nfor each of one or more activation maps of the updated interpretation sample, each activation map comprising a plurality of activation values:\ncalculating a mean of the partial derivatives of the hyperplane with respect to each activation value of the activation map; and\nsetting a weight for the activation map equal to the calculated mean; and\ngenerating a heatmap by calculating a sum of each activation map weighted by its respective weight, the heatmap representing a decision boundary corresponding to the hyperplane.\n17. The system of claim 16, wherein each input sample is an image, the method further comprising generating a human-visible representation of the rule by combining the heatmap with the interpretation sample.\n18. The system of claim 17, wherein combining the heatmap with the interpretation sample comprises generating an image comprising at least part of the interpretation sample with a visual indicator of a portion of the heatmap having a heat value above a salience threshold.\n19. The system of claim 16, wherein generating a representation of the rule further comprises repeating the steps of:\nidentifying a hyperplane;\ncalculating a mean for each activation map;\nsetting a weight for each activation map; and\ngenerating a heatmap\n20. The system of claim 12, wherein:\nthe steps of generating an updated sample and a generating a label are performed for each input sample of a first plurality of input samples to generate a first plurality of updated samples and a first plurality of classifications;\nthe step of generating a rule is performed based on the first plurality of updated samples and a first plurality of labels, thereby generating a first rule;\nthe steps of generating an updated sample and a generating a label are performed for each input sample of each of one or more additional pluralities of input samples to generate one or more additional pluralities of updated samples and one or more additional pluralities of classifications;\nthe step of generating a rule is performed based on one or more additional pluralities of updated samples and one or more additional pluralities of labels, thereby generating one or more additional rules, the first rule and the one or more additional rules jointly constituting a plurality of rules; and\ngenerating a multiple rule classifier comprising the plurality of rules."
}