{
    "patent_link": "https://patents.google.com/patent/US5974428A/en",
    "patent_id": "US5974428A",
    "title": "Method and apparatus for class version naming and mapping",
    "abstract": "According to a preferred embodiment of the present invention, a class versioning and mapping system allows a user to request a desired class without knowing which class version is the most recent or correct version for the desired class. The class versioning and mapping system uses a version mapping mechanism to cross reference the requested class, select the most recent or best version of the requested class, and then return an object to the user that belongs to the selected class. This feature allows the system to have multiple versions of the same class on-line at the same time and use objects from different versions of the same class in a way that is transparent to the user. Therefore, by using a preferred embodiment of the present invention, a client object can specify or request that an object be created without having any knowledge of the actual class version or version(s) that are available.",
    "inventors": [
        "Scott N. Gerard",
        "Steven J. Munroe"
    ],
    "assignee": "International Business Machines Corp",
    "classifications": [
        "G06F8/71",
        "G06F9/44536",
        "Y10S707/955",
        "Y10S707/99953",
        "Y10S707/99954"
    ],
    "claims": "\n1. An apparatus comprising:\na CPU coupled to a bus;\na memory coupled to the bus;\na version mapping mechanism residing in the memory, the version mapping mechanism including a mapping of classes to preferred class versions; and\na version loader object residing in the memory, wherein the version loader object, in response to a request to load a requested class, checks the version mapping mechanism to determine a preferred version of the requested class and then loads the preferred version of the requested class.\n2. The apparatus of claim 1 wherein the requested class is a default class.\n3. The apparatus of claim 1 wherein the preferred version of the requested class is a subclass of the requested class.\n4. The apparatus of claim 1 wherein the preferred version of the requested class is unrelated by inheritance to the requested class.\n5. The apparatus of claim 1 wherein the version mapping mechanism comprises a mapping file.\n6. The apparatus of claim 1 wherein the version mapping mechanism comprises an algorithm stored in the memory.\n7. The apparatus of claim 1 wherein the preferred version of the requested class is the requested class.\n8. The apparatus of claim 1 wherein the preferred version of the requested class is not the requested class.\n9. A method of providing versioning for classes in an object-oriented environment, the method comprising the steps of:\nsending a request for a requested class to a version loader object;\nthe version loader object checking a version mapping mechanism to determine a preferred version of the requested class, the version mapping mechanism including a mapping of classes to preferred class versions; and\nthe version loader object loading the preferred class version of the requested class.\n10. The method of claim 9 wherein the requested class is a default class.\n11. The method of claim 9 wherein the preferred version of the requested class is a subclass of the requested class.\n12. The method of claim 9 wherein the preferred version of the requested class is unrelated by inheritance to the requested class.\n13. The method of claim 9 wherein the version mapping mechanism comprises a mapping file.\n14. The method of claim 9 wherein the version mapping mechanism comprises an algorithm.\n15. The method of claim 9 wherein the preferred version of the requested class is the requested class.\n16. The method of claim 9 wherein the preferred version of the requested class is not the requested class.\n17. A program product comprising:\na version loader object that, in response to a request to load a requested class, checks a version mapping mechanism comprising a mapping of classes to preferred class versions to determine a preferred version of the requested class and then loads the preferred version of the requested class; and\nsignal bearing media bearing the version loader object.\n18. The program product of claim 17 wherein the requested class is a default class.\n19. The program product of claim 17 wherein the preferred version of the requested class is a subclass of the requested class.\n20. The program product of claim 17 wherein the preferred version of the requested class is unrelated by inheritance to the requested class.\n21. The program product of claim 17 wherein the preferred version of the requested class is the requested class.\n22. The program product of claim 17 wherein the preferred version of the requested class is not the requested class.\n23. The program product of claim 17 wherein the signal bearing media comprises recordable media.\n24. The program product of claim 17 wherein the signal bearing media comprises transmission media.\n25. The program product of claim 17 wherein the version mapping mechanism comprises a mapping file stored in a memory.\n26. The program product of claim 17 wherein the version mapping mechanism comprises an algorithm stored in a memory.\n27. An apparatus, the apparatus comprising:\na CPU coupled to a bus;\na memory coupled to the bus;\na plurality of version mapping mechanisms residing in the memory, each version mapping mechanism including a mapping of classes to preferred class versions; and\na plurality of version loader objects residing in the memory, wherein each of the plurality of version loader objects, in response to a request to load a requested class, checks a different version mapping mechanism to determine a preferred version of the requested class and then loads the preferred version of the requested class.\n28. The apparatus of claim 27 wherein the requested class is a default class.\n29. The apparatus of claim 27 wherein the preferred version of the requested class selected is a subclass of the requested class.\n30. The apparatus of claim 27 wherein the preferred version of the requested class is unrelated by inheritance to the requested class.\n31. The apparatus of claim 27 wherein the preferred version of the requested class is the requested class.\n32. The apparatus of claim 27 wherein the preferred version of the requested class is not the requested class.\n33. An apparatus, the apparatus comprising:\na CPU coupled to a bus;\na memory coupled to the bus;\na plurality of user interfaces residing in the memory;\na plurality of version mapping mechanisms residing in the memory each version mapping mechanism including a mapping of classes to preferred class versions;\na plurality of class loader objects residing in the memory; and\nwherein each of the plurality of user interfaces, in response to a request to load a requested class, checks a different version mapping mechanism to determine a preferred version of the requested class and then loads the preferred version of the requested class.\n34. The apparatus of claim 33 wherein the requested class is the default class.\n35. The apparatus of claim 33 wherein the preferred version of the requested class is a subclass of the requested class.\n36. The apparatus of claim 33 wherein the preferred version of the requested class is unrelated by inheritance to the requested class.\n37. A JAVA virtual machine apparatus for implementing class versioning and naming, the apparatus comprising:\na CPU coupled to a bus;\na memory coupled to the bus;\na JAVA virtual machine residing in the memory;\na plurality of class versions residing in the memory;\na plurality of version mapping mechanisms residing in the memory, each version mapping mechanism including a mapping of classes to preferred class versions;\na plurality of class loader objects residing in the memory; and\nwherein each of the plurality of class loader objects, in response to a request to load a requested class, checks a different version mapping mechanism to determine a preferred version of the requested class and then loads the preferred version of the requested class.\n38. An apparatus, the apparatus comprising:\na CPU coupled to a bus;\na memory coupled to the bus;\na JAVA class file residing in the memory, the JAVA class file having a name;\na version mapping mechanism residing in the memory, the version mapping mechanism including a mapping of classes to preferred class versions and their names;\na class loader object residing in the memory; and\nwherein the class loader object, in response to a request to load a requested JAVA class, checks the version mapping mechanism to determine a preferred version of the requested JAVA class, modifies the name of the preferred JAVA class file to the name the requested JAVA class, and then loads the preferred version of the requested JAVA class.\n39. The apparatus of claim 38 wherein the requested JAVA class is a default class.\n40. The apparatus of claim 38 wherein the preferred version of the requested JAVA class is a subclass of the requested class.\n41. A class versioning and naming apparatus, the apparatus comprising:\na CPU coupled to a bus;\na memory coupled to the bus;\na plurality of JAVA packages residing in the memory; each of the plurality of JAVA packages having a JAVA package name;\na version mapping mechanism residing in the memory, the version mapping mechanism including a mapping of classes to preferred class versions and their names;\na version loader object residing in the memory;\nwherein the JAVA package name for each of the plurality of JAVA packages has a different class version identifier included in the JAVA package name, wherein the version loader object uses the class version identifier included in the JAVA package name to identify the class version of the JAVA package, and wherein in response to a request to load a requested JAVA class, the version loader object checks the version mapping mechanism using the version class identifier to determine a preferred version of the requested JAVA class, then loads the preferred version of the requested JAVA class.",
    "status": "Expired - Fee Related",
    "citations_own": [
        "US5404525A",
        "US5784553A",
        "US5790855A",
        "US5815718A",
        "US5842020A"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US6092079A",
        "US6195795B1",
        "US6223343B1",
        "US6256773B1",
        "US6272678B1",
        "US6292933B1",
        "US6324651B2",
        "WO2001093018A2",
        "US6339841B1",
        "US6385618B1",
        "US20020066076A1",
        "US6425125B1",
        "WO2002086702A1",
        "WO2003009096A2",
        "US20030033442A1",
        "US20030037313A1",
        "US20030106043A1",
        "US20030131341A1",
        "US20030149699A1",
        "US6662357B1",
        "US6675381B1",
        "EP1380939A1",
        "US6748570B1",
        "US6748591B1",
        "US20040148318A1",
        "US6779177B1",
        "US20040167937A1",
        "US20040172404A1",
        "US20040216133A1",
        "US20040230977A1",
        "US6826750B1",
        "US20040250255A1",
        "US20040249867A1",
        "US6862686B1",
        "US20050144591A1",
        "US20050177826A1",
        "US20050235010A1",
        "US20050253848A1",
        "US20050253839A1",
        "US20060026568A1",
        "US7016922B1",
        "US20060168579A1",
        "US7131122B1",
        "US20060248140A1",
        "US7139999B2",
        "US7181686B1",
        "US7386786B2",
        "US20080155521A1",
        "US20080209319A1",
        "US7543019B1",
        "US20090164970A1",
        "US20100131478A1",
        "WO2011042228A1",
        "US8006240B2",
        "US20110302217A1",
        "US8612960B2",
        "US8624898B1",
        "US8745643B2",
        "US8949857B2",
        "US20150100951A1",
        "US9116607B2",
        "US9411618B2",
        "US9720688B1",
        "US10083029B2",
        "US10095508B2",
        "US20180324119A1",
        "US10129361B2",
        "US10146515B1",
        "US10326858B2",
        "US10332068B2",
        "US10482475B2",
        "US20190369985A1",
        "US10853769B2",
        "US10867285B2",
        "US11080734B2",
        "US11080105B1",
        "US11190608B2",
        "US11501351B2",
        "US11514021B2",
        "US11803535B2"
    ],
    "citedby_ftf": []
}