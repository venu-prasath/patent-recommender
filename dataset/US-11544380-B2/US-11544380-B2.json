{
    "patent_id": "US-11544380-B2",
    "title": "Methods and apparatus for detecting whether a string of characters represents malicious activity using machine learning ",
    "assignee": "Invincea, Inc.",
    "publication_date": "2023-01-03",
    "patent_link": "https://patents.google.com/patent/US11544380B2/en",
    "inventors": [
        "Joshua Daniel Saxe"
    ],
    "classifications": [
        "G06F21/567",
        "G06F21/562",
        "G06N3/04",
        "G06N3/045",
        "G06N3/0454",
        "G06N3/08",
        "G06N3/084",
        "H04L63/1416",
        "G06F2221/032",
        "G06N5/003",
        "G06N5/01",
        "G06N7/005",
        "G06N7/01"
    ],
    "abstract": "In some embodiments, a processor can receive an input string associated with a potentially malicious artifact and convert each character in the input string into a vector of values to define a character matrix. The processor can apply a convolution matrix to a first window of the character matrix to define a first subscore, apply the convolution matrix to a second window of the character matrix to define a second subscore and combine the first subscore and the second subscore to define a score for the convolution matrix. The processor can provide the score for the convolution matrix as an input to a machine learning threat model, identify the potentially malicious artifact as malicious based on an output of the machine learning threat model, and perform a remedial action on the potentially malicious artifact based on identifying the potentially malicious artifact as malicious.",
    "claims": "\n1. A non-transitory processor-readable medium storing code representing instructions to be executed by a processor, the instructions comprising code to cause the processor to:\nreceive a string associated with an artifact;\napply a convolution matrix to a set of values associated with the string to define at least a portion of a feature vector;\nprovide the feature vector as an input to a machine learning threat model; and\nidentify the artifact associated with the string as malicious based on an output of the machine learning threat model meeting a predefined criterion.\n2. The non-transitory processor-readable medium of claim 1, the instructions further comprising code to cause the processor to:\nconvert each character in the string into a vector of values to define a character matrix including the set of values associated with the string.\n3. The non-transitory processor-readable medium of claim 1, the instructions further comprising code to cause the processor to:\nperform a remedial action on the artifact based on identifying the artifact as malicious.\n4. The non-transitory processor-readable medium of claim 1, wherein the artifact is at least one of a function of software code, a webpage, a data file, a model file, a source file, a script, a binary executable file, a table in a database system, a development deliverable, a word-processing document, an email message, a text message, a network address, a file path, a device, or an entity.\n5. The non-transitory processor-readable medium of claim 1, the instructions further comprising code to cause the processor to:\nselect the convolution matrix from a set of convolution matrices based on metadata associated with the string.\n6. The non-transitory processor-readable medium of claim 1, wherein the set of values is a first set of values, the instructions to cause the processor to apply include instructions to cause the processor to apply the convolution matrix to the first set of values and a second set of values associated with the string to define the at least the portion of the feature vector.\n7. The non-transitory processor-readable medium of claim 1, wherein the convolution matrix is a first convolution matrix and the portion of the feature vector is a first portion of the feature vector, the method further comprising:\napplying a second convolution matrix to the set of values to define a second portion of the feature vector.\n8. An apparatus, comprising:\na memory; and\na hardware processor operatively coupled to the memory, the hardware processor configured to:\nidentify a set of values associated with a string;\nselect a convolution matrix based on metadata associated with the string;\napply the convolution matrix to the set of values associated with the string to define at least a portion of a feature vector;\nprovide the feature vector as an input to a machine learning threat model; and\nidentify an artifact associated with the string as malicious based on an output of the machine learning threat model.\n9. The apparatus of claim 8, wherein the metadata associated with the string includes at least one of a source of the string, a type of information represented by the string, or a size of the string.\n10. The apparatus of claim 8, wherein the artifact is at least one of a function of software code, a webpage, a data file, a model file, a source file, a script, a binary executable file, a table in a database system, a development deliverable, a word-processing document, an email message, a text message, a network address, a file path, a device, or an entity.\n11. The apparatus of claim 8, wherein the hardware processor is configured to perform a remedial action on the artifact based on identifying the artifact as malicious.\n12. The apparatus of claim 8, wherein the set of values is a first set of values, the hardware processor configured to apply the convolution matrix to the first set of values and a second set of values associated with the string to define the at least the portion of the feature vector.\n13. The apparatus of claim 8, wherein the convolution matrix is a first convolution matrix and the portion of the feature vector is a first portion of the feature vector, the hardware processor configured to apply a second convolution matrix to the set of values to define a second portion of the feature vector.\n14. The apparatus of claim 8, wherein the machine learning threat model is at least one of a deep neural network threat model, a decision tree model, a Bayesian network or a clustering model.\n15. A method, comprising:\napplying a first convolution matrix to a set of values associated with a string to define a first portion of a feature vector, the string associated with an artifact;\napplying a second convolution matrix to the set of values associated with the string to define a second portion of the feature vector;\nproviding the feature vector as an input to a machine learning threat model; and\nidentifying the artifact associated with the string as malicious based on an output of the machine learning threat model meeting a predefined criterion.\n16. The method of claim 15, wherein the artifact is at least one of a function of software code, a webpage, a data file, a model file, a source file, a script, a binary executable file, a table in a database system, a development deliverable, a word-processing document, an email message, a text message, a network address, a file path, a device, or an entity.\n17. The method of claim 15, further comprising:\nperforming a remedial action on the artifact based on identifying the artifact as malicious.\n18. The method of claim 15, wherein the first convolution matrix is selected to detect a first feature of the string and the second convolution matrix is selected to detect a second feature of the string different than the first feature.\n19. The method of claim 15, wherein the set of values is a first set of values, the hardware processor configured to apply the first convolution matrix to the first set of values and a second set of values associated with the string to define the first portion of the feature vector.\n20. The method of claim 15, wherein the machine learning threat model is at least one of a deep neural network threat model, a decision tree model, a Bayesian network or a clustering model.",
    "status": "Active",
    "citations_own": [
        "US6226629B1",
        "US20050050335A1",
        "US20050166046A1",
        "US20050187740A1",
        "US20050223238A1",
        "US20060015630A1",
        "US20080127336A1",
        "US20080140662A1",
        "US20080140751A1",
        "US20090044024A1",
        "US20090100055A1",
        "US20090172815A1",
        "US20090293125A1",
        "US20100115620A1",
        "US20110154495A1",
        "US20110179484A1",
        "US8001583B2",
        "US20110214161A1",
        "US8028338B1",
        "US8095981B2",
        "US20120158626A1",
        "US20120159620A1",
        "US20120210423A1",
        "US20120233693A1",
        "US20120233127A1",
        "US8291497B1",
        "US8413244B1",
        "US20130167236A1",
        "US8505094B1",
        "US20130276114A1",
        "US20140090061A1",
        "US20140298460A1",
        "US9015814B1",
        "US20150242626A1",
        "US20150302268A1",
        "US20150312189A1",
        "US20150379427A1",
        "US20160014149A1",
        "EP3018879A1",
        "US20160156460A1",
        "US20160239706A1",
        "US20170017795A1",
        "WO2017011702A1",
        "US20170085585A1",
        "US20170134404A1",
        "US9672358B1",
        "US9690938B1",
        "US9705904B1",
        "US20170228641A1",
        "US20170328194A1",
        "WO2017223294A1",
        "US20180041536A1",
        "US9940459B1",
        "US20180285740A1",
        "US10104100B1",
        "US10432653B2",
        "US20190364063A1",
        "US10649970B1",
        "US20220215182A1"
    ],
    "citations_ftf": [
        "US104100A",
        "KR101880907B1",
        "WO2019092868A1",
        "US11470107B2",
        "US11609838B2",
        "US20230067285A1"
    ],
    "citedby_own": [],
    "citedby_ftf": [
        "US10649970B1",
        "US9940459B1",
        "US9690938B1",
        "WO2017221667A1",
        "AU2017281232B2",
        "US10972495B2",
        "US10503901B2",
        "US10637874B2",
        "US10489589B2",
        "CN106790292A",
        "US11314872B2",
        "KR101863615B1",
        "US10523695B2",
        "US10635813B2",
        "US10878090B2",
        "CN108346107B",
        "CN108229156A",
        "US11580219B2",
        "WO2019145912A1",
        "EP3522080B1",
        "RU2697955C2",
        "US11270205B2",
        "CN108366071B",
        "KR102065672B1",
        "US10824723B2",
        "JP7175148B2",
        "US20200117975A1",
        "US11070632B2",
        "RU2724710C1",
        "US11574052B2",
        "WO2020165610A1",
        "CN110222512B",
        "US11625483B2",
        "US11316873B2",
        "DE102019119087A1",
        "US11636202B2",
        "US11604871B2",
        "US11762990B2",
        "US11558403B2",
        "US11386197B1",
        "US11641366B2",
        "US20220279014A1",
        "US11675965B2"
    ]
}