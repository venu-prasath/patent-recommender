{
    "patent_link": "https://patents.google.com/patent/US6092045A/en",
    "patent_id": "US6092045A",
    "title": "Method and apparatus for speech recognition",
    "abstract": "Comparing a series of observations representing unknown speech, to stored models representing known speech, the series of observations being divided into at least two blocks each comprising two or more of the observations, is carried out in an order which makes better use of memory. First, the observations in one of the blocks are compared (31), to a subset comprising one or more of the models, to determine a likelihood of a match to each of the one or more models. This step is repeated (33) for models other than those in the subset; and the whole process is repeated (34) for each block.",
    "inventors": [
        "Peter R. Stubley",
        "Andre Gillet",
        "Vishwa N. Gupta",
        "Christopher K. Toulson",
        "David B. Peters"
    ],
    "assignee": "RPX Clearinghouse LLC",
    "classifications": [],
    "claims": "\n1. A computer implemented method of comparing a series of observations representing unknown speech, to stored models representing known speech, the series of observations being divided into at least two blocks each comprising two or more of the observations, the method comprising the steps of:\na) comparing two or more of the observations in one of the blocks of observations representing unknown speech, to a subset comprising one or more of the models representing known speech, to determine a likelihood of a match to each of the one or more models;\nb) repeating step a) for models other than those in the subset; and\nc) repeating steps a) and b) for a different one of the blocks, and thereby recognizing the unknown speech in terms of the known speech.\n2. The method of claim 1 wherein the observations are represented as multidimensional vectors, for the comparison at step a).\n3. The method of claim 1 wherein the comparison at step a) uses a Viterbi algorithm.\n4. The method of claim 1 wherein the models are represented as finite state machines with probability distribution functions attached.\n5. The method of claim 1 wherein the models comprise groups of representations of phonemes.\n6. The method of claim 1 wherein the models comprise representations of elements of speech, and step a) comprises the step of:\ncomparing the block of observations to a predetermined sequence of the models in the subset.\n7. The method of claim 1 wherein step a) comprises the steps of:\ncomparing the block of observations to a predetermined sequence of the models in the subset;\ndetermining for each of the models in the sequence, a score which represents the likelihood of a match with the observations compared so far;\nstoring the score in a score buffer for use in determining scores of subsequent models in the sequence; and\ndetermining when the score is no longer needed, then re-using the score buffer to store a subsequent score.\n8. The method of claim 1 wherein, step a) comprises the step of:\ncomparing the block of observations to a lexical graph comprising a predetermined sequence of the models in the subset, wherein the sequence comprises different types of models, and the comparison is dependent on the type; and the method comprises the step of:\ndetermining the types of the models before the block is compared.\n9. The method of claim 1, the models comprising finite state machines, having multiple state sequences, wherein step a) comprises the steps of:\ndetermining state scores for the matches between each respective observation and state sequences of the respective model,\nmaking an approximation of the state scores, for the observation, for storing to use in matching subsequent observations, the approximation comprising fewer state scores than were determined for the respective observation.\n10. A computer implemented method of recognising patterns in a series of observations representing unknown speech, by comparing the observations to stored models representing known speech, using a processing system having a main memory for storing the models and a cache memory, the cache memory being too small to contain all the models and observations, the series of observations being divided into blocks of at least two observations, the method comprising the steps of:\na) using the processor to compare a subset of the models representing known speech to the observations, representing unknown speech, in one of the blocks of observations, to recognise the patterns, the subset of the models being small enough to fit in the cache memory;\nb) repeating step a) for a different subset of the modelsi and\nc) repeating steps a) and b) for a different one of the blocks, and thereby recognizing the unknown speech in terms of the known speech.\n11. A computer implemented method of recognising patterns in a series of observations representing unknown speech by comparing the observations to stored models representing known speech, the series of observations being divided into at least two blocks each comprising two or more of the observations, the models comprising finite state machines, having multiple state sequences, the method comprising the steps of:\na) comparing two or more of the observations, representing unknown speech, in one of the blocks of observations, representing known speech, to a subset comprising one or more of the models, to determine a likelihood of a match to each of the one or more models, by determining which of the state sequences of the respective model is the closest match, and how close is the match;\nb) repeating step a) for models other than those in the subset; and\nc) repeating steps a) and b) for a different one of the blocks, and thereby recognizing the unknown speech in terms of the known speech.\n12. The method of claim 11 wherein the observations are speech signals, and the models are representations of elements of speech.\n13. The method of claim 11 wherein the comparison at step a) uses the Viterbi algorithm.\n14. The method of claim 11 wherein the models are represented as finite state machines with probability distribution functions attached.\n15. A computer implemented method of comparing a series of observations representing unknown speech, to stored models representing known speech, by comparing the observations to stored models, the series of observations being grouped into one or more blocks each comprising two or more of the observations, the models comprising finite state machines, having multiple state sequences, the method comprising, for each of the one or more blocks, the steps of:\na) comparing two or more of the observations, representing unknown speech, in the respective block, to a subset comprising one or more of the models, representing known speech, to determine a likelihood of a match to each of the one or more models, by determining which of the state sequences of the respective model is the closest match, and how close is the match; and\nb) repeating step a) for models other than those in the subset, and thereby recognize the unknown speech in terms of the known speech.\n16. Software stored on a computer readable medium for comparing a series of observations representing unknown speech, to stored models representing known speech, the series of observations being divided into at least two blocks each comprising two or more of the observations, the software being programmed for carrying out the steps of:\na) comparing two or more of the observations, representing unknown speech, in one of the blocks of observations, representing known speech, to a subset comprising one or more of the models, to determine a likelihood of a match to each of the one or more models;\nb) repeating step a) for models other than those in the subset; and\nc) repeating steps a) and b) for a different one of the blocks, and thereby recognizing the unknown speech in terms of the known speech.\n17. Software stored on a computer readable medium for recognising patterns in a series of observations, representing unknown speech, by comparing the observations to stored models, representing known speech, the series of observations being divided into at least two blocks each comprising two or more of the observations, the models comprising finite state machines, having multiple state sequences, the software being programmed to carry out the steps of:\na) comparing two or more of the observations, representing unknown speech, in one of the blocks of observations, to a subset comprising one or more of the models, representing known speech, to determine a likelihood of a match to each of the one or more models, by determining which of the state sequences of the respective model is the closest match, and how close is the match;\nb) repeating step a) for models other than those in the subset; and\nc) repeating steps a) and b) for a different one of the blocks, and thereby recognizing the unknown speech in terms of the known speech.\n18. Software stored on a computer readable medium for comparing a series of observations representing unknown speech, to stored models representing known speech, by comparing the observations to stored models, the series of observations being grouped into one or more blocks each comprising two or more of the observations, the models comprising finite state machines, having multiple state sequences, the software being programmed to carry out for each of the one or more blocks, the steps of:\na) comparing two or more of the observations, representing unknown speech, in the respective block, to a subset comprising one or more of the models, representing known speech, to determine a likelihood of a match to each of the one or more models, by determining which of the state sequences of the respective model is the closest match, and how close is the match; and\nb) repeating step a) for models other than those in the subset, and thereby recognizing the unknown speech in terms of the known speech.\n19. A speech recognition processor for comparing a series of observations representing unknown speech, to stored models representing known speech, the series of observations being divided into at least two blocks each comprising two or more of the observations, the processor comprising:\na) first means for comparing two or more of the observations, representing unknown speech, in one of the blocks of observations, to a subset comprising one or more of the models, representing known speech, to determine a likelihood of a match to each of the one or more models; and\nb) second means for comparing the two or more observations to models other than those in the subset; and\nwherein said first means and said second means iteratively compare the series of observations to the stored models to therebv recognize the unknown speech in terms of the known speech.\n20. A speech recognition processor for recognising patterns in a series of observations by comparing the observations to stored models, the series of observations being divided into at least two blocks each comprising two or more of the observations, the models comprising finite state machines, having multiple state sequences, the processor comprising:\na) first means for comparing two or more of the observations, representing unknown speech, in one of the blocks of observations, to a subset comprising one or more of the models, representing known speech, to determine a likelihood of a match to each of the one or more models, by determining which of the state sequences of the respective model is the closest match, and how close is the match; and\nb) second means for comparing the two or more of the observations to models other than those in the subset;\nwherein said first means and said second means iteratively compare the series of observations to the stored models to thereby recognize the unknown speech in terms of the known speech.\n21. A speech recognition processor for comparing a series of observations representing unknown speech, to stored models representing known speech, by comparing the observations to stored models, the series of observations being grouped into one or more blocks each comprising two or more of the observations, the models comprising finite state machines, having multiple state sequences, the processor comprising:\na) first means for comparing two or more of the observations, representing unknown speech, in the respective block, to a subset comprising one or more of the models, representing known speech, to determine a likelihood of a match to each of the one or more models, by determining which of the state sequences of the respective model is the closest match, and how close is the match; and\nb) second means for comparing the two or more of the observations to models other than those in the subset, to thereby recognize the unknown speech in terms of the known speech.",
    "status": "Expired - Lifetime",
    "citations_own": [
        "US4164025A",
        "US4751737A",
        "US4797910A",
        "US4805219A",
        "US4959855A",
        "US4979206A",
        "US5050215A",
        "US5052038A",
        "US5086479A",
        "US5091947A",
        "US5097509A",
        "US5127055A",
        "US5163083A",
        "US5181237A",
        "US5204894A",
        "US5271088A",
        "US5274695A",
        "US5307444A",
        "US5390278A",
        "US5459798A",
        "US5488652A",
        "EP0703568A2",
        "US5515475A",
        "US5621859A",
        "EP0810583A2",
        "US5857169A",
        "US5892960A",
        "US5930753A",
        "US5933806A"
    ],
    "citations_ftf": [],
    "citedby_own": [
        "US6272464B1",
        "US6374221B1",
        "WO2002035856A2",
        "US6430551B1",
        "US20020120446A1",
        "US20020143531A1",
        "WO2002086862A1",
        "US6480827B1",
        "US20030009334A1",
        "US20030055645A1",
        "US20030058340A1",
        "US20030182110A1",
        "US6629073B1",
        "US20030191638A1",
        "US20030191641A1",
        "WO2003090203A2",
        "US6662158B1",
        "US20040002838A1",
        "US6725195B2",
        "US6751595B2",
        "US6789060B1",
        "US20040176956A1",
        "US20040190732A1",
        "US6813341B1",
        "US20040228456A1",
        "US6907412B2",
        "US20050149325A1",
        "US7047047B2",
        "US20060184360A1",
        "US20060182135A1",
        "US20060224392A1",
        "US7136465B2",
        "US7191130B1",
        "US20070192104A1",
        "US20070223539A1",
        "US7493253B1",
        "US20100063819A1",
        "US20120109649A1",
        "US20140023273A1",
        "US9053431B1",
        "US9064191B2",
        "US9141874B2",
        "US9183458B2",
        "US20150340032A1",
        "US9262699B2",
        "US9595063B2",
        "US20170083285A1",
        "US9875440B1",
        "US10482904B1"
    ],
    "citedby_ftf": [
        "US6195639B1",
        "JP4283984B2",
        "ES2190342B1",
        "ATE470217T1",
        "CN1320520C",
        "US7548858B2"
    ]
}