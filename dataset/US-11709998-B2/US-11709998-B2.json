{
    "patent_id": "US-11709998-B2",
    "title": "Dynamic and unscripted virtual agent systems and methods ",
    "assignee": "Accenture Global Solutions Limited",
    "publication_date": "2023-07-25",
    "patent_link": "https://patents.google.com/patent/US11709998B2/en",
    "inventors": [
        "Shubhashis Sengupta",
        "Ankur Gakhar",
        "Sarvesh Maheshwari",
        "Roshni Ramesh Ramnani"
    ],
    "classifications": [
        "G06F40/216",
        "G06F40/35",
        "G06F40/247",
        "G06F40/295",
        "G06F40/30",
        "G06N5/02",
        "G06N5/041",
        "H04L51/02",
        "G06N3/044",
        "G06N5/01"
    ],
    "abstract": "Systems and methods that offer significant improvements to current chatbot conversational experiences are disclosed. The proposed systems and methods are configured to manage conversations in real-time with human customers based on a dynamic and unscripted conversation flow with a virtual assistant. In one embodiment, a knowledge graph or domain model represents the sole or primary source of information for the virtual assistant, thereby removing the reliance on any form of conversational modelling. Based on the information provided by the knowledge graph, the virtual agent chatbot will be equipped to answer customer queries, as well as demonstrate reasoning, offering customers a more natural and efficacious dialogue experience.",
    "claims": "\n1. A method of generating responses to a query, the method comprising:\nreceiving from a first user, via a virtual chatbot, a first query that includes a first clause and a second clause;\ncleaning the first query using a regular expression (regex) filtering method to produce a filtered first query;\nautomatically splitting the first query into a first sub-query for the first clause and a second sub-query for the second clause using a dependency parser and neural network-based heuristics;\nidentifying a first argument in the first sub-query and a second argument in the second sub-query;\ndetermining, using a cypher query, a node path for each of the first sub-query and the second sub-query;\nautomatically performing a graph walk through a portion of a first-tier knowledge graph associated with the virtual chatbot, the graph walk being constrained by the determined node paths;\nautomatically identifying, during the graph walk and using semantic parsing, at least a first math-based constraint that is required in order to respond to the first query;\nautomatically retrieving from the first-tier knowledge graph, via the graph walk, a first result for the first sub-query and a second result for the second sub-query, wherein the first result differs from the second result; and\nautomatically presenting, via the virtual chatbot, a combined response to the first query that combines both the first result and the second result into a single statement that addresses both the first sub-query and the second sub-query.\n2. The method of claim 1, further comprising:\nautomatically classifying the first query as a first query type; and\nselecting a path for the graph walk based in part on the first query type.\n3. The method of claim 1, further comprising automatically classifying the first query as a first query type that is associated with one of a Boolean label, math label, policy label, and external knowledge base label.\n4. The method of claim 1, further comprising:\nreceiving a second query; and\nclassifying the second query as a second query type that is associated with an external knowledge base label in response to determining the first-tier knowledge graph is insufficient for responding to the second query.\n5. The method of claim 1, further comprising:\nreceiving a second query;\ndetermining the first-tier knowledge graph is insufficient for responding to the second query;\naccessing a second-tier world knowledge graph; and\nbasing the second response on objects fetched from the second-tier knowledge graph.\n6. The method of claim 4, further comprising:\naccessing a second-tier world knowledge graph;\ndetermining the second-tier world knowledge graph is insufficient for responding to the second query;\naccessing a third-tier external knowledge base; and\nbasing the second response on objects fetched from the third-tier external knowledge base.\n7. The method of claim 1, further comprising co-referencing of the first query by a natural language understanding system.\n8. The method of claim 4, further comprising:\nreceiving a second query;\ndetermining the first-tier knowledge graph is insufficient for responding to the second query;\naccessing a second-tier world knowledge graph;\ndetermining the second-tier world knowledge graph is insufficient for responding to the second query;\naccessing a third-tier external knowledge base;\ndetermining the third-tier external knowledge graph is insufficient for responding to the second query; and\ndetermining a follow-up question to the user should be generated in which the second query is rephrased.\n9. The method of claim 1, further comprising:\nautomatically determining the first constraint refers to a first data value that is currently unavailable during the graph walk;\nautomatically presenting, via the chatbot, a request for the first data value;\nreceiving, via the chatbot, the first data value; and\nwherein the first result is based in part on the received first data value.\n10. The method of claim 1, further comprising using semantic role labeling to identify arguments in each of the first sub-query and the second sub-query.\n11. A system for generating responses to a query, the system comprising:\na processor;\nmachine-readable media including instructions which, when executed by the processor, cause the processor to:\nreceive from a first user, via a virtual chatbot, a first query that includes a first clause and a second clause;\nclean the first query using a regular expression (regex) filtering method to produce a filtered first query;\nautomatically split the first query into a first sub-query for the first clause and a second sub-query for the second clause using a dependency parser and neural network-based heuristics;\nidentify a first argument in the first sub-query and a second argument in the second sub-query;\ndetermine, using a cypher query, a node path for each of the first sub-query and the second sub-query;\nautomatically perform a graph walk through a portion of a first-tier knowledge graph associated with the virtual chatbot, the graph walk being constrained by the determined node paths;\nautomatically identify, during the graph walk and using semantic parsing, at least a first math-based constraint that is required in order to respond to the first query;\nautomatically retrieve from the first-tier knowledge graph, via the graph walk, a first result for the first sub-query and a second result for the second sub-query, wherein the first result differs from the second result; and\nautomatically present, via the virtual chatbot, a combined response to the first query that combines both the first result and the second result into a single statement that addresses both the first sub-query and the second sub-query.\n12. The system of claim 11, wherein the instructions further cause the processor to:\nautomatically classify the first query as at least a first query type; and\nselect a path for the graph walk based in part on the first query type.\n13. The system of claim 11, wherein the instructions further cause the processor to classify the first query as a first query type that is associated with one of a Boolean label, math label, policy label, and external knowledge base label.\n14. The system of claim 11, wherein the instructions further cause the processor to:\nreceive a second query; and\nclassify the second query as a second query type that is associated with an external knowledge base label in response to determining the first-tier knowledge graph is insufficient for responding to the second query.\n15. The system of claim 11, wherein the instructions further cause the processor to:\nreceive a second query;\ndetermine the first-tier knowledge graph is insufficient for responding to the second query;\naccess a second-tier world knowledge graph; and\nbase the second response on objects fetched from the second-tier knowledge graph.\n16. The system of claim 14, wherein the instructions further cause the processor to:\naccess a second-tier world knowledge graph;\ndetermine the second-tier world knowledge graph is insufficient for responding to the second query;\naccess a third-tier external knowledge base; and\nbase the second response on objects fetched from the third-tier external knowledge base.\n17. The system of claim 11, wherein the instructions further cause the processor to perform co-referencing of the first query by a natural language understanding system.\n18. The system of claim 11, wherein the instructions further cause the processor to:\nautomatically determine the first constraint refers to a first data value that is currently unavailable during the graph walk;\nautomatically present, via the chatbot, a request for the first data value;\nreceive, via the chatbot, the first data value; and\nwherein the first result is based in part on the received first data value.\n19. The system of claim 11, wherein the instructions further cause the processor to use semantic role labeling to identify arguments in each of the first sub-query and the second sub-query.\n20. A system comprising one or more computers and one or more storage devices storing instructions that are operable, when executed by the one or more computers, to cause the one or more computers to:\nreceive from a first user, via a virtual chatbot, a first query that includes a first clause and a second clause;\nclean the first query using a regular expression (regex) filtering method to produce a filtered first query;\nautomatically split the first query into a first sub-query for the first clause and a second sub-query for the second clause using a dependency parser and neural network-based heuristics;\nidentify a first argument in the first sub-query and a second argument in the second sub-query;\ndetermine, using a cypher query, a node path for each of the first sub-query and the second sub-query;\nautomatically perform a graph walk through a portion of a first-tier knowledge graph associated with the virtual chatbot, the graph walk being constrained by the determined node paths;\nautomatically identify, during the graph walk and using semantic parsing, at least a first math-based constraint that is required in order to respond to the first query;\nautomatically retrieve from the first-tier knowledge graph, via the graph walk, a first result for the first sub-query and a second result for the second sub-query, wherein the first result differs from the second result; and\nautomatically present, via the virtual chatbot, a combined response to the first query that combines both the first result and the second result into a single statement that addresses both the first sub-query and the second sub-query."
}